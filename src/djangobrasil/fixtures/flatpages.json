[{"pk": 13, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Agenda do Django no Brasil", "url": "/agenda/", "template_name": "flatpages/default.html", "sites": [1], "content": "<p>Os eventos relacionados direta ou indiretamente ao Django ser\u00e3o listados na agenda <a href=\"http://www.google.com/calendar/embed?src=npgp6shagqehu9kg3fs4teehbc%40group.calendar.google.com&ctz=America/Sao_Paulo\">Django Brasil</a>, do Google Calendar</p>\r\n\r\n<p>Para anunciar seu evento, entre em <a href=\"/contato/\">contato</a> conosco que o mesmo ser\u00e1 publicado por um dos administradores. Para tal, \u00e9 necess\u00e1rio informar:</p>\r\n\r\n<ul>\r\n<li>T\u00edtulo do evento (confer\u00eancia, encontro, ou semelhante)</li>\r\n<li>T\u00edtulo da apresenta\u00e7\u00e3o, curso, mini-curso, palestra ou semelhante</li>\r\n<li>Nome do palestrante</li>\r\n<li>Data/Hora</li>\r\n<li>Dura\u00e7\u00e3o</li>\r\n<li>Breve descri\u00e7\u00e3o</li>\r\n<li>URL se houver</li>\r\n</ul>\r\n\r\n<p>Voc\u00ea pode tamb\u00e9m assinar o <a href=\"http://www.google.com/calendar/feeds/npgp6shagqehu9kg3fs4teehbc%40group.calendar.google.com/public/basic\">feed da agenda</a>, pois assim ser\u00e1 avisado sempre que um novo evento for publicado.\r\n\r\n<p>\r\n<iframe src=\"//www.google.com/calendar/embed?mode=AGENDA&amp;height=600&amp;wkst=1&amp;bgcolor=%23FFFFFF&amp;src=npgp6shagqehu9kg3fs4teehbc%40group.calendar.google.com&amp;color=%230D7813&amp;ctz=America%2FSao_Paulo\" style=\" border-width:0 \" width=\"800\" height=\"600\" frameborder=\"0\" scrolling=\"no\"></iframe>\r\n</p>", "enable_comments": 0}}, {"pk": 11, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Casos de Sucesso", "url": "/casos-de-sucesso/", "template_name": "flatpages/casos_de_sucesso.html", "sites": [1], "content": "<p>Muitas empresas t\u00eam repensado a forma de desenvolver para a web e escolhido o Django de forma inovadora pelo Brasil. Temos hoje uma das mais vastas e variadas comunidades, cada vez mais fortemente apoiadas por institui\u00e7\u00f5es e empresas que possuem um compromisso por melhores resultados.</p>\r\n\r\n<p>Veja abaixo alguns cases que preparamos para voc\u00ea conhecer e ver um pouquinho do que outros est\u00e3o conquistando ao escolher o Django.</p>\r\n\r\n<div class=\"boxes\">\r\n<div class=\"box\"><a href=\"ucs/\">\r\n<img src=\"http://media.djangobrasil.org/djangobrasil/images/casos_de_sucesso/ucs_logo.gif\" class=\"logo\"/>\r\n<h3>Universidade de Caxias do Sul</h3>\r\n\r\nA UCS adotou o Django desde janeiro de 2007 e hoje possui um dos mais requisitados sites constru\u00eddos em Django. Atende diariamente a mais de 37 mil alunos e mais de 1800 funcion\u00e1rios e professores de suas 14 unidades de ensino.\r\n</a></div>\r\n\r\n<div class=\"box\"><a href=\"lupo/\">\r\n<img src=\"http://media.djangobrasil.org/djangobrasil/images/casos_de_sucesso/lupo_logo.gif\" class=\"logo\"/>\r\n<h3>Lupo S/A</h3>\r\n\r\nO site da Lupo S/A, uma das maiores marcas de meias e outros produtos t\u00eaxteis, foi criado pela ag\u00eancia PubDesign em tempo recorde. A conclus\u00e3o foi a absoluta convic\u00e7\u00e3o da din\u00e2mica do Django e a satisfa\u00e7\u00e3o da ag\u00eancia e dos clientes.\r\n</a></div>\r\n<!--\r\n<div class=\"box\">\r\n<img src=\"http://media.djangobrasil.org/djangobrasil/images/casos_de_sucesso/globo_logo.gif\" class=\"logo\"/>\r\n<h3>Globo.com</h3>\r\n\r\nA Globo.com \u00e9 um dos 100 portais mais visitados do mundo, com mais de 3 milh\u00f5es de visitas \u00fanicas di\u00e1rias. A empresa \u00e9 respons\u00e1vel pelo bra\u00e7o da Rede Globo na internet, pelo portal G1 e por mais diversos outros portais de grande destaque nacional.\r\n</div>\r\n\r\n<div class=\"box\">\r\n<img src=\"http://media.djangobrasil.org/djangobrasil/images/casos_de_sucesso/abril_logo.gif\" class=\"logo\"/>\r\n<h3>Editora Abril</h3>\r\n\r\nA Editora Abril - a maior do Brasil - n\u00e3o poupou elogios ao Django quando lan\u00e7ou o site \"100 anos da imigra\u00e7\u00e3o japonesa\". Os resultados foram surpreendentes e a empresa viu nisso motivos suficientes para iniciar outros trabalhos com ele.\r\n</div>\r\n\r\n<div class=\"box\">\r\n<img src=\"http://media.djangobrasil.org/djangobrasil/images/casos_de_sucesso/misterape_logo.gif\" class=\"logo\"/>\r\n<h3>MisterApe</h3>\r\n\r\nO MisterApe foi um dos primeiros sites lan\u00e7ados em Django no Brasil. Seu crescimento tem sido cont\u00ednuo, pontuado por algumas contrata\u00e7\u00f5es e expans\u00f5es ao longo do tempo.\r\n</div>\r\n\r\n<div class=\"box\">\r\n<img src=\"http://media.djangobrasil.org/djangobrasil/images/casos_de_sucesso/visiotec_logo.gif\" class=\"logo\"/>\r\n<h3>Visiotec</h3>\r\n\r\nInstalada em Uberl\u00e2ndia, Minas Gerais, a Visiotec \u00e9 uma ag\u00eancia de cria\u00e7\u00e3o de sites que trocou o PHP pelo Django e viu suas entregas evolu\u00edrem de assustadora. Em poucos meses a empresa passou a construir portais em Django, o que antes teria uma curva de aprendizado muito maior.\r\n</div>\r\n\r\n<div class=\"box\">\r\n<img src=\"http://media.djangobrasil.org/djangobrasil/images/casos_de_sucesso/pubdesign_logo.gif\" class=\"logo\"/>\r\n<h3>PubDesign</h3>\r\n\r\nFundada em 2000, \u00e9 uma das ag\u00eancias de cria\u00e7\u00e3o para web de maior destaque do interior paulista. Adotou o Django para a cria\u00e7\u00e3o do site de um grande cliente e ao ver os resultados, passou a trabalhar cada vez mais com ele.\r\n</div>\r\n-->\r\n</div>", "enable_comments": 0}}, {"pk": 14, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Lupo S/A", "url": "/casos-de-sucesso/lupo/", "template_name": "flatpages/casos_de_sucesso.html", "sites": [1], "content": "<style type=\"text/css\">\r\nblockquote {\r\n    font-style: italic;\r\n    margin: 10px 0 10px 30px;\r\n}\r\n</style>\r\n\r\n<img src=\"http://media.djangobrasil.org/djangobrasil/images/casos_de_sucesso/lupo_logo.gif\" align=\"left\" class=\"ilustracao\" style=\"margin-right: 10px\"/>\r\n\r\n<p>A maior ind\u00fastria de meias do pa\u00eds confiou seu novo projeto institucional (www.lupo.com.br) \u00e0 <a href=\"http://www.pubdesign.com.br/\"><b>Pub Design Ag\u00eancia de Internet</b></a>, que por sua vez escolheu o framework Django para executar com efici\u00eancia o novo web site. O fato do Django ser constru\u00eddo com a linguagem Python foi determinante para a decis\u00e3o final da nossa ag\u00eancia.</p>\r\n\r\n<p>O projeto antigo da empresa era desenvolvido em Flash Adobe e n\u00e3o supria as exig\u00eancias do cliente em rela\u00e7\u00e3o a indexa\u00e7\u00e3o nos principais buscadores. Al\u00e9m disso a velocidade de navega\u00e7\u00e3o e a dificuldade nas atualiza\u00e7\u00f5es e modifica\u00e7\u00f5es foram fatores determinantes para a mudan\u00e7a de linguagem.</p>\r\n\r\n<p style=\"text-align:center\"><img src=\"http://media.djangobrasil.org/djangobrasil/images/casos_de_sucesso/lupo_imagem1.jpg\"/></p>\r\n<p style=\"text-align:center\"><img src=\"http://media.djangobrasil.org/djangobrasil/images/casos_de_sucesso/lupo_imagem2.jpg\"/></p>\r\n\r\n<p><b>A experi\u00eancia no desenvolvimento com o Django foi fant\u00e1stica.</b></p>\r\n\r\n<p>O desempenho da equipe melhorou muito e o tempo de desenvolvimento caiu pela metade. A resposta r\u00e1pida nos resultados de busca de mais de 3 mil produtos no site surpreenderam a todos. A rapidez do Front na hora da navega\u00e7\u00e3o \u00e9 no m\u00ednimo empolgante.</p>\r\n\r\n<p><b>O resultado \u00e9 tudo de bom: Ag\u00eancia e cliente 100% satisfeitos.</b></p>\r\n\r\n<p>Conferira os depoimentos do departamento de marketing da Lupo abaixo:</p>\r\n\r\n<blockquote><p>\u201dO Site da Lupo est\u00e1 mais interativo. A sua interface al\u00e9m de agrad\u00e1vel proporciona uma f\u00e1cil \u00e9 \u00e1gil navega\u00e7\u00e3o. A escolha pela tecnologia empregada foi a mais acertada.</p>\r\n\r\n<p>Nestes tr\u00eas \u00faltimos anos de trabalho , podemos dizer que a Pub Design consegue superar as nossas expectativas, trabalhando continuamente com id\u00e9ias interativas para nos manter no patamar de uma empresa moderna e competitiva.\u201d</p></blockquote>\r\n\r\n<p style=\"text-align:right\"><b>Viviane Ferreira</b> \u2013 Marketing Lupo S/A</p>\r\n\r\n<blockquote><p>\u201cO novo site Lupo ficou maravilhoso!</p>\r\n\r\n<p>Sem d\u00favidas superou nossas expectativas tanto no novo layout quanto na agilidade de navega\u00e7\u00e3o da p\u00e1gina Todos se esfor\u00e7aram ao m\u00e1ximo para disponibilizar o que h\u00e1 de mais moderno aos nossos consumidores.</p>\r\n\r\n<p>Parab\u00e9ns a todos que participaram do projeto Lupo, voc\u00eas s\u00e3o demais! \u201c</p></blockquote>\r\n\r\n<p style=\"text-align:right\"><b>L\u00edvia Colbari</b> \u2013 Marketing Lupo S/A</p>\r\n", "enable_comments": 0}}, {"pk": 12, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Caso de Sucesso - Universidade de Caxias do Sul", "url": "/casos-de-sucesso/ucs/", "template_name": "flatpages/casos_de_sucesso.html", "sites": [1], "content": "<img src=\"http://media.djangobrasil.org/djangobrasil/images/casos_de_sucesso/ucs_logo2.gif\" align=\"left\" class=\"ilustracao\"/>\r\n\r\n<p><b>\r\nEm janeiro de 2007, a equipe de TI da Universidade de Caxias do Sul iniciou uma transforma\u00e7\u00e3o em seus servi\u00e7os pela web. O objetivo era resolver o problema cr\u00edtico de desempenho em grande parte destes servi\u00e7os. Hoje esta \u00e9 uma p\u00e1gina virada, depois da migra\u00e7\u00e3o de uma gama variada de servi\u00e7os Web para o Django e conseguir assim uma alta performance desejada e maior satisfa\u00e7\u00e3o dos usu\u00e1rios.\r\n</b></p>\r\n\r\n<p>\r\nAt\u00e9 o final de 2006, a maior parte dos servi\u00e7os web da Universidade era constru\u00edda com Zope/Plone, uma dobradinha poderosa para constru\u00e7\u00e3o de sites de conte\u00fado. Entretanto, para uma grande parte desses servi\u00e7os, a ado\u00e7\u00e3o dessas ferramentas n\u00e3o surtiu o efeito desejado, j\u00e1 que tinham uma performance baixa e se tornava cada vez mais um problema para a equipe de TI.\r\n</p>\r\n\r\n<p>\r\nA Universidade de Caxias do Sul possui <b>14 unidades de ensino</b> no interior do Rio Grande do Sul, nas regi\u00f5es Nordeste e no Vale do Ca\u00ed. Distribu\u00eddos por esses campus est\u00e3o <b>1.845 funcion\u00e1rios</b>, <b>1.371 professores</b> e <b>5.000 computadores</b> com a finalidade de atender aos mais de <b>37 mil alunos</b> que estudam na UCS. \r\n</p>\r\n\r\n<p style=\"text-align: center\">\r\n<img src=\"http://media.djangobrasil.org/djangobrasil/images/casos_de_sucesso/ucs_foto.jpg\"/>&nbsp;&nbsp;&nbsp;\r\n<img src=\"http://media.djangobrasil.org/djangobrasil/images/casos_de_sucesso/ucs_foto2.jpg\"/>\r\n</p>\r\n\r\n<p>\r\nA demanda di\u00e1ria de todas essas pessoas inclui servi\u00e7os que v\u00e3o de Matr\u00edculas on-line, Hist\u00f3rico Escolar, Gest\u00e3o de Infra-estrutura, Recursos Humanos, Solicita\u00e7\u00e3o de Servi\u00e7os, Controle Or\u00e7ament\u00e1rio e Avalia\u00e7\u00e3o Online a diversos outros servi\u00e7os, alguns ainda em andamento ou em planejamento, como o futuro CRM e o novo sistema de Administra\u00e7\u00e3o Acad\u00eamica. \r\n</p>\r\n\r\n<p>\r\nPara atender a essa demanda, a Universidade disp\u00f5e de um portal chamado <b>UCSVirtual</b>, constru\u00eddo em sua maior parte em Django e mantido hoje por 8 profissionais de tecnologia, 6 deles dedicados ao Django. A equipe de desenvolvedores \u00e9 composta por 17 pessoas altamente qualificadas. \r\n</p>\r\n\r\n<img src=\"/media/images/casos_de_sucesso/ucs_ss.jpg\" align=\"left\" class=\"ilustracao\"/>\r\n\r\n<p>\r\nO sistema UCSVirtual \u00e9 um portal que integra um conjunto de sites com servi\u00e7os variados, em diversas linguagens e tecnologias que opera em arquiteturas de diversos servidores, que utilizam um servi\u00e7o \u00fanico de autentica\u00e7\u00e3o e sistemas (single sign on) de balanceamento de carga para seu efetivo funcionamento. \r\n</p>\r\n\r\n<p>\r\nA decis\u00e3o do novo sistema, constru\u00eddo em Django, bancos de dados <b>Oracle</b>, servidores com <b>Linux</b> e <b>Apache</b>, foi levar os bancos de dados de volta ao relacional, o que aliado \u00e0 vantajosa curva de aprendizado e flexibilidade do Django, possibilitou que a migra\u00e7\u00e3o fosse feita num curto per\u00edodo e com a seguran\u00e7a que se fazia necess\u00e1ria. \r\n</p>\r\n\r\n<p>\r\nA <b>maturidade do Django j\u00e1 em 2006</b> foi um fator decisivo no momento da sua sele\u00e7\u00e3o, ap\u00f3s a avalia\u00e7\u00e3o dos frameworks mais populares do mercado. O fato dele ser constru\u00eddo em <b>Python</b> tamb\u00e9m foi importante, por se tratar de uma linguagem <b>madura e est\u00e1vel</b>, que oferece diversas bibliotecas, uma comunidade s\u00f3lida e por j\u00e1 ser conhecida pelos profissionais da Universidade.\r\n</p>", "enable_comments": 0}}, {"pk": 2, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Documenta\u00e7\u00e3o", "url": "/documentacao/", "template_name": "flatpages/docs.html", "sites": [1], "content": "Estamos traduzindo a documenta\u00e7\u00e3o oficial para o portugu\u00eas. Caso queira contribuir, visite a p\u00e1gina do  `grupo de localiza\u00e7\u00e3o para o portugu\u00eas`_ e do nosso `projeto de localiza\u00e7\u00e3o`_ hospedado no Google Code.\r\n\r\n.. _grupo de localiza\u00e7\u00e3o para o portugu\u00eas: http://l10n.djangobrasil.org\r\n.. _projeto de localiza\u00e7\u00e3o: http://django-l10n-portuguese.googlecode.com\r\n\r\nA tradu\u00e7\u00e3o da documenta\u00e7\u00e3o \u00e9 da vers\u00e3o em desenvolvimento (*trunk*) do Django. \u00c9 poss\u00edvel que ela esteja um pouco desatualizada em fun\u00e7\u00e3o da grande movimenta\u00e7\u00e3o atual no *trunk*.\r\n\r\n\r\nO Django Book\r\n========================================================\r\n\r\nO pessoal do *Django Project* escreveu o livro oficial do Django, ele est\u00e1 dispon\u00edvel on-line (em ingl\u00eas) no endere\u00e7o djangobook.com_. Note que \u00e9 assumido o uso da vers\u00e3o 0.96 do Django.\r\n\r\n.. _djangobook.com: http://www.djangobook.com\r\n\r\n\r\nA documenta\u00e7\u00e3o essencial (tradu\u00e7\u00e3o)\r\n========================================================\r\n\r\n* `Vis\u00e3o geral`_ do Django\r\n\r\n* `Guia de instala\u00e7\u00e3o`_\r\n\r\n* Tutorial: escrevendo sua primeira aplica\u00e7\u00e3o em Django\r\n\r\n  - `Parte 1`_: Inicializa\u00e7\u00e3o, cria\u00e7\u00e3o de *models* e API do banco de dados\r\n\r\n  - `Parte 2`_: Explorando a interface administrativa gerada automaticamente\r\n\r\n  - `Parte 3`_: Criando *views* para interfaces p\u00fablicas\r\n\r\n  - `Parte 4`_: Processamento simples de formu\u00e1rio e *views* gen\u00e9ricas\r\n\r\n  .. _Parte 1:  tutorial01/\r\n  .. _Parte 2:  tutorial02/\r\n  .. _Parte 3:  tutorial03/\r\n  .. _Parte 4:  tutorial04/\r\n\r\n* Perguntas e Respostas Frequentes (FAQ)\r\n\r\n* `Como ler esta documenta\u00e7\u00e3o`_\r\n\r\n.. _Vis\u00e3o geral:               visaogeral/\r\n.. _Guia de instala\u00e7\u00e3o:  instalar/\r\n.. _Perguntas e Respostas Frequentes: faq/\r\n.. _Como ler esta documenta\u00e7\u00e3o: documentacao/\r\n\r\n\r\nDocumenta\u00e7\u00e3o oficial\r\n========================================================\r\n\r\nAcesse a `p\u00e1gina de documenta\u00e7\u00e3o`_ do site oficial do projeto.\r\n\r\n.. _p\u00e1gina de documenta\u00e7\u00e3o: http://www.djangoproject.com/documentation\r\n\r\n\r\nDocumenta\u00e7\u00e3o da comunidade\r\n========================================================\r\n\r\nDocumenta\u00e7\u00e3o desenvolvida e mantida pela comunidade brasileira:\r\n\r\n* `CookBook <http://code.djangoproject.com/wiki/CookBookPortugues>`_\r\n", "enable_comments": 0}}, {"pk": 3, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Como ler a documenta\u00e7\u00e3o do Django", "url": "/documentacao/documentacao/", "template_name": "flatpages/docs.html", "sites": [1], "content": "..\r\n.. META INFORMATION OF TRADUCTION\r\n..\r\n..   $TranslationStatus: Done$\r\n..   $OriginalRevision: 7618$\r\n..   $TraductionAuthors: Bruno Tikami, Guilherme (semente)$\r\n..\r\n.. INFO OF THIS FILE (DO NOT EDIT! UPDATED BY SUBVERSION)\r\n..\r\n..   $HeadURL: https://django-l10n-portuguese.googlecode.com/svn/trunk/docs/documentation_pt-br.txt $\r\n..   $LastChangedRevision: 14 $\r\n..   $LastChangedBy: semente $\r\n..   $LastChangedDate: 2008-06-12 12:04:39 -0300 (Thu, 12 Jun 2008) $\r\n..\r\n\r\n=================================\r\nComo ler a documenta\u00e7\u00e3o do Django\r\n=================================\r\n\r\nN\u00f3s nos esfor\u00e7amos bastante para fazer com que a documenta\u00e7\u00e3o do\r\nDjango seja \u00fatil, de f\u00e1cil leitura e t\u00e3o completa quanto\r\nposs\u00edvel. Aqui v\u00e3o algumas dicas de como aproveit\u00e1-la da melhor\r\nmaneira poss\u00edvel, junto com algumas orienta\u00e7\u00f5es de uso.\r\n\r\n(Sim, essa \u00e9 a documenta\u00e7\u00e3o sobre a documenta\u00e7\u00e3o. Fique certo de que\r\nn\u00e3o temos planos para escrever um documento sobre como ler o documento\r\nsobre a documenta\u00e7\u00e3o.)\r\n\r\nComo a documenta\u00e7\u00e3o \u00e9 atualizada\r\n================================\r\n\r\nComo os c\u00f3digos base do Django s\u00e3o desenvolvidos e melhorados\r\ndiariamente, nossa documenta\u00e7\u00e3o est\u00e1 melhorando de forma\r\nconsistente. N\u00f3s melhoramos nossa documenta\u00e7\u00e3o por v\u00e1rios motivos:\r\n\r\n    * para fazer corre\u00e7\u00f5es de conte\u00fado, como corre\u00e7\u00f5es gramaticias ou\r\n      de digita\u00e7\u00e3o;\r\n    * para adicionar informa\u00e7\u00f5es e ou exemplos a se\u00e7\u00f5es existentes que\r\n      precisam ser expandidas;\r\n    * para documentar funcionalidades Django que ainda n\u00e3o est\u00e3o\r\n      documentadas (A lista destas funcionalidades est\u00e1 diminuindo,\r\n      mas ela ainda existe);\r\n    * para adicionar documenta\u00e7\u00e3o de novas funcionalidades assim que\r\n      elas s\u00e3o adicionadas ou assim que a API do Django muda.\r\n    \r\nA documenta\u00e7\u00e3o do Django \u00e9 mantida no mesmo sistema de controle do\r\nc\u00f3digo-fonte.  Ela reside em `django/trunk/docs`_ de nosso servidor\r\nSubversion. Cada documento \u00e9 um arquivo texto separado que cobre um\r\n\u00fanico e espec\u00edfico t\u00f3pico, como o framework \"generic views\" ou como\r\nconstruir um modelo de banco de dados.\r\n\r\n.. _django/trunk/docs: http://code.djangoproject.com/browser/django/trunk/docs\r\n\r\n\r\nOnde consegu\u00ed-la\r\n================\r\n\r\nVoc\u00ea pode ler a documenta\u00e7\u00e3o do Django de v\u00e1rios modos. Ela est\u00e1, em\r\nordem de prefer\u00eancia:\r\n\r\nNa Web\r\n------\r\n\r\nA vers\u00e3o mais nova da documenta\u00e7\u00e3o do Django (em ingl\u00eas) fica em\r\nhttp://www.djangoproject.com/documentation/. Essas p\u00e1ginas HTML s\u00e3o\r\ngeradas automaticamente \u00e0 partir dos arquivos texto no controle de\r\nvers\u00e3o. Isso significa que elas refletem o \"mais novo e o melhor\" do\r\nDjango -- cont\u00eam as mais novas corre\u00e7\u00f5es e adi\u00e7\u00f5es e discutem as mais\r\nnovas funcionalidades do Django, que talvez s\u00f3 estejam dispon\u00edveis na\r\nvers\u00e3o em desenvolvimento. (D\u00ea uma olhada em \"Diferen\u00e7as entre as\r\nvers\u00f5es\", a seguir.)\r\n\r\nN\u00f3s te encorajamos a ajudar na melhoria dos documentos atrav\u00e9s do\r\nenvio de altera\u00e7\u00f5es, corre\u00e7\u00f5es e sugest\u00f5es pelo `sistema de tickets da\r\ndocumenta\u00e7\u00e3o oficinal`_ ou da `tradu\u00e7\u00e3o para o portugu\u00eas`_. Os\r\ndesenvolvedores do Django monitoram constantemente o sistema de\r\ntickets e usam o seu retorno (feedback) para melhorar a documenta\u00e7\u00e3o\r\npara todos.\r\n\r\nObserve, entretanto, que os tickets devem estar relacionados\r\nexplicitamente com a documenta\u00e7\u00e3o e n\u00e3o servir de meio de contato para\r\nsuporte t\u00e9cnico.  Se voc\u00ea precisa de alguma configura\u00e7\u00e3o espec\u00edfica do\r\nDjango, tente pedir ajudar nas listas `django-users`_,\r\n`django-brasil`_, ou nos canais IRC `#django`_ e `#django-br`_.\r\n\r\n.. _sistema de tickets da documenta\u00e7\u00e3o oficinal: http://code.djangoproject.com/simpleticket?component=Documentation\r\n.. _tradu\u00e7\u00e3o para o portugu\u00eas: http://code.google.com/p/django-l10n-portuguese/issues/entry\r\n.. _django-users: http://groups.google.com/group/django-users\r\n.. _django-brasil: http://groups.google.com/group/django-brasil\r\n.. _#django: irc://irc.freenode.net/django\r\n.. _#django-br: irc://irc.freenode.net/django-br\r\n\r\nEm texto puro\r\n-------------\r\n\r\nPara uma leitura offline, ou por simples conveni\u00eancia, voc\u00ea pode ler a\r\ndocumenta\u00e7\u00e3o do Django em texto puro.\r\n\r\nSe voc\u00ea estiver usando uma vers\u00e3o oficial do Django, repare que o\r\narquivo zipado (tarball) do framework cont\u00e9m um diret\u00f3rio ``docs/``\r\ncontendo toda a documenta\u00e7\u00e3o desta vers\u00e3o.\r\n\r\nSe voc\u00ea estiver usando a vers\u00e3o em desenvolvimento do Django (tamb\u00e9m\r\nconhecida como vers\u00e3o \"trunk\" do Subversion), perceba que o diret\u00f3rio\r\n``docs/`` cont\u00eam toda a documenta\u00e7\u00e3o. Voc\u00ea pode dar um ``svn update``,\r\nda mesma forma que voc\u00ea d\u00e1 um ``svn update`` no c\u00f3digo Python para\r\nter as \u00faltimas modifica\u00e7\u00f5es.\r\n\r\nVoc\u00ea pode obter a vers\u00e3o mais nova da documenta\u00e7\u00e3o no Subversion do\r\nDjango utilizando este comando shell::\r\n\r\n    svn co http://code.djangoproject.com/svn/django/trunk/docs/ django_docs\r\n\r\nUma forma `low-tech` de tirar proveito da documenta\u00e7\u00e3o em texto \u00e9 usar\r\no utilit\u00e1rio Unix ``grep`` para procurar por uma frase em toda\r\ndocumenta\u00e7\u00e3o. Por exemplo, isso ir\u00e1 mostrar todas as ocorr\u00eancias da\r\nfrase \"edit_inline\" em qualquer documento do Django::\r\n\r\n    grep edit_inline /path/to/django/docs/*.txt\r\n\r\nFormata\u00e7\u00e3o\r\n~~~~~~~~~~\r\n\r\nOs arquivos texto da documenta\u00e7\u00e3o s\u00e3o escritos em formato ReST\r\n(ReStructured Text). Isso significa que eles s\u00e3o f\u00e1ceis de ler e\r\ntamb\u00e9m s\u00e3o formatados de modo que facilitar\u00e1 convert\u00ea-los em outros\r\nformatos, como o HTML. Se voc\u00ea tiver a biblioteca `reStructuredText`_\r\ninstalada, voc\u00ea pode usar 'rst2html' para gerar seus pr\u00f3prios arquivos\r\nHTML.\r\n\r\n.. _reStructuredText: http://docutils.sourceforge.net/rst.html\r\n\r\nDiferen\u00e7as entre vers\u00f5es\r\n========================\r\n\r\nComo mencionado anteriormente, a documenta\u00e7\u00e3o no nosso reposit\u00f3rio\r\nSubversion cont\u00e9m as \"mais novas e melhores\" altera\u00e7\u00f5es e\r\nadi\u00e7\u00f5es. Estas altera\u00e7\u00f5es constantemente cont\u00e9m a documenta\u00e7\u00e3o de\r\nnovas funcionalidades adicionadas \u00e0 vers\u00e3o em desenvolvimento do\r\nDjango -- a vers\u00e3o Subversion (\"trunk\") do Django.  Por isso, \u00e9\r\nimportante prestar aten\u00e7\u00e3o \u00e0 nossa pol\u00edtica de manter a documenta\u00e7\u00e3o\r\ndas v\u00e1rias vers\u00f5es do framework.\r\n\r\nN\u00f3s seguimos a seguinte pol\u00edtica:\r\n\r\n    * a vers\u00e3o principal da documenta\u00e7\u00e3o, em djangoproject.com, \u00e9 uma\r\n      vers\u00e3o HTML dos \u00faltimos documentos no Subversion. Esta\r\n      documenta\u00e7\u00e3o corresponde a \u00faltima vers\u00e3o oficial do Django, mais\r\n      qualquer funcionalidades que n\u00f3s adicionamos ou alteramos no\r\n      framework *desde* o lan\u00e7amento da ultima vers\u00e3o.\r\n   \r\n    * \u00c0 medida que n\u00f3s adicionamos funcionalidades \u00e0 vers\u00e3o em\r\n      desenvolvimento do Django, n\u00f3s tentamos atualizar a documenta\u00e7\u00e3o\r\n      na mesma transa\u00e7\u00e3o `commit` do Subversion.\r\n\r\n    * Para diferenciar as altera\u00e7\u00f5es/adi\u00e7\u00f5es na documenta\u00e7\u00e3o, n\u00f3s\r\n      usamos a frase **New in Django development version** (ou, nas\r\n      tradu\u00e7\u00f5es, **Novo na vers\u00e3o de desenvolvimento do Django**). Na\r\n      pr\u00e1tica, isso significa que a vers\u00e3o atual disponibilizada em\r\n      djangoproject.com pode ser usada por usu\u00e1rios tanto da \u00faltima\r\n      vers\u00e3o lan\u00e7ada quanto da vers\u00e3o em desenvolvimento.\r\n      \r\n    * A documenta\u00e7\u00e3o de uma vers\u00e3o em particular do Django \u00e9\r\n      \"congelada\" ap\u00f3s ela ter sido oficialmente lan\u00e7ada. Ela se\r\n      mant\u00e9m como uma foto dos documentos no momento do\r\n      lan\u00e7amento. N\u00f3s abriremos exce\u00e7\u00f5es \u00e0 essa regra em casos de\r\n      altera\u00e7\u00f5es de seguran\u00e7as retroativas ou alguma outra altera\u00e7\u00e3o\r\n      retroativa. Uma vez que a documenta\u00e7\u00e3o \u00e9 congelada, n\u00f3s\r\n      adicionaremos uma nota no topo de cada documento congelado\r\n      dizendo \"These docs are frozen for Django version XXX\" (ou,\r\n      \"Esses documentos est\u00e3o congelados para a vers\u00e3o XXX do Django\").\r\n \r\n    * A `p\u00e1gina da documenta\u00e7\u00e3o principal`_ inclui links para a\r\n      documenta\u00e7\u00e3o de todas as vers\u00f5es anteriores.\r\n\r\n.. _p\u00e1gina da documenta\u00e7\u00e3o principal: http://www.djangoproject.com/documentation/", "enable_comments": 0}}, {"pk": 7, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Como instalar o Django", "url": "/documentacao/instalar/", "template_name": "flatpages/docs.html", "sites": [1], "content": "..\r\n.. META INFORMATION OF TRADUCTION\r\n..\r\n..   $TranslationStatus: Done, waiting revision.$\r\n..   $OriginalRevision: XXXX (I don't know)$\r\n..   $TraductionAuthors: Bruno Tikami$\r\n..\r\n.. INFO OF THIS FILE (DO NOT EDIT! UPDATED BY SUBVERSION)\r\n..\r\n..   $HeadURL: https://django-l10n-portuguese.googlecode.com/svn/trunk/docs/install_pt-br.txt $\r\n..   $LastChangedRevision: 14 $\r\n..   $LastChangedBy: semente $\r\n..   $LastChangedDate: 2008-06-12 12:04:39 -0300 (Thu, 12 Jun 2008) $\r\n..\r\n\r\n======================\r\nComo instalar o Django\r\n======================\r\n\r\nEste documento colocar\u00e1 o seu Django para funcionar\r\n\r\nInstalando o Python\r\n===================\r\n\r\nPor ser um framework escrito em Python, a instala\u00e7\u00e3o do Django precisa da instala\u00e7\u00e3o do Python\r\n\r\nEle roda com Python 2.3 e suas vers\u00f5es mais novas.\r\n\r\nBaixe o Python de http://python.org. Se voc\u00eas estiverem usando Linux ou Max OS X, voc\u00ea\r\nprovavelmente j\u00e1 o tem instalado.\r\n\r\nInstalando Apache e mod_python\r\n==============================\r\n\r\nSe voc\u00ea quiser apenas experimentar o Django, avance para a pr\u00f3xima sess\u00e3o,\r\no Django vem com um servidor web LIGHTWEIGHT que voc\u00ea pode usar para testes,\r\npor isso voc\u00ea n\u00e3o precisa instalar e configurar  o Apache at\u00e9 estar pronto\r\npara colocar o Django em produ\u00e7\u00e3o.\r\n\r\nSe voc\u00ea quer usar usar o Django em um site em produ\u00e7\u00e3o, use o Apache com `mod_python`_.\r\nmod_python \u00e9 similar ao mod_perl, ele embute o Python dentro do Apache e carrega na\r\nmem\u00f3ria c\u00f3digos-fonte escritos em Python quando o servidor \u00e9 iniciado. Este c\u00f3digo\r\nfica na mem\u00f3ria durante toda a vida do processo do Apache, o que leva a um ganho de\r\ndesempenho significativo sobre outras configura\u00e7\u00f5es de servidor. Garanta que voc\u00ea\r\ntem o Apache instalado e que o m\u00f3dulo  mod_python esteja ativo. Django requer Apache\r\n2.x e mod_python 3.x.\r\n\r\nLeia `Como usar o Django com mod_python`_ para maiores informa\u00e7\u00f5es sobre como\r\nconfigurar o mod_python uma vez que voc\u00ea o tenha instalado.\r\n\r\nSe voc\u00ea n\u00e3o puder usar o mod_python pro qualquer motivo, n\u00e3o se desespere:\r\no Django segue a especifica\u00e7\u00e3o WSGI, o que permite que ele rode em uma variedade\r\nde plataformas de servidor. Leia o wiki `server-arrangements`_ para\r\ninforma\u00e7\u00f5es espec\u00edficas de instala\u00e7\u00e3o em cada plataforma.\r\n\r\n.. _mod_python: http://www.modpython.org/\r\n.. _WSGI: http://www.python.org/peps/pep-0333.html\r\n.. _Como usar o Django com mod_python: http://www.djangoproject.com/documentation/modpython/\r\n.. _server-arrangements: http://code.djangoproject.com/wiki/ServerArrangements\r\n\r\nPonha seu banco de dados para funcionar\r\n=======================================\r\n\r\nSe voc\u00ea pretende usar a API de banco de dados do Django, voc\u00ea vai precisar ter\r\ncerteza de que seu servidor de banco de dados est\u00e1 funcionando. Django funciona com\r\nPostgreSQL_, MySQL_, Oracle_ e SQLite_ (apesar do SQLite n\u00e3o precisar de um servidor\r\nseparado para rodar).\r\n\r\nAl\u00e9m disso, voc\u00ea vai precisar ter certeza de que as suas bibliotecas Python de acesso\r\nao banco de dados est\u00e3o instaladas.\r\n\r\n* Se voc\u00ea est\u00e1 usando POstgreSQL, voc\u00ea vai precisar do pacote psycopg_, o Django suporta\r\n  as vers\u00f5es 1 e 2. (Quando voc\u00ea for configurar a camada de banco de dados do Django,\r\n  escolha ``postgresql`` para a vers\u00e3o 1 ou ``postgresql_psycopg2`` para a vers\u00e3o 2.)\r\n\r\n  Se voc\u00ea estiver usando Windows, olhe a `vers\u00e3o  n\u00e3o oficial compilada para Windows`_.\r\n\r\n\r\n* Se voc\u00ea estiver usando MySQL, voc\u00ea vai precisar da biblioteca MySQLdb_ (vers\u00e3o 1.2.1p2 ou superior).\r\n  Voc\u00ea tamb\u00e9m vai precisar ler as observa\u00e7\u00f5es espec\u00edficas de bancos de dados para o\r\n  `backend MySQL`_.\r\n\r\n* Se voc\u00ea estiver usando SQLite e Python 2.3 ou Python 2.4, vai precisar da biblioteca\r\n  pysqlite_. Use a vers\u00e3o 2.0.3 ou superior. A vers\u00e3o 2.5 do Python j\u00e1 vem com\r\n  um inv\u00f3lucro (wrapper) sqlite na biblioteca padr\u00e3o, ent\u00e3o voc\u00ea n\u00e3o precisa instalar\r\n  mais nada neste caso.\r\n\r\n* Se voc\u00ea estiver usando Oracle, precisar\u00e1 de cx_Oracle_, vers\u00e3o 4.3.1 ou superior.\r\n  Voc\u00ea tamb\u00e9m vai precisar ler as observa\u00e7\u00f5es espec\u00edficas de bancos de dados para o\r\n  `backend Oracle`_.\r\n\r\nSe voc\u00ea pretende usar o comando ``manage.py syncdb`` do Django para criar\r\nautomaticamente as tabelas para os seus modelos, voc\u00ea precisa garantir que\r\no Django tem permiss\u00e3o para criar tabelas no database que voc\u00ea est\u00e1 usando;\r\nse voc\u00ea pretende criar as tabelas manualmente, precisa apenas dar permiss\u00e3o de\r\n``SELECT``, ``INSERT``, ``UPDATE`` e ``DELETE`` para o usu\u00e1rio do Django\r\n(configurado em settings.py, atributo DATABASE_USER). O Django n\u00e3o usa comandos\r\n``ALTER TABLE``, ent\u00e3o n\u00e3o precisa de permiss\u00e3o para isso. Se voc\u00ea pretende\r\nusar o `framework de teste`_ do Django com 'data fixtures', o Django tamb\u00e9m\r\nvai precisar de permiss\u00e3o para criar uma tabela tempor\u00e1ria de teste.\r\n\r\n.. _PostgreSQL: http://www.postgresql.org/\r\n.. _MySQL: http://www.mysql.com/\r\n.. _Django's ticket system: http://code.djangoproject.com/report/1\r\n.. _psycopg: http://initd.org/tracker/psycopg\r\n.. _vers\u00e3o  n\u00e3o oficial compilada para Windows: http://stickpeople.com/projects/python/win-psycopg/\r\n.. _MySQLdb: http://sourceforge.net/projects/mysql-python\r\n.. _SQLite: http://www.sqlite.org/\r\n.. _pysqlite: http://initd.org/tracker/pysqlite\r\n.. _backend MySQL: http://www.djangoproject.org/documentation/databases/\r\n.. _cx_Oracle: http://cx-oracle.sourceforge.net/\r\n.. _Oracle: http://www.oracle.com/\r\n.. _backend Oracle: http://www.djangoproject.org/documentation/databases/#oracle-notes\r\n.. _framework de teste: http://www.djangoproject.org/documentation/testing/\r\n\r\nRemova qualquer vers\u00e3o antiga do Django\r\n=======================================\r\n\r\nSe voc\u00ea est\u00e1 atualizando sua instala\u00e7\u00e3o do Django, vai precisar desinstalar\r\na vers\u00e3o antida antes de instalar a nova.\r\n\r\nSe voc\u00ea instalaou o Django usando ``setup.py install``, o processo de desisntala\u00e7\u00e3o\r\n\u00e9 simples: basta apagar o diret\u00f3rio ``django`` de seu diret\u00f3rio ``site-packages``.\r\n\r\nSe voc\u00ea instalou o Django usando um arquivo egg Python, remova o arquivo ``.egg``\r\ndo Django e remova a refer\u00eancia a ele no arquivo ``easy-install.pth`` (dentro\r\ndo diret\u00f3rio site-packages).\r\n\r\n.. admonition:: Onde fica o diret\u00f3rio ``site-packages`` ?\r\n\r\n    A localiza\u00e7\u00e3o do diret\u00f3rio ``site-packages`` depende de seu sistema operacional\r\n    e o local em que o Python foi instalado. Para descobrir a localiza\u00e7\u00e3o de seu\r\n    ``site-packages``, execute o seguinte comando::\r\n\r\n        python -c \"from distutils.sysconfig import get_python_lib; print get_python_lib()\"\r\n\r\n    (Observe que este comando deve ser executado em um terminal, n\u00e3o no prompt interativo do Python)\r\n\r\nInstalando o Django\r\n===================\r\n\r\nAs instru\u00e7\u00f5es de instala\u00e7\u00e3o s\u00e3o um tanto diferentes, dependendo se voc\u00ea\r\nest\u00e1 instalando um pacote de uma distribui\u00e7\u00e3o espec\u00edfica, baixando a \u00faltima\r\nvers\u00e3o oficial lan\u00e7ada ou usando a vers\u00e3o em desenvolvimento.\r\n\r\nO processo \u00e9 simples, independente de qual voc\u00ea escolher.\r\n\r\nInstalando um pacote de uma distribui\u00e7\u00e3o espec\u00edfica\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nVerifique as `observa\u00e7\u00f5es espec\u00edficas de distribui\u00e7\u00f5es`_ para ver a sua\r\nplataforma/distribui\u00e7\u00e3o fornece pacotes/instaladores oficiais do Django.\r\nPacotes fornecidos por distribui\u00e7\u00f5es geralmente permitem a instala\u00e7\u00e3o autom\u00e1tica\r\nde depend\u00eancias e atualiza\u00e7\u00f5es f\u00e1ceis.\r\n\r\nInstalando uma vers\u00e3o oficial\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    1. Baixe a \u00faltima vers\u00e3o oficial lan\u00e7ada da `p\u00e1gina de download`_ do Django.\r\n\r\n    2. Descompacte o arquivo baixado(por exemplo: ``tar xzvf Django-NNN.tar.gz``,\r\n       onde ``NNN`` \u00e9 o n\u00famero da \u00faltima vers\u00e3o lan\u00e7ada).\r\n       Se voc\u00ea estiver usando Windows, voc\u00ea pode baixar a ferramenta linha de comando\r\n       bsdtar_ para fazer isso, ou voc\u00ea usar uma ferramenta com interface gr\u00e1fica como\r\n       a 7-zip_.\r\n\r\n    3. Entre no diret\u00f3rio criado pelo passo 2 (por exemplo: ``cd Django-NNN``).\r\n\r\n    4. Se voc\u00ea estiver usando Linux, Mac OS X ou algum outro tipo de Linux, execute\r\n       o comando ``sudo python setup.py install`` no terminal.\r\n       Se voc\u00ea estiver usando Windows, abra um prompt (DOS) com privil\u00e9gios de\r\n       adminsitrador e execute o comando ``python setup.py install``.\r\n\r\nEstes comandos instalar\u00e3o o Django em seu diret\u00f3rio ``site-packages`` da\r\ninstala\u00e7\u00e3o do Python.\r\n\r\n.. _observa\u00e7\u00f5es espec\u00edficas de distribui\u00e7\u00f5es: http://www.djangoproject.org/documentation/distributions/\r\n.. _bsdtar: http://gnuwin32.sourceforge.net/packages/bsdtar.htm\r\n.. _7-zip: http://www.7-zip.org/\r\n\r\nInstalando a vers\u00e3o em desenvolvimento\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nSe voc\u00ea gostaria de poder atualizar seu Django ocasionalmente com as\r\n\u00faltimas corre\u00e7\u00f5es de bugs e melhorias, siga estas instru\u00e7\u00f5es:\r\n\r\n1. Certifique-se de que voc\u00ea tem o Subversion_ instalado e que voc\u00ea pode\r\n   executar seus comandos em um terminal. (Digite ``svn help`` no terminal\r\n   para testar.)\r\n\r\n2. Confira o branch principal de desevolvimento do Django (o 'trunk')::\r\n\r\n       svn co http://code.djangoproject.com/svn/django/trunk/ django-trunk\r\n\r\n3. Depois, certifique-se que o interpretador Python consegue carregar o c\u00f3digo Django.\r\n   Existem v\u00e1rias maneiras de fazer isso. Uma das mais convenientes, em Linux, Mac OS X\r\n   ou outros sistemas Unix: usando um link simb\u00f3lico::\r\n\r\n       ln -s `pwd`/django-trunk/django SITE-PACKAGES-DIR/django\r\n\r\n   (Na linha acima, troque ``SITE_PACKAGES-DIR`` pela localiza\u00e7\u00e3o do diret\u00f3rio\r\n   ``site-packages`` no seu sistema, como explicado em\r\n   \"Onde fica o diret\u00f3rio ``site-packages``?\").\r\n\r\n   Alternativamente, voc\u00ea pode definir sua vari\u00e1vel de ambiente ``PYTHONPATH``\r\n   para que ela inclua o diret\u00f3rio ``django`` - sub-diret\u00f3rio de ``django-trunk``.\r\n   Talvez essa seja a solu\u00e7\u00e3o mais conveniente para o Windows, que n\u00e3o oferece\r\n   suporte a links simb\u00f3licos. (Vari\u00e1veis de ambeinte podem ser definidas no\r\n   Windows `pelo Painel de Controle`)\r\n\r\n   .. admonition:: E o Apache e mod_python?\r\n\r\n      Se voc\u00ea escolher a solu\u00e7\u00e3o de definir sua ``PYTHONPATH` voc\u00ea precisa\r\n      lembrar de fazer o mesmo na sua configura\u00e7\u00e3o do Apache quando for colocar\r\n      seu site em produ\u00e7\u00e3o. Fa\u00e7a isso definindo ``PythonPath`` no seu arquivo\r\n      de configura\u00e7\u00e3o do Apache.\r\n\r\n      Mais informa\u00e7\u00f5es sobre implementa\u00e7\u00f5es em produ\u00e7\u00e3o, \u00e9 l\u00f3gico, est\u00e3o dispon\u00edvies\r\n      na documenta\u00e7\u00e3o `Como usar o Django com mod_python`_.\r\n\r\n      .. _Como usar o Django com mod_python: http://www.djangoproject.com/documentation/modpython/\r\n\r\n4. Em sistemas Unix, crie um link simb\u00f3lico para o arquivo\r\n   ``django-trunk/django/bin/django-admin.py`` para um diret\u00f3rio no seu 'system path',\r\n   por exemplo: ``/usr/local/bin``::\r\n\r\n       ln -s `pwd`/django-trunk/django/bin/django-admin.py /usr/local/bin\r\n\r\n   Isso permite a voc\u00ea simplesmente digfitar ``django-admin.py`` de qualquer diret\u00f3rio, ao inv\u00e9s\r\n   de ter que escrever o caminho inteiro para o script.\r\n\r\n   Quando em Windows, o mesmo resultado pode ser obtido copiando o arquivo\r\n   ``django-trunk/django/bin/django-admin.py`` para algum lugar no seu 'system path'.\r\n   Por exemplo: ``C:\\Python24\\Scripts``.\r\n\r\n\r\nVoc\u00ea *n\u00e3o* precisa executar ``python setup.py intall``, pois voc\u00ea j\u00e1 fez\r\no equivalente nos passos 3 e 4.\r\n\r\nQuando voc\u00ea quiser atualizar a sua c\u00f3pia do c\u00f3digo-fonte do Django,\r\napenas execute ``svn update`` dentro do diret\u00f3rio ``django-trunk``.\r\nAo fazer isso, o Subversion vai automaticamente baixar as atualiza\u00e7\u00f5es.\r\n\r\n.. _p\u00e1gina de download: http://www.djangoproject.com/download/\r\n.. _Subversion: http://subversion.tigris.org/\r\n.. _pelo Painel de Controle: http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/sysdm_advancd_environmnt_addchange_variable.mspx\r\n", "enable_comments": 0}}, {"pk": 5, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Escrevendo sua primeira aplica\u00e7\u00e3o Django, parte 1", "url": "/documentacao/tutorial01/", "template_name": "flatpages/docs.html", "sites": [1], "content": "..\r\n.. META INFORMATION OF TRADUCTION\r\n..\r\n..   $TranslationStatus: Done$\r\n..   $OriginalRevision: 7521$\r\n..   $TraductionAuthors: Marcelo Minholi$\r\n..\r\n.. INFO OF THIS FILE (DO NOT EDIT! UPDATED BY SUBVERSION)\r\n..\r\n..   $HeadURL: https://django-l10n-portuguese.googlecode.com/svn/trunk/docs/tutorial01_pt-br.txt $\r\n..   $LastChangedRevision: 14 $\r\n..   $LastChangedBy: semente $\r\n..   $LastChangedDate: 2008-06-12 12:04:39 -0300 (Thu, 12 Jun 2008) $\r\n..\r\n\r\n=================================================\r\nEscrevendo sua primeira aplica\u00e7\u00e3o Django, parte 1\r\n=================================================\r\n\r\nVamos aprender pelo exemplo.\r\n\r\nAo longo desse tutorial n\u00f3s iremos gui\u00e1-lo na cria\u00e7\u00e3o de uma aplica\u00e7\u00e3o b\u00e1sica de \r\nenquete.\r\n\r\nEla ir\u00e1 consistir de duas partes:\r\n\r\n    * Um site p\u00fablico que deixa as pessoas verem as enquetes e votarem nelas.\r\n    * Um site de administra\u00e7\u00e3o que deixa voc\u00ea adicionar, alterar e deletar \r\n      enquetes.\r\n\r\nN\u00f3s iremos assumir que voc\u00ea j\u00e1 tem o `Django instalado`_. Voc\u00ea pode saber se o \r\nDjango est\u00e1 instalado rodando o interpretador interativo do Python e digitando \r\n``import django``. Se esse comando rodar com sucesso, sem nenhum erro, o Django \r\nest\u00e1 instalado.\r\n\r\n.. _`Django instalado`: ../instalar/\r\n\r\n.. admonition:: Onde conseguir ajuda:\r\n\r\n    Se voc\u00ea estiver tendo problemas no decorrer desse tutorial, por favor envie \r\n    uma mensagem para `django-users`_ ou deixe-a em `#django`_ no \r\n    ``irc.freenode.net`` e n\u00f3s tentaremos ajud\u00e1-lo.\r\n\r\n.. _django-users: http://groups.google.com/group/django-users\r\n.. _#django: irc://irc.freenode.net/django\r\n\r\nCriando um projeto\r\n==================\r\n\r\nSe for a primeira vez que voc\u00ea est\u00e1 usando o Django voc\u00ea ter\u00e1 que \r\npreocupar-se com algumas configura\u00e7\u00f5es iniciais. A saber, voc\u00ea ir\u00e1 precisar auto-gerar \r\nalgum c\u00f3digo para estabelecer um *projeto* Django -- uma cole\u00e7ao de configura\u00e7\u00f5es \r\npara uma instancia do Django, incluindo configura\u00e7\u00e3o do banco de dados, op\u00e7\u00f5es \r\nespec\u00edficas do Django e configura\u00e7\u00f5es espec\u00edficas da aplica\u00e7\u00e3o.\r\n\r\nA partir da linha de comando, ``cd`` para o diret\u00f3rio onde voc\u00ea gostaria de \r\narmazenar seu c\u00f3digo, ent\u00e3o execute o comando ``django-admin.py startproject \r\nmysite``. Isso ir\u00e1 criar o diret\u00f3rio ``mysite`` no seu diret\u00f3rio atual.\r\n\r\n.. admonition:: Permiss\u00f5es do Mac OS X\r\n   \r\n   Se voc\u00ea estiver usando Mac OS X, voc\u00ea poder\u00e1 ver a mensagem \"permiss\u00e3o\r\n   negada\" quando voc\u00ea tentar rodar o ``django-admin.py startproject``. Isso\r\n   porque, em sistemas baseados no Unix como o OS X, um arquivo precisa ser \r\n   marcado como \"execut\u00e1vel\" antes que possa ser executado como um programa. Para \r\n   fazer isso, abra o Terminal.app e navegue (usando o comando `cd`) at\u00e9 o \r\n   diret\u00f3rio onde o ``django-admin.py`` est\u00e1 instalado, ent\u00e3o rode o comando \r\n   ``chmod +x django-admin.py``.\r\n\r\n.. note::\r\n\r\n    Voc\u00ea precisar\u00e1 evitar dar nomes a projetos que remetam a componentes internos \r\n    do Python ou do Django. Particularmente, isso significa que voc\u00ea deve evitar \r\n    usar nomes como ``django`` (que ir\u00e1 conflitar com o pr\u00f3prio Django) ou \r\n    ``site`` (que ir\u00e1 conflitar com um pacote interno do Python).\r\n\r\n(O ``django-admin.py`` dever\u00e1 estar no caminho do seu sistema se voc\u00ea instalou o \r\nDjango via ``python setup.py``. Se ele n\u00e3o estiver no caminho, voc\u00ea pode encontr\u00e1-\r\nlo em ``site-packages/django/bin``, onde ``site-packages`` \u00e9 um diret\u00f3rio dentro \r\nda sua instala\u00e7\u00e3o do Python. Considere a possibilidade de criar um link simb\u00f3lico \r\npara o ``django-admin.py`` a partir de algum lugar no seu caminho, como em ``/usr/\r\nlocal/bin``.)\r\n\r\n.. admonition:: Onde esse c\u00f3digo deve morar?\r\n\r\n    Se voc\u00ea tem experi\u00eancia pr\u00e9via em PHP, voc\u00ea deve estar acostumado a colocar o \r\n    c\u00f3digo dentro da raiz da pasta de documentos do seu servidor Web (em um lugar \r\n    como ``/var/www``). Com o Django voc\u00ea n\u00e3o far\u00e1 isto. N\u00e3o \u00e9 uma boa id\u00e9ia \r\n    colocar qualquer c\u00f3digo Python na raiz da pasta de documentos do seu servidor \r\n    Web, porque tem o possivel risco de pessoas conseguirem ver seu \r\n    c\u00f3digo atrav\u00e9s da Web. Isso n\u00e3o \u00e9 bom para a seguran\u00e7a.\r\n\r\n    Coloque seu c\u00f3digo em algum diret\u00f3rio **fora** da raiz da pasta de documentos,\r\n    como em ``/home/mycode``.\r\n\r\nVamos olhar o que o ``startproject`` criou::\r\n\r\n    mysite/\r\n        __init__.py\r\n        manage.py\r\n        settings.py\r\n        urls.py\r\n\r\nEsses arquivos s\u00e3o:\r\n\r\n    * ``__init__.py``: Um arquivo vazio que diz ao python que esse diret\u00f3rio deve \r\n      ser considerado como um pacote Python. (Leia `mais sobre pacotes`_ na \r\n      documenta\u00e7\u00e3o oficial do Python se voc\u00ea for iniciante em Python.)\r\n    * ``manage.py``: Um utilit\u00e1rio de linha de comando que permite a voc\u00ea \r\n      interagir com esse projeto Django de v\u00e1rias maneiras.\r\n    * ``settings.py``: Defini\u00e7\u00f5es/configura\u00e7\u00e3o para esse projeto Django.\r\n    * ``urls.py``: As declara\u00e7\u00f5es de URLs para esse projeto Django; uma \"tabela de \r\n      conte\u00fados\" para o seu site movido a Django.\r\n\r\n.. _mais sobre pacotes: http://docs.python.org/tut/node8.html#packages\r\n\r\nO servidor de desenvolvimento\r\n-----------------------------\r\n\r\nVamos verificar se ele funciona. V\u00e1 para o diret\u00f3rio ``mysite``, se voc\u00ea\r\nainda n\u00e3o estiver nele, e rode o comando ``python manage.py runserver``. Voc\u00ea ir\u00e1 \r\nver a seguinte sa\u00edda na sua linha de comando::\r\n\r\n    Validating models...\r\n    0 errors found.\r\n\r\n    Django version 0.95, using settings 'mysite.settings'\r\n    Development server is running at http://127.0.0.1:8000/\r\n    Quit the server with CONTROL-C (Unix) or CTRL-BREAK (Windows).\r\n\r\nVoc\u00ea iniciou o servidor de desenvolvimento do Django, um servidor Web leve escrito \r\npuramente em Python. N\u00f3s inclu\u00edmos ele com o Django, ent\u00e3o voc\u00ea pode desenvolver \r\ncoisas rapidamente, sem ter que lidar com a configura\u00e7\u00e3o de um servidor web de \r\nprodu\u00e7\u00e3o -- como o Apache -- at\u00e9 que voc\u00ea esteja pronto para a produ\u00e7\u00e3o.\r\n\r\nAgora \u00e9 uma boa hora para anotar: N\u00c3O use esse servidor em nada relacionado a um \r\nambiente de produ\u00e7\u00e3o. Seu objetivo \u00e9 ser utilizado apenas durante o \r\ndesenvolvimento. (N\u00f3s estamos no neg\u00f3cio de criar frameworks Web, n\u00e3o servidores \r\nWeb.)\r\n\r\nAgora que o servidor est\u00e1 rodando, visite http://127.0.0.1:8000/ com seu navegador \r\nWeb. Voc\u00ea ir\u00e1 ver a p\u00e1gina \"Welcome to Django\", em agrad\u00e1veis tons de azul claro \r\npastel.\r\nEle funcionou!\r\n\r\n.. admonition:: Mudando a porta\r\n\r\n    Por padr\u00e3o, o comando ``runserver`` inicia o servidor de desenvolvimento na \r\n    porta 8000. Se voc\u00ea quer mudar a porta do servidor, passe ela como um argumento \r\n    na linha de comando. Por exemplo, esse comando iniciar\u00e1 o servidor na porta \r\n    8080::\r\n\r\n        python manage.py runserver 8080\r\n\r\n    A documenta\u00e7\u00e3o completa para o servidor de desenvolvimento est\u00e1 na \r\n    `documenta\u00e7\u00e3o do django-admin`_.\r\n\r\n.. _documenta\u00e7\u00e3o do django-admin: http://www.djangoproject.com/documentation/django-admin/\r\n\r\nConfigura\u00e7\u00e3o do banco de dados\r\n------------------------------\r\n\r\nAgora, edite o ``settings.py``. Ele \u00e9 um m\u00f3dulo normal do Python com vari\u00e1veis\r\nrepresentando as configura\u00e7\u00f5es do Django. Altere essas configura\u00e7\u00f5es para que \r\natendam aos par\u00e2metros de conex\u00e3o do seu banco de dados:\r\n\r\n    * ``DATABASE_ENGINE`` -- Um entre 'postgresql_psycopg2', 'mysql' ou 'sqlite3'.\r\n      Outros backends tamb\u00e9m `est\u00e3o dispon\u00edveis`_.\r\n    * ``DATABASE_NAME`` -- O nome do seu banco de dados, ou o caminho completo \r\n      (absoluto) para o arquivo do banco de dados se voc\u00ea estiver usando SQLite.\r\n    * ``DATABASE_USER`` -- Usu\u00e1rio do seu banco de dados (n\u00e3o utilizado para o \r\n      SQLite).\r\n    * ``DATABASE_PASSWORD`` -- Senha do seu banco de dados (n\u00e3o utilizado para o  \r\n      SQLite).\r\n    * ``DATABASE_HOST`` -- O host onde seu banco de dados est\u00e1. Deixe isso em \r\n      branco se o seu servidor de banco de dados est\u00e1 na mesma maquina f\u00edsica (n\u00e3o \r\n      utilizado para o SQLite).\r\n\r\n.. _est\u00e3o dispon\u00edveis: http://www.djangoproject.com/documentation/settings/\r\n\r\n.. admonition:: Nota\r\n\r\n    Se voc\u00ea estiver usando PostgreSQL ou MySQL, certifique-se de que j\u00e1 tenha \r\n    criado o banco de dados a partir desse ponto. Fa\u00e7a isso com \"``CREATE DATABASE \r\n    database_name;``\" a partir do prompt interativo do seu banco de dados.\r\n\r\nEnquanto voc\u00ea estiver editando o ``settings.py``, note a configura\u00e7\u00e3o do \r\n``INSTALLED_APPS`` pr\u00f3ximo ao final do arquivo. Aquela vari\u00e1vel possui os nomes de \r\ntodas as aplica\u00e7\u00f5es Django que estiverem ativadas para essa inst\u00e2ncia do Django. \r\nAplica\u00e7\u00f5es podem ser usadas em m\u00faltiplos projetos, e voc\u00ea pode empacot\u00e1-las e \r\ndistribu\u00ed-las para uso de outros em seus projetos.\r\n\r\nPor padr\u00e3o, o ``INSTALLED_APPS`` cont\u00e9m as seguintes aplica\u00e7\u00f5es, que vem com o \r\nDjango:\r\n\r\n    * ``django.contrib.auth`` -- Um sistema de autentica\u00e7\u00e3o.\r\n    * ``django.contrib.contenttypes`` -- Um framework para tipos de conte\u00fado.\r\n    * ``django.contrib.sessions`` -- Um framework de sess\u00e3o.\r\n    * ``django.contrib.sites`` -- Um framework para gerenciamento de m\u00faltiplos \r\n      sites com uma instala\u00e7\u00e3o do Django.\r\n\r\nEssas aplica\u00e7\u00f5es s\u00e3o inclu\u00eddas por padr\u00e3o como uma conveni\u00eancia para os casos \r\ncomuns.\r\n\r\nCada uma dessas aplica\u00e7\u00f5es faz uso de pelo menos uma tabela no banco de dados, \r\nassim sendo, n\u00f3s precisamos criar as tabelas no banco de dados antes que possamos \r\nus\u00e1-las, para isso rode o seguinte comando::\r\n\r\n    python manage.py syncdb\r\n\r\nO comando ``syncdb`` verifica a configura\u00e7\u00e3o do ``INSTALLED_APPS`` e cria todas as\r\ntabelas necess\u00e1rias de acordo com a configura\u00e7\u00e3o do banco de dados no seu arquivo \r\n``settings.py``. Voc\u00ea ir\u00e1 ver uma mensagem para cada tabela do banco de dados que \r\nele criar, e voc\u00ea ir\u00e1 receber um prompt perguntandose a voc\u00ea se voc\u00ea gostaria de \r\ncriar uma conta de super-usu\u00e1rio para o sistema de autentica\u00e7\u00e3o. V\u00e1 em frente e \r\nfa\u00e7a isso.\r\n\r\nSe voc\u00ea estiver interessado, rode o cliente de linha de comando do seu banco de \r\ndados e digite ``\\dt`` (PostgreSQL), ``SHOW TABLES;`` (MySQL), ou ``.schema`` \r\n(SQLite) para mostrar as tabelas que o Django criou.\r\n\r\n.. admonition:: Para os detalhistas\r\n\r\n    Como dissemos acima, as aplica\u00e7\u00f5es padr\u00e3o s\u00e3o inclu\u00eddas para casos comuns, mas \r\n    nem todo mundo precisa delas. Se voc\u00ea n\u00e3o precisa de nenhuma delas, sinta-se \r\n    livre para comentar ou deletar a(s) linha(s) apropriadas do ``INSTALLED_APPS`` \r\n    antes de rodar o ``syncdb``. O comando ``syncdb`` ir\u00e1 criar apenas as tabelas \r\n    para as aplica\u00e7\u00f5es que estiverem no ``INSTALLED_APPS``.\r\n\r\nCriando modelos\r\n===============\r\n\r\nAgora que seu ambiente -- um \"projeto\" -- est\u00e1 configurado, voc\u00ea est\u00e1 pronto para \r\ncome\u00e7ar o trabalho.\r\n\r\nCada aplica\u00e7\u00e3o que voc\u00ea escreve no Django consiste de um pacote Python, em algum \r\nlugar no seu `caminho do Python`_, que seguir\u00e1 uma certa conven\u00e7\u00e3o. O Django vem \r\ncom um utilit\u00e1rio que gera autom\u00e1ticamente a estrutura b\u00e1sica de diret\u00f3rio de uma \r\naplica\u00e7\u00e3o, ent\u00e3o voc\u00ea pode se concentrar apenas em escrever c\u00f3digo ao inv\u00e9s de \r\nficar criando diret\u00f3rios.\r\n\r\n.. admonition:: Projetos vs. aplica\u00e7\u00f5es\r\n\r\n    Qual \u00e9 a diferen\u00e7a entre um projeto e uma aplica\u00e7\u00e3o? Uma aplica\u00e7\u00e3o \u00e9 uma \r\n    aplica\u00e7\u00e3o Web que faz alguma coisa -- ex.: um sistema de blog, um banco de \r\n    dados de registros p\u00fablicos ou uma simples aplica\u00e7\u00e3o de enquete. Um projeto \u00e9 \r\n    uma cole\u00e7\u00e3o de configura\u00e7\u00f5es e aplica\u00e7\u00f5es para um determinado Web site. Um \r\n    projeto pode conter m\u00faltiplas aplica\u00e7\u00f5es. Uma aplica\u00e7\u00e3o pode estar em \r\n    m\u00faltiplos projetos.\r\n\r\nNesse tutorial n\u00f3s iremos criar nossa aplica\u00e7\u00e3o de enquete no diret\u00f3rio ``mysite``,\r\npara simplificar. Como Conseq\u00fc\u00eancia, a aplica\u00e7\u00e3o ir\u00e1 ser acoplada ao projeto --\r\nassim sendo, o c\u00f3digo Python interno da aplica\u00e7\u00e3o da enquete ir\u00e1 se referir a  \r\n``mysite.polls``. Posteriormente, nesse tutorial, n\u00f3s iremos discutir como \r\ndesacoplar suas aplica\u00e7\u00f5es para distribui\u00e7\u00e3o.\r\n\r\nPara criar sua aplica\u00e7\u00e3o, certifique-se de que voc\u00ea est\u00e1 no diret\u00f3rio ``mysite`` e \r\ndigite esse comando::\r\n\r\n    python manage.py startapp polls\r\n\r\nIsso ir\u00e1 criar um diret\u00f3rio ``polls``, que ir\u00e1 ser apresentado desta forma::\r\n\r\n    polls/\r\n        __init__.py\r\n        models.py\r\n        views.py\r\n\r\nEssa estrutura de diret\u00f3rio ir\u00e1 abrigar a aplica\u00e7\u00e3o de enquete.\r\n\r\nO primeiro passo ao escrever uma aplica\u00e7\u00e3o Web de banco de dados no Django \u00e9 \r\ndefinir seus modelos -- essencialmente, o layout do seu banco de dados, com \r\nmetadados adicionais.\r\n\r\n.. admonition:: Filosofia\r\n\r\n   Um modelo \u00e9 a \u00fanica e definitiva fonte de dados sobre seus dados. Ele cont\u00e9m os \r\n   campos essenciais e o comportamentos para os dados que voc\u00ea estiver armazenando. O \r\n   Django segue o `princ\u00edpio DRY`_. O objetivo \u00e9 definir seu modelo de dados em um \r\n   local e autom\u00e1ticamente derivar coisas a partir dele.\r\n\r\nNa nossa aplica\u00e7\u00e3o simples de enquete, n\u00f3s iremos criar dois modelos: polls e \r\nchoices. Uma enquete (poll) tem uma pergunta e uma data de publica\u00e7\u00e3o. Uma escolha \r\n(choice) tem dois campos: o texto da escolha e um totalizador de votos. Cada \r\nescolha \u00e9 associada a uma enquete.\r\n\r\nEsses conceitos s\u00e3o representados por simples classes Python. Edite o arquivo\r\n``polls/models.py`` e ele se parecer\u00e1 com isso::\r\n\r\n    from django.db import models\r\n\r\n    class Poll(models.Model):\r\n        question = models.CharField(max_length=200)\r\n        pub_date = models.DateTimeField('date published')\r\n\r\n    class Choice(models.Model):\r\n        poll = models.ForeignKey(Poll)\r\n        choice = models.CharField(max_length=200)\r\n        votes = models.IntegerField()\r\n\r\n.. admonition:: Erros sobre ``max_length``\r\n\r\n   Se o Django retornar para voc\u00ea uma mensagem de erro dizendo que o \r\n   ``max_length`` n\u00e3o \u00e9 um argumento v\u00e1lido, voc\u00ea prov\u00e1velmente est\u00e1 usando uma \r\n   vers\u00e3o antiga do Django. (Essa vers\u00e3o do tutorial foi escrita para a \u00faltima \r\n   vers\u00e3o de desenvolvimento do Django.) Se voc\u00ea estiver usando um checkout de \r\n   Subversion da vers\u00e3o de desenvolvimento do Django (veja `a documenta\u00e7\u00e3o de \r\n   instala\u00e7\u00e3o`_ para mais informa\u00e7\u00f5es), voc\u00ea n\u00e3o deveria ter nenhum problema.\r\n\r\n   Se voc\u00ea quiser continuar com uma vers\u00e3o antiga do Django, voc\u00ea dever\u00e1 mudar\r\n   para `o tutorial do Django 0.96`_, porque este tutorial cobre v\u00e1rios recursos \r\n   que s\u00f3 existem na vers\u00e3o de desenvolvimento do Django.\r\n\r\n.. _a documenta\u00e7\u00e3o de instala\u00e7\u00e3o: ../instalar/\r\n.. _o tutorial do Django 0.96: http://www.djangoproject.com/documentation/0.96/tutorial01/\r\n\r\nO c\u00f3digo \u00e9 auto-explicativo. Cada modelo \u00e9 representado por uma classe derivada da \r\nclasse ``django.db.models.Model``. Cada modelo tem um n\u00famero de vari\u00e1veis de \r\nclasse, as quais por sua vez representam um campo de banco de dados no modelo.\r\n\r\nCada campo \u00e9 representado por uma inst\u00e2ncia de uma classe ``models.*Field`` -- \r\nex.: ``models.CharField`` para campos do tipo caractere e ``models.DateTimeField`` \r\npara datetimes. Isso diz ao Django qual tipo de dados cada campo suporta.\r\n\r\nO nome de cada inst\u00e2ncia ``models.*Field`` (ex.: ``question`` ou ``pub_date`` ) \u00e9 \r\no nome do campo, em formato amig\u00e1vel para a maquina. Voc\u00ea ir\u00e1 usar esse valor no \r\nseu c\u00f3digo Python, e seu banco de dados ir\u00e1 us\u00e1-lo como nome de coluna.\r\n\r\nVoc\u00ea pode usar um argumento na primeira posi\u00e7\u00e3o de um ``Field`` para designar um \r\nnome leg\u00edvel para humanos. O qual ser\u00e1 usado em uma s\u00e9rie de partes introspectivas \r\ndo Django, e ele tamb\u00e9m servir\u00e1 como documenta\u00e7\u00e3o. Se esse campo n\u00e3o for \r\nfornecido, o Django ir\u00e1 usar o nome leg\u00edvel para a m\u00e1quina. Nesse exemplo n\u00f3s \r\ndefinimo um nome leg\u00edvel para humanos apenas para ``Poll.pub_date``. Para todos os \r\noutros campos nesse modelo o nome leg\u00edvel para a maquina servir\u00e1 como nome leg\u00edvel \r\npara humanos.\r\n\r\nAlgumas classes ``Field`` possuem elementos obrigat\u00f3rios. O ``CharField``, por \r\nexemplo, requer que voc\u00ea informe a ele um ``max_length``. Isso \u00e9 usando n\u00e3o apenas \r\nno esquema do banco de dados, mas na valida\u00e7\u00e3o, como n\u00f3s veremos em breve.\r\n\r\nFinalmente, note a defini\u00e7\u00e3o de um relacionamento, usando ``models.ForeignKey``. \r\nQue diz ao Django que cada Choice (Escolha) est\u00e1 relacionada a uma \u00fanica Poll \r\n(Enquete). O Django suporta todos os relacionamentos de banco de dados comuns: \r\nmuitos-para-um, muitos-para-muitos e um-para-um.\r\n\r\n.. _`caminho do Python`: http://docs.python.org/tut/node8.html#SECTION008110000000000000000\r\n.. _Princ\u00edpio DRY: http://c2.com/cgi/wiki?DontRepeatYourself\r\n\r\nAtivando os modelos\r\n===================\r\n\r\nAquela pequena parte do modelo fornece ao Django muita informa\u00e7\u00e3o. Com ela o \r\nDjango \u00e9 capaz de:\r\n\r\n    * Criar um esquema de banco de dados (instru\u00e7\u00f5es ``CREATE TABLE``) para essa \r\n      aplica\u00e7\u00e3o.\r\n    * Criar uma API de acesso a banco de dados para acessar objetos ``Poll`` e ``Choice``.\r\n\r\nMais primeiro n\u00f3s precisamos dizer o nosso projeto que a aplica\u00e7\u00e3o ``polls`` est\u00e1 instalada.\r\n\r\n.. admonition:: Filosofia\r\n\r\n    Aplica\u00e7\u00f5es Django s\u00e3o \"plug\u00e1veis\": Voc\u00ea pode usar uma aplica\u00e7\u00e3o em m\u00faltiplos \r\n    projetos, e voc\u00ea pode distribuir aplica\u00e7\u00f5es, porque elas n\u00e3o tem que ser \r\n    atreladas a uma determinada instala\u00e7\u00e3o do Django.\r\n\r\nEdite o arquivo ``settings.py`` novamente, e altere a configura\u00e7\u00e3o \r\n``INSTALLED_APPS`` para incluir a string ``'mysite.polls'``. Ent\u00e3o ela ir\u00e1 parecer \r\ncom isso::\r\n\r\n    INSTALLED_APPS = (\r\n        'django.contrib.auth',\r\n        'django.contrib.contenttypes',\r\n        'django.contrib.sessions',\r\n        'django.contrib.sites',\r\n        'mysite.polls'\r\n    )\r\n\r\nAgora o Django sabe que o ``mysite`` inclui a aplica\u00e7\u00e3o ``polls``. Vamos rodar \r\noutro comando::\r\n\r\n    python manage.py sql polls\r\n\r\nVoc\u00ea dever\u00e1 ver algo similar ao seguinte (as instru\u00e7\u00f5es SQL CREATE TABLE para a \r\naplica\u00e7\u00e3o ``pools``)::\r\n\r\n    BEGIN;\r\n    CREATE TABLE \"polls_poll\" (\r\n        \"id\" serial NOT NULL PRIMARY KEY,\r\n        \"question\" varchar(200) NOT NULL,\r\n        \"pub_date\" timestamp with time zone NOT NULL\r\n    );\r\n    CREATE TABLE \"polls_choice\" (\r\n        \"id\" serial NOT NULL PRIMARY KEY,\r\n        \"poll_id\" integer NOT NULL REFERENCES \"polls_poll\" (\"id\"),\r\n        \"choice\" varchar(200) NOT NULL,\r\n        \"votes\" integer NOT NULL\r\n    );\r\n    COMMIT;\r\n\r\nNote o seguinte:\r\n\r\n    * A sa\u00edda exata ir\u00e1 variar dependendo do banco de dados que voc\u00ea est\u00e1 usando.\r\n\r\n    * Os nomes das tabelas s\u00e3o gerados autom\u00e1ticamente combinando o nome da \r\n      aplica\u00e7\u00e3o (``polls``) e o nome em min\u00fasculas do modelo -- ``poll`` e    \r\n      ``choice``. (Voc\u00ea pode alterar esse comportamento.)\r\n\r\n    * Chaves prim\u00e1rias (IDs) s\u00e3o adicionadas autom\u00e1ticamente. (Voc\u00ea pode modificar \r\n      isso, tamb\u00e9m.)\r\n\r\n    * Por conven\u00e7\u00e3o, o Django adiciona ``\"_id\"`` ao nome do campo chave \r\n      estrangeira.\r\n      Sim, voc\u00ea pode alterar isso, como quiser.\r\n\r\n    * O relacionamento da chave estrangeira \u00e9 feito explicitamente por um \r\n      instru\u00e7\u00e3o ``REFERENCES``.\r\n\r\n    * Isso \u00e9 atrelado ao banco que voc\u00ea est\u00e1 usando, ent\u00e3o a utiliza\u00e7\u00e3o de campos \r\n      espec\u00edficos do banco de dados como ``auto_increment`` (MySQL), ``serial`` \r\n      (PostgreSQL), ou ``integer primary key`` (SQLite) \u00e9 feita para voc\u00ea \r\n      autom\u00e1ticamente. O mesmo ocorre com as aspas dos nomes de campos -- ex.: \r\n      usando aspas duplas ou aspas simples. O autor desse tutorial rodava \r\n      PostgreSQL, ent\u00e3o o sa\u00edda do exemplo est\u00e1 na sintaxe do PostgreSQL.\r\n\r\n    * O comando ``sql`` atualmente n\u00e3o roda o SQL no seu banco de dados - ele \r\n      apenas mostra-o na tela para que voc\u00ea possa ver o qual SQL o Django acha que \r\n      seja necess\u00e1rio. Se voc\u00ea quiser, voc\u00ea pode copiar e colar esse SQL no prompt\r\n      do seu banco de dados. Entretanto, como n\u00f3s iremos ver em breve, o Django\r\n      fornece uma maneira mais f\u00e1cil de submeter o SQL ao banco de dados.\r\n\r\nSe voc\u00ea tiver interesse, tamb\u00e9m rode os seguintes comandos:\r\n    * ``python manage.py validate`` -- Verifica por quaisquer erros na constru\u00e7\u00e3o \r\n      dos seus modelos.\r\n\r\n    * ``python manage.py sqlcustom polls`` -- Mostra quaisquer instru\u00e7\u00f5es SQL \r\n      personalizadas (como modifica\u00e7\u00f5es em tabelas ou limitadores) que tenham sido \r\n      definidas para a aplica\u00e7\u00e3o.\r\n\r\n    * ``python manage.py sqlclear polls`` -- Mostra as instru\u00e7\u00f5es ``DROP\r\n      TABLE`` necess\u00e1rias para essa aplica\u00e7\u00e3o, de acordo com as tabelas que j\u00e1 \r\n      existem no seu banco de dados (se houver alguma).\r\n\r\n    * ``python manage.py sqlindexes polls`` -- Mostra as instru\u00e7\u00f5es ``CREATE \r\n      INDEX`` necess\u00e1rias para essa aplica\u00e7\u00e3o.\r\n\r\n    * ``python manage.py sqlall polls`` -- Uma combina\u00e7\u00e3o de todo o SQL dos \r\n      comandos 'sql', 'sqlcustom', e 'sqlindexes'.\r\n\r\nOlhar para a sa\u00edda desses comandos ir\u00e1 ajudar a entender o que est\u00e1 acontecendo \r\npor baixo do pano.\r\n\r\nAgora, rode o ``syncdb`` novamente para criar essas tabelas de modelos no seu \r\nbanco de dados::\r\n\r\n    python manage.py syncdb\r\n\r\nO comando ``syncdb`` roda o sql do 'sqlall' em seu banco de dados para todas as \r\naplica\u00e7\u00f5es presentes no ``INSTALLED_APPS`` que ainda n\u00e3o existam em seu banco de \r\ndados. Isso criar\u00e1 todas as tabelas, dados iniciais e \u00edndices para quaisquer \r\naplica\u00e7\u00f5es que voc\u00ea tenha adicionado ao seu projeto desde a \u00faltima vez que voc\u00ea \r\nrodou o syncdb. O ``syncdb`` pode ser chamado sempre que voc\u00ea quiser, e ele ir\u00e1 \r\napenas criar as tabelas que n\u00e3o existirem.\r\n\r\nLeia a `documenta\u00e7\u00e3o do django-admin.py`_ para informa\u00e7\u00f5es completas sobre o que o \r\nutilit\u00e1rio ``manage.py`` pode fazer.\r\n\r\n.. _documenta\u00e7\u00e3o do django-admin.py: http://www.djangoproject.com/documentation/django-admin/\r\n\r\nBrincando com a API\r\n===================\r\n\r\nAgora, vamos dar uma passada no shell interativo do Python e brincar um pouco com \r\na API gr\u00e1tis que o Django d\u00e1 a voc\u00ea. Para invocar o shell do Python, use esse \r\ncomando::\r\n\r\n    python manage.py shell\r\n\r\nN\u00f3s usaremos isso ao inv\u00e9s de simplesmente digitar \"python\", porque o \r\n``manage.py`` configura o ambiente de projeto para voc\u00ea. \"A configura\u00e7\u00e3o do \r\nambiente\" envolve duas coisas:\r\n\r\n    * Colocar o ``mysite`` no ``sys.path``. Buscando flexibilidade, v\u00e1rias partes \r\n      do Django referem-se aos projetos usando a nota\u00e7\u00e3o pontuada do Python (ex.: \r\n      ``'mysite.polls.models'``). Para que isso funcione, o pacote ``mysite`` \r\n      precisa estar no ``sys.path``.\r\n\r\n      N\u00f3s j\u00e1 vimos um exemplo disso: a configura\u00e7\u00e3o ``INSTALLED_APPS`` \u00e9 uma lista \r\n      de pacotes na nota\u00e7\u00e3o pontuada de caminho.\r\n\r\n    * Configurar a vari\u00e1vel de ambiente ``DJANGO_SETTINGS_MODULE``, que fornece ao \r\n      Django o caminho para o seu arquivo ``settings.py``.\r\n\r\n.. admonition:: Ignorando o manage.py\r\n\r\n    Se voc\u00ea optar por n\u00e3o usar o ``manage.py``, n\u00e3o h\u00e1 problemas. Apenas \r\n    certifique-se de que o ``mysite`` est\u00e1 no n\u00edvel ra\u00edz do caminho do Python \r\n    (ex.: ``import mysite`` funciona) e configure a vari\u00e1vel de ambiente \r\n    ``DJANGO_SETTINGS_MODULE`` para ``mysite.settings``.\r\n\r\n    Para mais informa\u00e7\u00f5es sobre tudo isso, veja a `documenta\u00e7\u00e3o do django-admin.py`_.\r\n\r\nAssim que voc\u00ea estiver no shell, explore a API de banco de dados::\r\n\r\n    # Importe as classes modelo que acabamos de criar.\r\n    >>> from mysite.polls.models import Poll, Choice\r\n\r\n    # N\u00e3o h\u00e1 nenhuma enquete no sistema ainda.\r\n    >>> Poll.objects.all()\r\n    []\r\n\r\n    # Crie uma nova Poll (enquete).\r\n    >>> import datetime\r\n    >>> p = Poll(question=\"What's up?\", pub_date=datetime.datetime.now())\r\n\r\n    # Salve o objeto na base de dados. Voc\u00ea tem que chamar o save() explicitamente.\r\n    >>> p.save()\r\n\r\n    # Agora ela tem uma ID. Note que ele ir\u00e1 mostrar \"1L\" ao inv\u00e9s de \"1\", \r\n    # dependendo de qual banco de dados voc\u00ea est\u00e1 usando. N\u00e3o \u00e9 nada demais; isso \r\n    # apenas significa que o backend do seu banco de dados prefere retornar \r\n    # inteiros como objetos inteiros longos do Python.\r\n    >>> p.id\r\n    1\r\n\r\n    # Acesse colunas do banco de dados via atributos do Python.\r\n    >>> p.question\r\n    \"What's up?\"\r\n    >>> p.pub_date\r\n    datetime.datetime(2007, 7, 15, 12, 00, 53)\r\n\r\n    # Modifique valores alterando os atributos e depois chamando o save().\r\n    >>> p.pub_date = datetime.datetime(2007, 4, 1, 0, 0)\r\n    >>> p.save()\r\n\r\n    # objects.all() mostra todas as enquetes do banco de dados.\r\n    >>> Poll.objects.all()\r\n    [<Poll: Poll object>]\r\n\r\n\r\nEspere um pouco. ``<Poll: Poll object>`` \u00e9, uma representa\u00e7\u00e3o totalmente in\u00fatil\r\ndesse objeto. Vamos corrigir isso editando o modelo de enquetes (no arquivo ``polls/models.py``)\r\ne adicionando um m\u00e9todo ``__unicode__()`` a ambos ``Poll`` e ``Choice``::\r\n\r\n    class Poll(models.Model):\r\n        # ...\r\n        def __unicode__(self):\r\n            return self.question\r\n\r\n    class Choice(models.Model):\r\n        # ...\r\n        def __unicode__(self):\r\n            return self.choice\r\n\r\n.. admonition:: Se o ``__unicode__()`` parecer n\u00e3o funcionar\r\n\r\n   Se voc\u00ea adicionar o m\u00e9todo ``__unicode__()`` aos seus modelos e n\u00e3o ver nenhuma \r\n   mudan\u00e7a na forma com que eles s\u00e3o representados, voc\u00ea deve estar usando uma \r\n   vers\u00e3o antiga do Django. (Essa vers\u00e3o do tutorial foi escrita para a \u00faltima \r\n   vers\u00e3o de desenvolvimento do Django.) Se voc\u00ea estiver usando um checkout do \r\n   Subversion do Django (veja `a documenta\u00e7\u00e3o de instala\u00e7\u00e3o`_ para mais \r\n   informa\u00e7\u00f5es), voc\u00ea n\u00e3o deveria estar tendo nenhum problema.\r\n\r\n   Se voc\u00ea quiser seguir com uma vers\u00e3o antiga do Django, voc\u00ea dever\u00e1 mudar para \r\n   `o tutorial do Django 0.96`_, porque esse tutorial cobre v\u00e1rios recursos que \r\n   existem apenas na vers\u00e3o de desenvolvimento do Django.\r\n\r\n.. _a documenta\u00e7\u00e3o de instala\u00e7\u00e3o: ../instalar/\r\n.. _o tutorial do Django 0.96: http://www.djangoproject.com/documentation/0.96/tutorial01/\r\n\r\n\u00c9 importante adicionar m\u00e9todos ``__unicode__()`` aos seus modelos, n\u00e3o apenas para \r\nsua pr\u00f3pria sanidade quando estiver lidando com o prompt interativo, mas tamb\u00e9m \r\nporque representa\u00e7\u00f5es de objetos s\u00e3o usadas em toda administra\u00e7\u00e3o gerada \r\nautom\u00e1ticamente pelo Django.\r\n\r\n.. admonition:: Por que ``__unicode__()`` e n\u00e3o ``__str__()``?\r\n\r\n    Se voc\u00ea \u00e9 familiarizado com o Python, voc\u00ea deve ter o h\u00e1bito de adicionar \r\n    m\u00e9todos ``__str__()`` \u00e0s suas classes, n\u00e3o m\u00e9todos ``__unicode__()``. N\u00f3s \r\n    usamos  ``__unicode__()`` aqui porque os modelos do Django lidam com Unicode \r\n    por padr\u00e3o. Todos os dados armazenados nos seus bancos de dados s\u00e3o \r\n    convertidos para Unicode quando s\u00e3o retornados.\r\n\r\n    Os modelos do Django tem um m\u00e9todo padr\u00e3o ``__str__()`` que chama o \r\n    ``__unicode__()`` e converte os resultados para uma bytestring UTF-8. Isso \r\n    significa que ``unicode(p)`` ir\u00e1 retornar uma string Unicode, e que ``str(p)`` \r\n    ir\u00e1 retornar uma string normal, com caracteres codificados como UTF-8.\r\n\r\n    Se tudo isso \u00e9 grego para voc\u00ea, apenas lembre-se de adicionar m\u00e9todos \r\n    ``__unicode__()`` aos seus modelos. Com alguma sorte, as coisas dever\u00e3o \r\n    Simplesmente Funcionar para voc\u00ea.\r\n\r\nNote que esses s\u00e3o m\u00e9todos Python normais. Vamos adicionar um m\u00e9todo \r\npersonalizado, apenas por demonstra\u00e7\u00e3o::\r\n\r\n    import datetime\r\n    # ...\r\n    class Poll(models.Model):\r\n        # ...\r\n        def was_published_today(self):\r\n            return self.pub_date.date() == datetime.date.today()\r\n\r\nNote a adi\u00e7\u00e3o de ``import datetime`` para referenciar o m\u00f3dulo padr\u00e3o do Python \r\n``datetime``.\r\n\r\nVamos voltar um pouco ao shell interativo do Python rodando \r\n``python manage.py shell`` novamente::\r\n\r\n    >>> from mysite.polls.models import Poll, Choice\r\n\r\n    # Certifique-se de que a sua adi\u00e7\u00e3o do __unicode__() funcionou.\r\n    >>> Poll.objects.all()\r\n    [<Poll: What's up?>]\r\n\r\n    # O Django fornece uma rica API de procura em banco de dados inteiramente \r\n    # controlada por argumentos formados por palavras-chave.\r\n    >>> Poll.objects.filter(id=1)\r\n    [<Poll: What's up?>]\r\n    >>> Poll.objects.filter(question__startswith='What')\r\n    [<Poll: What's up?>]\r\n\r\n    # Pegue a enquete cujo ano \u00e9 2007. Claro que, se voc\u00ea estiver seguindo esse \r\n    # tutorial em outro ano, mude como for apropriado.\r\n    >>> Poll.objects.get(pub_date__year=2007)\r\n    <Poll: What's up?>\r\n\r\n    >>> Poll.objects.get(id=2)\r\n    Traceback (most recent call last):\r\n        ...\r\n    DoesNotExist: Poll matching query does not exist.\r\n\r\n    # Buscar por uma chave prim\u00e1ria \u00e9 o caso mais comum, ent\u00e3o o Django fornece um \r\n    # atalho para buscas por chaves prim\u00e1rias espec\u00edficas.\r\n    # O que se segue \u00e9 id\u00eantido a Poll.objects.get(id=1).\r\n    >>> Poll.objects.get(pk=1)\r\n    <Poll: What's up?>\r\n\r\n    # Certifique-se de que o m\u00e9todo personalizado funcionou.\r\n    >>> p = Poll.objects.get(pk=1)\r\n    >>> p.was_published_today()\r\n    False\r\n\r\n    # D\u00ea \u00e0 enquete (``Poll``) algumas op\u00e7\u00f5es (``Choices``). A chamada ``create`` constr\u00f3i um \r\n    # novo objeto op\u00e7\u00e3o (``choice``), executa a instru\u00e7\u00e3o INSERT, adiciona a escolha ao \r\n    # conjunto de escolhas dispon\u00edveis e retorna o novo objeto op\u00e7\u00e3o (``Choice``).\r\n    >>> p = Poll.objects.get(pk=1)\r\n    >>> p.choice_set.create(choice='Not much', votes=0)\r\n    <Choice: Not much>\r\n    >>> p.choice_set.create(choice='The sky', votes=0)\r\n    <Choice: The sky>\r\n    >>> c = p.choice_set.create(choice='Just hacking again', votes=0)\r\n\r\n    # Objetos ``Choice`` possuem acesso via API aos seus objetos ``Poll`` relacionados.\r\n    >>> c.poll\r\n    <Poll: What's up?>\r\n\r\n    # E vice-versa: Objetos ``Poll`` possuem acesso aos objetos ``Choice``.\r\n    >>> p.choice_set.all()\r\n    [<Choice: Not much>, <Choice: The sky>, <Choice: Just hacking again>]\r\n    >>> p.choice_set.count()\r\n    3\r\n\r\n    # A API segue autom\u00e1ticamente os relacionamentos da forma como voc\u00ea precisa.\r\n    # Use ``underscores`` duplos para separar relacionamentos.\r\n    # Isso funciona em tantos n\u00edveis abaixo quando voc\u00ea quiser; n\u00e3o h\u00e1 limite.\r\n    # Encontre todas as op\u00e7\u00f5es (``choices``) para uma enquete cuja ``pub_date`` \u00e9 em 2007.\r\n    >>> Choice.objects.filter(poll__pub_date__year=2007)\r\n    [<Choice: Not much>, <Choice: The sky>, <Choice: Just hacking again>]\r\n\r\n    # Vamos deletar uma das escolhas. Use delete() para isso.\r\n    >>> c = p.choice_set.filter(choice__startswith='Just hacking')\r\n    >>> c.delete()\r\n\r\nPara um detalhamento completo da API de banco de dados, veja nossa\r\n`refer\u00eancia \u00e0 API de Banco de Dados`_.\r\n\r\nQuando voc\u00ea se sentir confort\u00e1vel com a API, leia a `parte 2 desse tutorial`_\r\npara colocar a administra\u00e7\u00e3o autom\u00e1tica do Django para funcionar.\r\n\r\n.. _refer\u00eancia \u00e0 API de Banco de Dados: http://www.djangoproject.org/documentation/db-api/\r\n.. _parte 2 desse tutorial: ../tutorial02/\r\n", "enable_comments": 0}}, {"pk": 6, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Escrevendo sua primeira aplica\u00e7\u00e3o Django, parte 2", "url": "/documentacao/tutorial02/", "template_name": "flatpages/docs.html", "sites": [1], "content": "..\r\n.. META INFORMATION OF TRANSLATION\r\n..\r\n..   $TranslationStatus: Done $\r\n..   $OriginalRevision: 8435 $\r\n..   $TranslationAuthors: Anderson Santos $\r\n..\r\n.. INFO OF THIS FILE (DO NOT EDIT! UPDATED BY SUBVERSION)\r\n..\r\n..   $HeadURL: https://django-l10n-portuguese.googlecode.com/svn/trunk/docs/tutorial02_pt-br.txt $\r\n..   $LastChangedRevision: 131 $\r\n..   $LastChangedBy: davilima6 $\r\n..   $LastChangedDate: 2008-08-18 21:40:44 -0300 (Seg, 18 Ago 2008) $\r\n..\r\n\r\n=================================================\r\nEscrevendo sua primeira aplica\u00e7\u00e3o Django, parte 2\r\n=================================================\r\n\r\nEste tutorial inicia-se onde o `Tutorial 1`_ terminou. Vamos continuar a\r\naplica\u00e7\u00e3o web de enquete focando agora no site de administra\u00e7\u00e3o autom\u00e1tica do\r\nDjango.\r\n\r\n\r\n.. _Tutorial 1: ../tutorial01/\r\n\r\n.. admonition:: Filosofia\r\n\r\n    Gerar sites de administra\u00e7\u00e3o para sua equipe ou clientes adicionarem,\r\n    editarem ou exclu\u00edrem conte\u00fado \u00e9 um trabalho entediante que n\u00e3o requer\r\n    muita criatividade. Por essa raz\u00e3o, o Django automatiza toda a cria\u00e7\u00e3o da\r\n    interfaces de administra\u00e7\u00e3o para os modelos.\r\n\r\n    O Django foi inicialmente desenvolvido em um ambiente de jornal, onde havia\r\n    uma clara separa\u00e7\u00e3o entre \"produtores de conte\u00fado\" e o site \"p\u00fablico\".\r\n    Gerentes de site usam o sistema para adicionar not\u00edcias, eventos,\r\n    resultado de esportes, etc, e o conte\u00fado \u00e9 exibido no site p\u00fablico. O\r\n    Django soluciona o problema de criar uma interface unificada para os\r\n    administradores editarem o conte\u00fado.\r\n\r\n    A administra\u00e7\u00e3o n\u00e3o foi desenvolvida necessariamente para ser usada pelos\r\n    visitantes do site, mas sim pelos gerentes.\r\n\r\n\r\nAtive o site de admin\r\n=====================\r\n\r\nO site de administra\u00e7\u00e3o n\u00e3o vem ativo por padr\u00e3o -- ele \u00e9 opcional. Para\r\nativ\u00e1-lo para sua instala\u00e7\u00e3o, siga estes tr\u00eas passos:\r\n\r\n\r\n    * Adicione ``\"django.contrib.admin\"`` \u00e0s suas configura\u00e7\u00f5es de\r\n      ``\"INSTALLED_APPS\"``.\r\n    * Execute ``python manage.py syncdb``. J\u00e1 que uma nova aplica\u00e7\u00e3o foi\r\n      adicionada ao ``INSTALLED_APPS``, as tabelas do banco de dados precisam\r\n      ser atualizadas.\r\n    * Edite seu arquivo ``meusite/urls.py`` e retire o coment\u00e1rio das linhas\r\n      abaixo de \"Uncomment this for admin:\". Esse arquivo \u00e9 um URLconf;\r\n      entraremos em detalhes sobre URLconfs no pr\u00f3ximo tutorial. Por enquanto,\r\n      tudo o que voc\u00ea tem a saber \u00e9 que ele mapeia as URL principais para as\r\n      aplica\u00e7\u00f5es. No final voc\u00ea deve ter um ``urls.py`` parecido com este:\r\n      \r\n      .. parsed-literal::\r\n      \r\n          from django.conf.urls.defaults import *\r\n\r\n          # Uncomment the next two lines to enable the admin:\r\n          **from django.contrib import admin**\r\n          **admin.autodiscover()**\r\n\r\n          urlpatterns = patterns('',\r\n              # Example:\r\n              # (r'^{{ project_name }}/', include('{{ project_name }}.foo.urls')),\r\n\r\n              # Uncomment the next line to enable admin documentation:\r\n              # (r'^admin/doc/', include('django.contrib.admindocs.urls')),\r\n\r\n              # Uncomment the next line for to enable the admin:\r\n              **(r'^admin/(.*)', admin.site.root),**\r\n          )\r\n          \r\n      (As linhas em negrito s\u00e3o as que precisam ser descomentadas.)\r\n\r\n\r\nInicie o servidor de desenvolvimento\r\n====================================\r\n\r\nVamos iniciar o servidor de desenvolvimento e explorar o site admin.\r\n\r\nLembre-se do Tutorial 1 onde voc\u00ea iniciou o servidor com::\r\n\r\n    python manage.py runserver\r\n\r\nAgora, abra o navegador de internet e v\u00e1 para \"/admin/\" no seu dom\u00ednio local --\r\npor exemplo, http://127.0.0.1:8000/admin/. Voc\u00ea dever\u00e1 ver a tela de login:\r\n\r\n.. image:: http://media.djangoproject.com/img/doc/tutorial/admin01.png\r\n   :alt: Tela de login do Django admin\r\n\r\nEntre no site de administra\u00e7\u00e3o\r\n==============================\r\n\r\nAgora tente acessar o sistema. (Voc\u00ea criou uma conta de superusu\u00e1rio na\r\nprimeira parte deste tutorial, lembra?). Voc\u00ea dever\u00e1 ver a p\u00e1gina inicial do\r\nDjango admin:\r\n\r\n.. image:: http://media.djangoproject.com/img/doc/tutorial/admin02t.png\r\n   :alt: P\u00e1gina inicial do Django admin\r\n   :target: http://media.djangoproject.com/img/doc/tutorial/admin02.png\r\n\r\nVoc\u00ea dever\u00e1 ver alguns outros tipos de conte\u00fados edit\u00e1veis, incluindo grupos,\r\nusu\u00e1rios e sites. Essas s\u00e3o as funcionalidades centrais que o Django inclui por\r\npadr\u00e3o.\r\n\r\n.. _perguntas \"Eu n\u00e3o consigo acessar\": ../faq/#the-admin-site\r\n\r\n\r\nTorne a aplica\u00e7\u00e3o de enquetes edit\u00e1vel no site admin\r\n====================================================\r\n\r\nMas onde est\u00e1 nossa aplica\u00e7\u00e3o de enquete? Ela n\u00e3o est\u00e1 vis\u00edvel na p\u00e1gina\r\nprincipal do admin.\r\n\r\nSomente uma coisa precisa ser feita: temos que especificar no modelo \"Poll\"\r\nque os objetos \"Poll\" possuem uma interface de administra\u00e7\u00e3o. Edite o arquivo\r\n\"meusite/enquete/models.py\" e adicione o seguinte ao final do arquivo::\r\n\r\n    from django.contrib import admin\r\n    \r\n    admin.site.register(Poll)\r\n\r\nAgora atualize a p\u00e1gina do Django admin para visualizar as altera\u00e7\u00f5es. Observe\r\nque voc\u00ea n\u00e3o tem que reiniciar o servidor de desenvolvimento -- ele recarregar\u00e1\r\nseu projeto de modo que todas as modifica\u00e7\u00f5es no c\u00f3digo ser\u00e3o vistas\r\nimediatamente no seu navegador.\r\n\r\nExplore a funcionalidade de administra\u00e7\u00e3o gratuita\r\n==================================================\r\n\r\nAgora que n\u00f3s registramos ``Poll``, o Django sabe que ele deve ser exibida na\r\np\u00e1gina principal do admin:\r\n\r\n.. image:: http://media.djangoproject.com/img/doc/tutorial/admin03t.png\r\n   :alt: P\u00e1gina principal de administra\u00e7\u00e3o, agora com enquetes exibidas\r\n   :target: http://media.djangoproject.com/img/doc/tutorial/admin03.png\r\n\r\nClique em \"Polls\". Agora voc\u00ea est\u00e1 na p\u00e1gina \"lista de altera\u00e7\u00e3o\" para\r\nas enquetes. Essa p\u00e1gina exibe todas as enquetes no banco de dados e permite\r\nao usu\u00e1rio alter\u00e1-las. Existe a enquete \"What's up?\" criada no primeiro\r\ntutorial:\r\n\r\n.. image:: http://media.djangoproject.com/img/doc/tutorial/admin04t.png\r\n   :alt: Lista de altera\u00e7\u00e3o de enquetes\r\n   :target: http://media.djangoproject.com/img/doc/tutorial/admin04.png\r\n\r\nClique na enquete \"What's up?\" para edit\u00e1-la:\r\n\r\n.. image:: http://media.djangoproject.com/img/doc/tutorial/admin05t.png\r\n   :alt: Formul\u00e1rio de edi\u00e7\u00e3o para a enquete\r\n   :target: http://media.djangoproject.com/img/doc/tutorial/admin05.png\r\n\r\nNote o seguinte:\r\n\r\n    * O formul\u00e1rio \u00e9 gerado automaticamente a partir do modelo Poll.\r\n    * Os diferentes tipos de campos do modelo (``models.DateTimeField``,\r\n      ``models.CharField``) correspondem aos respectivos widgets HTML de\r\n      inser\u00e7\u00e3o. Cada tipo de campo sabe como exibir a si mesmo no Django admin.\r\n    * Cada ``DateTimeField`` ganha um atalho JavaScript gratuito. Datas t\u00eam um\r\n      atalho \"Today\" e um calend\u00e1rio popup, e horas t\u00eam um atalho \"Now\" e\r\n      um conveniente popup com listas de horas comumente usadas.\r\n\r\nA parte inferior da p\u00e1gina fornece uma s\u00e9rie de op\u00e7\u00f5es:\r\n\r\n    * Save -- Salva as altera\u00e7\u00f5es e retorna \u00e0 lista para edi\u00e7\u00e3o deste tipo de\r\n      objeto.\r\n    * Save and continue editing -- Salva as altera\u00e7\u00f5es e retorna \u00e0 p\u00e1gina deste\r\n      objeto.\r\n    * Save and add another -- Salva as informa\u00e7\u00f5es e abre um formul\u00e1rio em\r\n      branco deste tipo de objeto.\r\n    * Delete -- Exibe uma p\u00e1gina de confirma\u00e7\u00e3o de exclus\u00e3o.\r\n\r\nAltere a \"Publication date\" clicando nos atalhos \"Today\" e \"Now\". Em seguida,\r\nclique em \"Save and continue editing.\" Ent\u00e3o clique em \"History\" no canto\r\nsuperior direito. Voc\u00ea ver\u00e1 uma p\u00e1gina exibindo todas as altera\u00e7\u00f5es feitas ao\r\nobjeto pelo Django admin, com a hora e o nome de usu\u00e1rio da pessoa que fez\r\na altera\u00e7\u00e3o:\r\n\r\n.. image:: http://media.djangoproject.com/img/doc/tutorial/admin06t.png\r\n   :alt: P\u00e1gina de hist\u00f3rico para o objeto Poll.\r\n   :target: http://media.djangoproject.com/img/doc/tutorial/admin06.png\r\n\r\nPersonalize o formul\u00e1rio de Administra\u00e7\u00e3o\r\n=========================================\r\n\r\nTire alguns minutos para apreciar todo o c\u00f3digo que voc\u00ea n\u00e3o teve que escrever.\r\nQuando voc\u00ea chama ``admin.site.register(Poll)``, o Django simplesmente permite\r\nque voc\u00ea edite o objeto e \"adivinha\" como exibi-lo dentro do admin. Com\r\nfreq\u00fc\u00eancia, voc\u00ea desejar\u00e1 controlar como o admin se parece e trabalha. Voc\u00ea\r\nfar\u00e1 isso informando ao Django sobre as op\u00e7\u00f5es que voc\u00ea quer quando registra o\r\nobjeto.\r\n\r\nVamos ver como isso funciona reordenando os campos no formul\u00e1rio de edi\u00e7\u00e3o.\r\nSubstitua a linha ``admin.site.register(Poll)`` por::\r\n\r\n    class PollAdmin(admin.ModelAdmin):\r\n        fields = ['pub_date', 'question']\r\n        \r\n    admin.site.register(Poll, PollAdmin)\r\n\r\nVoc\u00ea seguir\u00e1 este padr\u00e3o -- criar um objeto de modelagem do admin e ent\u00e3o\r\npass\u00e1-lo como segundo argumento para o ``admin.site.register()`` -- sempre que\r\nprecisar alterar as op\u00e7\u00f5es de admin para um objeto.\r\n\r\nEssa mudan\u00e7a espec\u00edfica no c\u00f3digo acima faz com que a \"Publication date\" seja\r\nmostrada em primeiro lugar, e n\u00e3o em segundo:\r\n\r\n.. image:: http://media.djangoproject.com/img/doc/tutorial/admin07.png\r\n   :alt: Os campos foram reordenados\r\n\r\nIsso n\u00e3o \u00e9 impressionante com apenas dois campos, mas para formul\u00e1rios com\r\nd\u00fazias deles, escolher uma ordem intuitiva \u00e9 um detalhe importante para a\r\nusabilidade.\r\n\r\nE por falar em d\u00fazias de campos, voc\u00ea pode querer dividir o formul\u00e1rio em\r\ngrupos (fieldsets)::\r\n\r\n    class PollAdmin(admin.ModelAdmin):\r\n        fieldsets = [\r\n            (None,               {'fields': ['question']}),\r\n            ('Date information', {'fields': ['pub_date']}),\r\n        ]\r\n        \r\n    admin.site.register(Poll, PollAdmin)\r\n\r\nO primeiro elemento de cada tupla em ``fieldsets`` \u00e9 o t\u00edtulo do grupo. Aqui\r\nest\u00e1 a apar\u00eancia do nosso formul\u00e1rio agora:\r\n\r\n.. image:: http://media.djangoproject.com/img/doc/tutorial/admin08t.png\r\n   :alt: O formul\u00e1rio possui grupos de campos agora\r\n   :target: http://media.djangoproject.com/img/doc/tutorial/admin08.png\r\n\r\nVoc\u00ea pode atribuir classes HTML arbitr\u00e1rias para cada grupo. O Django fornece\r\numa classe ``\"collapse\"`` que exibe um grupo particular inicialmente recolhido.\r\nIsso \u00e9 \u00fatil quando voc\u00ea tem um formul\u00e1rio longo que cont\u00e9m um grupo de campos\r\nque n\u00e3o s\u00e3o comumente utilizados::\r\n\r\n        class PollAdmin(admin.ModelAdmin):\r\n            fieldsets = [\r\n                (None,               {'fields': ['question']}),\r\n                ('Date information', {'fields': ['pub_date'], 'classes': ['collapse']}),\r\n            ]\r\n\r\n.. image:: http://media.djangoproject.com/img/doc/tutorial/admin09.png\r\n   :alt: Grupo de campos (fieldset) inicialmente recolhido\r\n\r\nAdicione objetos relacionados\r\n=============================\r\n\r\nOK, temos nossa p\u00e1gina de administra\u00e7\u00e3o de Enquetes. Mas uma ``Poll`` (enquete)\r\ntem m\u00faltiplos ``Choices`` (op\u00e7\u00f5es), e a p\u00e1gina de administra\u00e7\u00e3o n\u00e3o exibe as\r\nop\u00e7\u00f5es.\r\n\r\nAinda.\r\n\r\nH\u00e1 duas formas de solucionar esse problema. A primeira \u00e9 registrar ``Choice``\r\nno admin, assim como fizemos com ``Poll``. Isto \u00e9 f\u00e1cil::\r\n\r\n    admin.site.register(Choice)\r\n\r\nAgora \"Choices\" \u00e9 uma op\u00e7\u00e3o dispon\u00edvel no Django admin. O formul\u00e1rio de \"Add\r\nchoice\" se parece com isto:\r\n\r\n.. image:: http://media.djangoproject.com/img/doc/tutorial/admin10.png\r\n   :alt: P\u00e1gina de admin para Choice\r\n\r\nNesse formul\u00e1rio, o campo \"Poll\" \u00e9 uma caixa de sele\u00e7\u00e3o contendo todas as\r\nenquetes no banco de dados. O Django sabe que uma ``ForeignKey`` (chave\r\nestrangeira) deve ser representada no admin como um campo ``<select>``. No\r\nnosso caso, s\u00f3 existe uma enquete at\u00e9 agora.\r\n\r\nObserve tamb\u00e9m o link \"Add Another\" (adicionar outra) ao lado de \"Poll\". Todo\r\nobjeto com um relacionamento de chave estrangeira para outro ganha essa a\u00e7\u00e3o\r\ngratuitamente. Quando voc\u00ea clica em \"Add Another\", voc\u00ea ter\u00e1 uma janela popup\r\ncom o formul\u00e1rio \"Add poll\". Se voc\u00ea adicionar uma enquete na janela e clicar\r\nem \"Save\", o Django salvar\u00e1 a enquete no banco de dados e ir\u00e1 dinamicamente\r\nadicionar a op\u00e7\u00e3o j\u00e1 selecionada ao formul\u00e1rio \"Add choice\" que voc\u00ea est\u00e1\r\nvendo.\r\n\r\nMas, s\u00e9rio, essa \u00e9 uma maneira ineficiente de adicionar objetos Choice ao\r\nsistema. Seria muito melhor se voc\u00ea pudesse adicionar v\u00e1rias op\u00e7\u00f5es diretamente\r\nquando criasse um objeto Poll (enquete). Vamos fazer isso acontecer.\r\n\r\nRemova a chamada ``register()`` do modelo Choice. Ent\u00e3o edite o c\u00f3digo de\r\nregistro de ``Poll`` para que fique assim::\r\n\r\n    class ChoiceInline(admin.StackedInline):\r\n        model = Choice\r\n        extra = 3\r\n        \r\n    class PollAdmin(admin.ModelAdmin):\r\n        fieldsets = [\r\n            (None,               {'fields': ['question']}),\r\n            ('Date information', {'fields': ['pub_date'], 'classes': ['collapse']}),\r\n        ]\r\n        inlines = [ChoiceInline]\r\n\r\n    admin.site.register(Poll, PollAdmin)\r\n\r\nIsso diz ao Django: \"Objetos Choice s\u00e3o editados na mesma p\u00e1gina de\r\nadministra\u00e7\u00e3o de Poll. Por padr\u00e3o, forne\u00e7a campos suficientes para 3 Choices.\"\r\n\r\nCarregue a p\u00e1gina \"Add poll\" para ver como est\u00e1:\r\n\r\n.. image:: http://media.djangoproject.com/img/doc/tutorial/admin11t.png\r\n   :alt: P\u00e1gina Add Poll cont\u00e9m Choices agora\r\n   :target: http://media.djangoproject.com/img/doc/tutorial/admin11.png\r\n\r\nFunciona assim: H\u00e1 tr\u00eas blocos para Choices relacionados -- como especificado\r\nem ``extra`` --, mas a cada vez que voc\u00ea retorna \u00e0 p\u00e1gina de \"Altera\u00e7\u00e3o\"\r\npara um objeto j\u00e1 criado, voc\u00ea ganha outros tr\u00eas slots extras.\r\n\r\nNo entanto, h\u00e1 um pequeno problema. Um bocado de espa\u00e7o na tela \u00e9 tomado para\r\nexibir todos os tr\u00eas objetos Choice relacionados a serem inseridos. Por essa\r\nraz\u00e3o, o Django oferece uma maneira alternativa para exibir cada objeto\r\nrelacionado em uma \u00fanica linha; voc\u00ea s\u00f3 precisa alterar a declara\u00e7\u00e3o\r\n``ChoiceInline`` para que leia::\r\n\r\n    class ChoiceInline(admin.TabularInline):\r\n    #...\r\n\r\nCom o ``TabularInline`` (em vez de ``StackedInline``), os objetos relacionados\r\ns\u00e3o exibidos de uma maneira mais compacta, baseada em tabela:\r\n\r\n.. image:: http://media.djangoproject.com/img/doc/tutorial/admin12.png\r\n   :alt: A p\u00e1gina Add poll agora com op\u00e7\u00f5es compactas\r\n\r\nCustomize a p\u00e1gina de lista de edi\u00e7\u00e3o\r\n=====================================\r\n\r\nAgora que a p\u00e1gina de administra\u00e7\u00e3o de Polls est\u00e1 bonita, vamos fazer algumas\r\nmelhorias \u00e0 p\u00e1gina \"change list\" (lista de edi\u00e7\u00e3o) -- aquela que exibe todas as\r\nenquetes do sistema.\r\n\r\nAqui como ela est\u00e1 at\u00e9 agora:\r\n\r\n.. image:: http://media.djangoproject.com/img/doc/tutorial/admin04t.png\r\n   :alt: P\u00e1gina de lista de Enquetes\r\n   :target: http://media.djangoproject.com/img/doc/tutorial/admin04.png\r\n\r\nPor padr\u00e3o, o Django mostra o ``str()`` de cada objeto. Mas algumas vezes seria\r\nmais \u00fatil se pud\u00e9ssemos mostrar campos individuais. Para fazer isso, use a\r\nop\u00e7\u00e3o ``list_display``, que \u00e9 uma tupla de nomes de campos a serem exibidos,\r\ncomo colunas, na p\u00e1gina de lista de edi\u00e7\u00e3o dos objetos::\r\n\r\n    class PollAdmin(admin.ModelAdmin):\r\n        # ...\r\n        list_display = ('question', 'pub_date')\r\n\r\nApenas para facilitar, vamos incluir o m\u00e9todo customizado\r\n``was_published_today`` do Tutorial 1::\r\n\r\n    class PollAdmin(admin.ModelAdmin):\r\n        # ...\r\n        list_display = ('question', 'pub_date', 'was_published_today')\r\n\r\nAgora a p\u00e1gina de edi\u00e7\u00e3o de enquetes est\u00e1 assim:\r\n\r\n.. image:: http://media.djangoproject.com/img/doc/tutorial/admin13t.png\r\n   :alt: P\u00e1gina de edi\u00e7\u00e3o de enquetes, atualizada\r\n   :target: http://media.djangoproject.com/img/doc/tutorial/admin13.png\r\n\r\nVoc\u00ea pode clicar no cabe\u00e7alho da coluna para orden\u00e1-las por estes valores --\r\nexceto no caso do ``was_published_today``, porque a ordena\u00e7\u00e3o pelo resultado\r\nde um m\u00e9todo arbitr\u00e1rio n\u00e3o \u00e9 suportada. Tamb\u00e9m note que o cabe\u00e7alho da coluna\r\npara ``was_published_today`` \u00e9, por padr\u00e3o, o nome do m\u00e9todo (com underscores\r\nsubstitu\u00eddos por espa\u00e7os). Mas voc\u00ea pode alterar isso fornecendo ao m\u00e9todo\r\num atributo ``short_description``::\r\n\r\n    def was_published_today(self):\r\n        return self.pub_date.date() == datetime.date.today()\r\n    was_published_today.short_description = 'Published today?'\r\n\r\nVamos adicionar uma outra melhoria \u00e0 p\u00e1gina de lista de edi\u00e7\u00e3o: Filtros. Adicione\r\na seguinte linha ao ``Poll.Admin``::\r\n\r\n    list_filter = ['pub_date']\r\n\r\nIsso adiciona uma barra lateral \"Filter\" que permite \u00e0s pessoas filtrarem\r\na lista de edi\u00e7\u00e3o pelo campo ``pub_date``:\r\n\r\n.. image:: http://media.djangoproject.com/img/doc/tutorial/admin14t.png\r\n   :alt: P\u00e1gina de edi\u00e7\u00e3o de enquetes, atualizada\r\n   :target: http://media.djangoproject.com/img/doc/tutorial/admin14.png\r\n\r\nO tipo de filtro exibido depende do tipo de campo que voc\u00ea est\u00e1 filtrando.\r\nDevido ao ``pub_date`` ser um DateTimeField, o Django sabe dar as op\u00e7\u00f5es\r\nde filtro para DateTimeFields: \"Any date,\" \"Today,\" \"Past 7 days,\"\r\n\"This month,\" \"This year.\"\r\n\r\nIsso est\u00e1 tomando uma boa forma. Vamos adicionar alguma capacidade de\r\npesquisa::\r\n\r\n    search_fields = ['question']\r\n\r\nIsso adiciona um campo de pesquisa ao topo da lista de edi\u00e7\u00e3o. Quando algu\u00e9m\r\ninforma termos de pesquisa, o Django ir\u00e1 pesquisar o campo ``question``. Voc\u00ea\r\npode usar quantos campos quiser -- entretanto, porque ele usa um comando\r\n``LIKE`` internamente, seja moderado para manter seu banco de dados feliz.\r\n\r\nFinalmente, porque os objetos Poll possuem datas, \u00e9 conveniente acompanhar\r\npor data. Adicione esta linha::\r\n\r\n    date_hierarchy = 'pub_date'\r\n\r\nIsso adiciona uma navega\u00e7\u00e3o hier\u00e1rquica, por data, no topo da p\u00e1gina lista de\r\nedi\u00e7\u00e3o. No n\u00edvel mais acima, ele exibe todos os anos dispon\u00edveis. Ent\u00e3o desce\r\npara os meses e, por \u00faltimo, os dias.\r\n\r\nAgora \u00e9 tamb\u00e9m uma boa hora para observar que a lista de edi\u00e7\u00e3o fornece uma\r\npagina\u00e7\u00e3o gratuitamente. O padr\u00e3o \u00e9 mostrar 50 itens por p\u00e1gina. A p\u00e1gina da\r\nlista de edi\u00e7\u00e3o, campos de pesquisa, filtros, hierarquia por data, ordena\u00e7\u00e3o\r\npor cabe\u00e7alho de coluna, todos trabalham em sincronia como deveriam.\r\n\r\nCustomize o look and feel do admin\r\n==================================\r\n\r\nObviamente, ter \"Django administration\" no topo de cada p\u00e1gina de admin \u00e9\r\nrid\u00edculo. Isso \u00e9 s\u00f3 um texto de exemplo.\r\n\r\n\u00c9 f\u00e1cil de editar, no entanto, usando o sistema de templates do Django. O\r\nDjango admin \u00e9 feito com o pr\u00f3prio Django e conseq\u00fcentemente sua interface usa\r\no sistema de templates nativo do Django.\r\n\r\nAbra seu arquivo de settings (``mysite/settings.py``, lembre-se) e veja a\r\nconfigura\u00e7\u00e3o ``TEMPLATE_DIRS``. ``TEMPLATE_DIRS`` \u00e9 uma tupla de diret\u00f3rios\r\nde arquivos que ser\u00e3o verificados quando carregar os templates do Django, ou\r\nseja, caminhos de busca.\r\n\r\nPor padr\u00e3o, ``TEMPLATE_DIRS`` vem vazio. Portanto, vamos adicionar uma linha\r\npara dizer onde nossos templates Django est\u00e3o::\r\n\r\n    TEMPLATE_DIRS = (\r\n        \"/home/my_username/mytemplates\", # Altere isso para seu pr\u00f3prio diret\u00f3rio.\r\n    )\r\n\r\nAgora copie o template ``admin/base_site.html`` de dentro do diret\u00f3rio padr\u00e3o\r\ndo Django admin (``django/contrib/admin/templates``) em um subdiret\u00f3rio\r\n``admin`` onde quer que esteja o diret\u00f3rio que voc\u00ea est\u00e1 usando em\r\n``TEMPLATE_DIRS``. Por exemplo, se seu ``TEMPLATE_DIRS`` inclui\r\n``\"/home/my_username/mytemplates\"``, como acima, ent\u00e3o copie\r\n``django/contrib/admin/templates/admin/base_site.html``para\r\n``/home/my_username/mytemplates/admin/base_site.html``. N\u00e3o se esque\u00e7a do\r\nsubdiret\u00f3rio ``admin``.\r\n\r\nEnt\u00e3o simplesmente edite o arquivo e substitua o texto gen\u00e9rico do Django com\r\no nome do seu pr\u00f3prio site como desejar.\r\n\r\nNote que qualquer template padr\u00e3o do admin pode ser sobrescrito. Para\r\nsobrescrever um template, apenas fa\u00e7a a mesma coisa que voc\u00ea fez com\r\n``base_site.html`` -- copie ele do diret\u00f3rio padr\u00e3o para o seu pr\u00f3prio\r\ndiret\u00f3rio, e fa\u00e7a as mudan\u00e7as.\r\n\r\nLeitores astutos ir\u00e3o se perguntar: Mas se ``TEMPLATE_DIRS`` estava vazio por\r\npadr\u00e3o, como o Django p\u00f4de encontrar o diret\u00f3rio padr\u00e3o dos templates do admin?\r\nA resposta \u00e9, por padr\u00e3o, o Django ir\u00e1 automaticamente procurar por um\r\nsubdiret\u00f3rio ``templates/`` dentro de cada pacote de aplica\u00e7\u00e3o, para usar como\r\nfallback. Veja a `documenta\u00e7\u00e3o de loader types` - para a informa\u00e7\u00e3o completa.\r\n\r\n.. _documenta\u00e7\u00e3o de loader types: ../templates_python/#loader-types\r\n\r\nCustomize a p\u00e1gina inicial do admin\r\n===================================\r\n\r\nDe maneira similar, voc\u00ea pode querer customizar o look and feel da p\u00e1gina\r\ninicial do Django admin.\r\n\r\nPor padr\u00e3o, ela exibe todas as aplica\u00e7\u00f5es dispon\u00edveis, de acordo com sua\r\nconfigura\u00e7\u00e3o ``INSTALLED_APPS``. Mas a ordem em que ser\u00e3o exibidas \u00e9 aleat\u00f3ria,\r\ne voc\u00ea pode querer fazer altera\u00e7\u00f5es significativas no layout. Al\u00e9m do que, a\r\np\u00e1gina inicial \u00e9 provavelmente a p\u00e1gina mais importante no admin, e deve ser\r\nf\u00e1cil de usar.\r\n\r\nO template a ser customizado \u00e9 o ``admin/index.html``. (Fa\u00e7a o mesmo que foi\r\nfeito com o ``admin/base_site.html`` na se\u00e7\u00e3o anterior -- copie ele do\r\ndiret\u00f3rio padr\u00e3o para o seu pr\u00f3prio diret\u00f3rio de templates). Edite o arquivo, e\r\nvoc\u00ea ver\u00e1 que ele usa uma template tag chamada\r\n``{% get_admin_app_list as app_list %}``. Ela \u00e9 a m\u00e1gica que obt\u00e9m todas as\r\naplica\u00e7\u00f5es instaladas no Django. Em vez de us\u00e1-la, voc\u00ea pode explicitamente\r\nfazer os links para os objetos espec\u00edficos na p\u00e1gina de admin, da maneira que\r\nachar mais apropriado.\r\n\r\nO Django oferece outro atalho neste departamento. Rode o comando\r\n``python manage.py adminindex polls`` para pegar o trecho do c\u00f3digo para a inclus\u00e3o\r\nno template da p\u00e1gina inicial do admin. \u00c9 um \u00f3timo ponto de partida.\r\n\r\nPara um detalhamento completo na customiza\u00e7\u00e3o do look and feel do site do Django\r\nadmin em geral, veja o `Guia de CSS do Django admin`_.\r\n\r\nQuando voc\u00ea se sentir confort\u00e1vel com o site de admin, leia a `parte 3 deste tutorial`_\r\npara come\u00e7ar a trabalhar com as views p\u00fablicas da enquete.\r\n\r\n.. _Guia de CSS do Django admin: http://docs.djangoproject.com/en/dev/obsolete/admin-css/\r\n.. _parte 3 deste tutorial: ../tutorial03/", "enable_comments": 0}}, {"pk": 8, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Escrevendo sua primeira aplica\u00e7\u00e3o Django, parte 3", "url": "/documentacao/tutorial03/", "template_name": "flatpages/docs.html", "sites": [1], "content": "..\r\n.. META INFORMATION OF TRANSLATION\r\n..\r\n..   $TranslationStatus: Done $\r\n..   $OriginalRevision: 7521 $\r\n..   $TraductionAuthors: Marinho Brand\u00e3o $\r\n..\r\n.. INFO OF THIS FILE (DO NOT EDIT! UPDATED BY SUBVERSION)\r\n..\r\n..   $HeadURL: https://django-l10n-portuguese.googlecode.com/svn/trunk/docs/tutorial03_pt-br.txt $\r\n..   $LastChangedRevision: 17 $\r\n..   $LastChangedBy: semente $\r\n..   $LastChangedDate: 2008-06-12 14:33:56 -0300 (Thu, 12 Jun 2008) $\r\n..\r\n\r\n=================================================\r\nEscrevendo sua primeira aplica\u00e7\u00e3o Django, parte 3\r\n=================================================\r\n\r\nEste tutorial inicia-se onde o `Tutorial 2`_ terminou. Vamos continuar a aplica\u00e7\u00e3o web\r\nde enquete e focaremos na cria\u00e7\u00e3o da interface p\u00fablica - \"views\".\r\n\r\n\r\n.. _Tutorial 2: ../tutorial02/\r\n\r\n.. admonition:: Filosofia\r\n\r\n    Uma *view* \u00e9 um \"tipo\" de p\u00e1gina em sua aplica\u00e7\u00e3o Django que em geral serve uma fun\u00e7\u00e3o\r\n    espec\u00edfica e tem uma *template* espec\u00edfica. Por exemplo, em uma aplica\u00e7\u00e3o de blog,\r\n    existem as seguintes *views*:\r\n\r\n    * P\u00e1gina inicial do blog - exibe os artigos mais recentes;\r\n    * P\u00e1gina de \"detalhes\" de um artigo - p\u00e1gina de detalhamento de um \u00fanico artigo;\r\n    * P\u00e1gina de arquivo por ano - exibe todos os m\u00eases com artigos de um determinado ano;\r\n    * P\u00e1gina de arquivo por m\u00eas - exibe todos os dias com artigos de um determinado m\u00eas;\r\n    * P\u00e1gina de arquivo por dia - exibe todos os artigos de um determinado dia;\r\n    * Suporte a coment\u00e1rios - controla o envio de coment\u00e1rios para um artigo.\r\n\r\n    Em nossa aplica\u00e7\u00e3o de enquetes, n\u00f3s temos as seguintes *views*:\r\n\r\n    * P\u00e1gina de \"arquivo\" de enquetes - exibe as enquetes mais recentes;\r\n    * P\u00e1gina de \"detalhes\" da enquete - exibe quest\u00f5es para a enquete, sem os resultados\r\n      mas com um formul\u00e1rio para votar;\r\n    * P\u00e1gina de \"resultados\" de enquetes - exibe os resultados de uma enquete em particular;\r\n    * A\u00e7\u00e3o do voto - permite a vota\u00e7\u00e3o para uma escolha particular em uma enquete em particular.\r\n\r\n    No Django, cada *view* \u00e9 representada por uma fun\u00e7\u00e3o simples em Python.\r\n\r\nMonte suas URLs\r\n===============\r\n\r\nO primeiro passo para escrever *views* \u00e9 montar sua estrutura de URLs. Voc\u00ea faz isso criando um\r\nm\u00f3dulo em Python, chamado de *URLconf*. URLconfs s\u00e3o como o Django associa uma URL desejada a um\r\nc\u00f3digo em Python.\r\n\r\nQuando um usu\u00e1rio requisita uma p\u00e1gina constru\u00edda em Django, o sistema verifica a *setting*\r\nROOT_URLCONF, que cont\u00e9m uma string do caminho de um m\u00f3dulo Python. O Django carrega esse m\u00f3dulo\r\ne verifica se o mesmo possui uma vari\u00e1vel chamada **urlpatterns**, que \u00e9 uma sequ\u00eancia de tuplas\r\nno seguinte formato::\r\n\r\n    (express\u00e3o regular, fun\u00e7\u00e3o em Python para resposta [, dicion\u00e1rio opcional])\r\n\r\nO Django come\u00e7a pela primeira express\u00e3o regular e percorre at\u00e9 o final da lista, comparando a\r\nURL requisitada com cada express\u00e3o regular at\u00e9 encontrar uma que combine.\r\n\r\nQuando isso ocorre, o Django chama a fun\u00e7\u00e3o de resposta em Python, com um objeto ``HTTPRequest``\r\ncomo seu primeiro argumento, alguns valores \"capturados\" da express\u00e3o regular como argumentos-chave\r\ne, opcionalmente, os elementos do dicion\u00e1rio informado na URL (um terceiro item opcional da tupla).\r\n\r\nPara saber mais sobre objetos ``HttpRequest``, veja a documenta\u00e7\u00e3o sobre `requisi\u00e7\u00e3o e resposta`_\r\n(em ingl\u00eas). Para maiores detalhes sobre a URLconf, veja a `documenta\u00e7\u00e3o sobre URLconf`_ (em ingl\u00eas).\r\n\r\nQuando voc\u00ea executou ``python manage.py startproject mysite`` no in\u00edcio do Tutorial 1, ele criou\r\numa URLconf *default* em ``mysite/urls.py``. E tamb\u00e9m automaticamente configurou a *setting*\r\n``ROOT_URLCONF`` (em ``settings.py``) para este arquivo::\r\n\r\n    ROOT_URLCONF = 'mysite.urls'\r\n\r\nPausa para um exemplo. Edite ``mysite/urls.py`` e deixe como abaixo::\r\n\r\n    from django.conf.urls.defaults import *\r\n\r\n    urlpatterns = patterns('',\r\n        (r'^polls/$', 'mysite.polls.views.index'),\r\n        (r'^polls/(?P<poll_id>\\d+)/$', 'mysite.polls.views.detail'),\r\n        (r'^polls/(?P<poll_id>\\d+)/results/$', 'mysite.polls.views.results'),\r\n        (r'^polls/(?P<poll_id>\\d+)/vote/$', 'mysite.polls.views.vote'),\r\n    )\r\n\r\nAqui vale uma revis\u00e3o. Quando algu\u00e9m solicita uma p\u00e1gina do seu web site -- diz, \"/polls/23/\", o\r\nDjango carregar\u00e1 este m\u00f3dulo em Python, porque ele foi apontado pela *setting* ``ROOT_URLCONF``.\r\nEle procura a vari\u00e1vel ``urlpatterns`` e percorre as express\u00f5es regulares na ordem de declara\u00e7\u00e3o.\r\nQuando ele encontra uma express\u00e3o regular que combine -- ``r'^polls/(?P<poll_id>\\d+)/$'`` -- ele carrega\r\no m\u00f3dulo/pacote associado: ``mysite.polls.views.detail``. O que corresponde \u00e0 fun\u00e7\u00e3o ``detail()``\r\nem ``mysite/polls/views.py``. E finalmente, ele chama a fun\u00e7\u00e3o ``detail()`` como a seguir::\r\n\r\n    detail(request=<HttpRequest object>, poll_id='23')\r\n\r\nA parte `poll_id='23'`` vem de ``(?P<poll_id>\\d+)``. Usando par\u00eanteses em torno de um pattern \"captura\"\r\no texto casado por ele e envia-o como um argumento da fun\u00e7\u00e3o de *view*; o ``?P<poll_id>`` define o\r\nnome que ser\u00e1 usado para identificar o pattern casado; e ``\\d+`` \u00e9 a express\u00e3o regular para casar\r\numa sequ\u00eancia de algarismos (ou seja, um n\u00famero).\r\n\r\nComo os padr\u00f5es de URL s\u00e3o express\u00f5es regulares, realmente n\u00e3o h\u00e1 limites para o que voc\u00ea\r\npossa fazer com elas. E tamb\u00e9m n\u00e3o \u00e9 necess\u00e1rio adicionar a extens\u00e3o na URL como ``.php`` - a menos que\r\nvoc\u00ea tenha um sinistro senso de humor, neste caso voc\u00ea faria algo como isto:\r\n\r\n    (r'^polls/latest\\.php$', 'mysite.polls.views.index'),\r\n\r\nMas n\u00e3o o fa\u00e7a, \u00e9 idiota.\r\n\r\nNote que aquelas express\u00f5es regulares n\u00e3o procuram por par\u00e2metros de GET e POST, ou o dom\u00ednio.\r\nPor exemplo, em uma requisi\u00e7\u00e3o para ``http://www.example.com/myapp/``, a URLconf ir\u00e1 procurar por\r\n``/myapp/``. Numa requisi\u00e7\u00e3o para ``http://www.example.com/myapp/?page\\\\0753``, a URLconf ir\u00e1 procurar\r\npor ``/myapp/``.\r\n\r\nSe voc\u00ea precisar de ajuda com express\u00f5es regulares, veja nesta `entrada da Wikip\u00e9dia`_ e na\r\n`documenta\u00e7\u00e3o do Python`_. Outra op\u00e7\u00e3o \u00e9 o livro da O\\\\47Reilly \"Mastering Regular Expressions\",\r\nde Jeffrey Friedl, que \u00e9 fant\u00e1stico.\r\n\r\nFinalmente, uma nota de performance: essas express\u00f5es regulares s\u00e3o compiladas na primeira vez\r\nque o m\u00f3dulo URLconf \u00e9 carregado. Elas s\u00e3o super r\u00e1pidas.\r\n\r\n.. _`entrada da Wikip\u00e9dia`: http://en.wikipedia.org/wiki/Regular_expression\r\n.. _`documenta\u00e7\u00e3o do Python`: http://www.python.org/doc/current/lib/module-re.html\r\n.. _`requisi\u00e7\u00e3o e resposta`: http://www.djangoproject.com/documentation/request_response/\r\n.. _`documenta\u00e7\u00e3o sobre URLconf`: http://www.djangoproject.com/documentation/url_dispatch/\r\n\r\nEscreva sua primeira view\r\n=========================\r\n\r\nBom, n\u00f3s n\u00e3o criamos nenhuma *view* ainda -- n\u00f3s s\u00f3 temos a URLconf. Mas vamos ter certeza de que\r\no Django est\u00e1 seguindo a URLconf corretamente.\r\n\r\nRode o servidor web de desenvolvimento do Django::\r\n\r\n    python manage.py runserver\r\n\r\nAgora v\u00e1 para ``http://localhost:8000/polls/`` no seu dom\u00ednio em seu navegador web. Voc\u00ea dever\u00e1\r\nver uma amigavelmente-colorida p\u00e1gina de erro com a seguinte mensagem::\r\n\r\n    ViewDoesNotExist at /polls/\r\n\r\n    Tried index in module mysite.polls.views. Error was: 'module'\r\n    object has no attribute 'index'\r\n\r\nEste erro ocorreu porque voc\u00ea n\u00e3o escreveu uma fun\u00e7\u00e3o ``index()`` no m\u00f3dulo ``mysite/polls/views.py``.\r\n\r\nTente ``/polls/23/``, ``/polls/23/results/`` e ``/polls/23/vote/``. As mensagens de erro dir\u00e3o que\r\numa *view* do Django foi executada (e n\u00e3o conseguiu encontrar, porque voc\u00ea n\u00e3o a escreveu ainda).\r\n\r\nHora de criar a primeira *view*. Abra o arquivo ``mysite/polls/views.py`` e cole o seguinte c\u00f3digo em\r\nPython dentro::\r\n\r\n    from django.http import HttpResponse\r\n   \r\n    def index(request):\r\n        return HttpResponse(\"Al\u00f4 mundo. Voc\u00ea est\u00e1 na p\u00e1gina index.\")\r\n\r\nEsta \u00e9 a *view* mais simples poss\u00edvel. V\u00e1 para ``/polls/`` em seu navegador, e voc\u00ea ir\u00e1 ver seu texto.\r\n\r\nAgora adicione a seguinte *view*. Esta \u00e9 ligeiramente diferente, porque ela recebe um argumento (que,\r\nlembre-se, \u00e9 passado com o que foi capturado pela express\u00e3o regular na ``URLconf``)::\r\n\r\n    def detail(request, poll_id):\r\n        return HttpResponse(\"Voc\u00ea esta olhando para a enquete %s.\" % poll_id)\r\n\r\nD\u00ea uma olhada no seu navegador, em ``/polls/34/``. Ele vai mostrar o ID que voc\u00ea informou na URL.\r\n\r\nEscreva *views* que fa\u00e7am algo\r\n==============================\r\n\r\nCada *view* \u00e9 respons\u00e1vel por fazer uma de duas coisas: retornar um objeto ``HttpResponse`` contendo\r\no conte\u00fado para a p\u00e1gina requisitada, ou levantar uma exce\u00e7\u00e3o como ``Http404``. O resto \u00e9 com voc\u00ea.\r\n\r\nSua *view* opde ler registros do banco de dados, ou n\u00e3o. Ela pode usar um sistema de templates como\r\no do Django - ou outro sistema de templates escrito por terceiros em Python - ou n\u00e3o. Ele pode gerar\r\num arquivo PDF, dar sa\u00edda em um XML, criar um arquivo ZIP *ao vivo*, qualquer coisa que voc\u00ea quiser,\r\nusando quais bibliotecas em Python voc\u00ea quiser.\r\n\r\nTudo que o Django espera \u00e9 que a *view* retorne um ``HttpResponse``. Ou uma exce\u00e7\u00e3o.\r\n\r\nPor conveni\u00eancia, vamos usar a pr\u00f3pria API de banco de dados do Django, que n\u00f3s vimos no Tutorial 1.\r\nAqui est\u00e1 um trecho para a view ``index()``, que mostra as \u00faltimas 5 enquetes no sistema, separadas\r\npor v\u00edrgulas, de acordo com a data de publica\u00e7\u00e3o::\r\n\r\n    from mysite.polls.models import Poll\r\n    from django.http import HttpResponse\r\n\r\n    def index(request):\r\n        latest_poll_list = Poll.objects.all().order_by('-pub_date')[:5]\r\n        output = ', '.join([p.question for p in latest_poll_list])\r\n        return HttpResponse(output)\r\n\r\nH\u00e1 um problema aqui, veja: o design da p\u00e1gina dessa *view* est\u00e1 em linguagem de computador. Se voc\u00ea\r\nquiser mudar a apresenta\u00e7\u00e3o de sua p\u00e1gina, voc\u00ea ter\u00e1 de editar este c\u00f3digo diretamente em  Python.\r\nVamos usar o sistema de templates do Django para separar o design do Python::\r\n\r\n    from django.template import Context, loader\r\n    from mysite.polls.models import Poll\r\n    from django.http import HttpResponse\r\n\r\n    def index(request):\r\n        latest_poll_list = Poll.objects.all().order_by('-pub_date')[:5]\r\n        t = loader.get_template('polls/index.html')\r\n        c = Context({\r\n            'latest_poll_list': latest_poll_list,\r\n        })\r\n        return HttpResponse(t.render(c))\r\n\r\nEste c\u00f3digo carrega o template chamado ``polls/index.html`` e lhe passa um contexto. O contexto \u00e9 um\r\ndicion\u00e1rio que mapeia vari\u00e1veis do template para o nome dos objetos em Python.\r\n\r\nRecarregue a p\u00e1gina. Agora voc\u00ea ver\u00e1 um erro::\r\n\r\n    TemplateDoesNotExist at /polls/\r\n    polls/index.html\r\n\r\nAh. \u00c9 porque n\u00e3o h\u00e1 template ainda. Primeiro, crie um diret\u00f3rio, em algum lugar de seu sistema de\r\narquivos, que o Django tenha acesso. (O Django roda o que um usu\u00e1rio de seu servidor roda.) Portanto\r\nn\u00e3o o crie dentro de sua raiz de documentos. Voc\u00ea provavelmente o tornaria p\u00fablico, por quest\u00f5es de\r\nseguran\u00e7a.\r\n\r\nAgora edite a *setting* TEMPLATE_DIRS em seu ``settings.py`` para dizer ao Django onde ele pode\r\nencontrar templates - exatamente como voc\u00ea fez na se\u00e7\u00e3o \"Personalize o visual da administra\u00e7\u00e3o\" do\r\nTutorial 2.\r\n\r\nQuando voc\u00ea terminar, crie um diret\u00f3rio ``polls`` em seu diret\u00f3rio de templates. Dentro, crie um\r\narquivo chamado ``index.html``. Note que nosso ``loader.get_template('polls/index.html')`` acima\r\ndireciona para ``[diret\u00f3rio de templates]/polls/index.html`` no sistema de arquivos.\r\n\r\nDigite o seguinte c\u00f3digo no arquivo do template::\r\n\r\n    {% if latest_poll_list %}\r\n        <ul>\r\n        {% for poll in latest_poll_list %}\r\n            <li>{{ poll.question }}</li>\r\n        {% endfor %}\r\n        </ul>\r\n    {% else %}\r\n        <p>No polls are available.</p>\r\n    {% endif %}\r\n\r\nCarregue a p\u00e1gina em seu navegador, e voc\u00ea ver\u00e1 uma lista marcada contendo a enquete \"What?s up\"\r\ndo Tutorial 1.\r\n\r\nUm atalho: render_to_response()\r\n-------------------------------\r\n\r\n\u00c9 muito comum carregar um template, preench\u00ea-lo com um contexto e retornar um objeto\r\n``HttpResponse`` com o resultado do template renderizado. O Django fornece este atalho. Aqui vai\r\na *view* ``index()`` completa, reescrita::\r\n\r\n    from django.shortcuts import render_to_response\r\n    from mysite.polls.models import Poll\r\n\r\n    def index(request):\r\n        latest_poll_list = Poll.objects.all().order_by('-pub_date')[:5]\r\n        return render_to_response('polls/index.html', {'latest_poll_list': latest_poll_list})\r\n\r\nNote que uma vez que voc\u00ea terminar isto em todas as *views*, n\u00f3s n\u00e3o vamos precisar importar\r\n``loader``, ``Context`` e ``HttpResponse``.\r\n\r\nA fun\u00e7\u00e3o ``render_to_response()`` recebe o nome da template como primeiro argumento e um dicion\u00e1rio\r\ncomo segundo (e opcional) argumento. Ele retorna um objeto ``HttpResponse`` do template informado\r\nrenderizado com o contexto passado.\r\n\r\nLevantando a exce\u00e7\u00e3o 404\r\n========================\r\n\r\nAgora, vamos enfrentar a *view* de detalhes da enquete - a p\u00e1gina que mostra a quest\u00e3o para uma\r\nenquete lan\u00e7ada. A\u00ed vai::\r\n\r\n    from django.http import Http404\r\n    # ...\r\n    def detail(request, poll_id):\r\n        try:\r\n            p = Poll.objects.get(pk=poll_id)\r\n        except Poll.DoesNotExist:\r\n            raise Http404\r\n        return render_to_response('polls/detail.html', {'poll': p})\r\n\r\nUm novo conceito aqui: a *view* levanta a exce\u00e7\u00e3o ``django.http.Http404`` se a enquete com ID requisitado\r\nn\u00e3o existir.\r\n\r\nUm atalho: get_object_or_404()\r\n------------------------------\r\n\r\n\u00c9 um dialeto muito comum usar o ``get()`` e levantar uma exce\u00e7\u00e3o ``Http404`` se o objeto n\u00e3o existir. O Django\r\nfornece um atalho para isso. Aqui vai a *view* ``detail()``, reescrita::\r\n\r\n    from django.shortcuts import render_to_response, get_object_or_404\r\n    # ...\r\n    def detail(request, poll_id):\r\n        p = get_object_or_404(Poll, pk=poll_id)\r\n        return render_to_response('polls/detail.html', {'poll': p})\r\n\r\nA fun\u00e7\u00e3o ``get_object_or_404()`` recebe um modulo de modelo do Django como primeiro argumento e um\r\ndeterminado n\u00famero de argumentos, que ele passa para a fun\u00e7\u00e3o ``get()`` do m\u00f3dulo. E levanta uma\r\nexce\u00e7\u00e3o se o objeto n\u00e3o existir.\r\n\r\n.. admonition:: Filosofia\r\n\r\n    Porqu\u00ea usamos uma fun\u00e7\u00e3o auxiliar ``get_object_or_404()`` ao inv\u00e9s de automaticamente\r\n    capturar as exce\u00e7\u00f5es ``DoesNotExist`` em alto-n\u00edvel, ou fazer a API de modelo levantar\r\n    ``Http404`` ao inv\u00e9s de ``DoesNotExist``?\r\n\r\n    Porque isso seria acoplar a camada de modelo com a camada de vis\u00e3o. Um das principais metas de\r\n    design do Django \u00e9 evitar acoplamento.\r\n\r\nH\u00e1 tamb\u00e9m a fun\u00e7\u00e3o ``get_list_or_404()``, que trabalhada da mesma forma que get_object_or_404() -\r\ncom a diferen\u00e7a de que ela usa ``filter()`` ao inv\u00e9s de ``get()``. Ela levanta ``Http404`` se a\r\nlista estiver vazia.\r\n\r\nEscreva uma view do c\u00f3digo 404 (p\u00e1gina n\u00e3o encontrada)\r\n======================================================\r\n\r\nQuando voc\u00ea levanta ``Http404`` de dentro de uma *view*, o Django carregar\u00e1 uma *view* especial\r\nespec\u00edfica para manipula\u00e7\u00e3o de erros 404. Ela \u00e9 encontrada atrav\u00e9s da vari\u00e1vel ``handler404``,\r\nque \u00e9 uma string em Python com o caminho da *view* separado por pontos - o mesmo formato usado\r\npara informar a fun\u00e7\u00e3o de chamada das URLconf. Uma view 404 por s\u00ed s\u00f3 n\u00e3o tem nada de especial:\r\n\u00e9 apenas uma view normal.\r\n\r\nVoc\u00ea normalmente n\u00e3o ter\u00e1 de se incomodar em escrever views de 404. Por padr\u00e3o, as URLconfs\r\nt\u00eam a seguinte linha no come\u00e7o do arquivo::\r\n\r\n    from django.conf.urls.defaults import *\r\n\r\nQue tem o cuidado de definir ``handler404`` no m\u00f3dulo corrente. Como voc\u00ea pode ver em\r\n``django/conf/urls/defaults.py``, ``handler404`` \u00e9 definido para\r\n``'django.views.defaults.page_not_found'`` por padr\u00e3o.\r\n\r\nMais tr\u00eas coisas a se notar sobre *views* 404:\r\n\r\n    * A view 404 tamb\u00e9m \u00e9 chamada se o Django n\u00e3o conseguir casar\r\n      todas as express\u00f5es regulares da URLconf;\r\n\r\n    * Se voc\u00ea n\u00e3o definir sua pr\u00f3pria *view* 404 e simplismente usar a\r\n      padr\u00e3o, que \u00e9 recomendadavel - voc\u00ea ter\u00e1 uma obriga\u00e7\u00e3o: criar um\r\n      template ``404.html`` na raiz de seu diret\u00f3rio de templates. A\r\n      view padr\u00e3o de 404 ir\u00e1 usar este template para todos os erros\r\n      404;\r\n\r\n    * Se DEBUG estiver definida como ``True`` (em seu m\u00f3dulo\r\n      *settings*) ent\u00e3o sua view 404 nunca ser\u00e1 usada e a p\u00e1gina de\r\n      depura\u00e7\u00e3o ser\u00e1 exibida em seu lugar.\r\n\r\nEscreva uma view do c\u00f3digo 500 (erro no servidor)\r\n=================================================\r\n\r\nSimilarmente, URLconfs pode definir uma ``handler500``, que aponta para uma view a ser chamada\r\nem caso de erro no servidor. Erros de servidor acontecem quando voc\u00ea tem erros de tempo de\r\nexecu\u00e7\u00e3o c\u00f3digo da *view*.\r\n\r\nUse o sistema de templates\r\n==========================\r\n\r\nDe volta para view ``detail()``, para nossa aplica\u00e7\u00e3o de enquentes. Dada a vari\u00e1vel de contexto\r\n``poll``, aqui est\u00e1 como ``polls/detail.htm`` deve ser::\r\n\r\n    <h1>{{ poll.question }}</h1>\r\n    <ul>\r\n    {% for choice in poll.choice_set.all %}\r\n        <li>{{ choice.choice }}</li>\r\n    {% endfor %}\r\n    </ul>\r\n\r\nO sistema de templates usa uma sintaxe separada por pontos para acessar os atributos da vari\u00e1vel.\r\nNo exemplo de ``{{ poll.question }}``, primeiro o Django procura por uma chave de dicion\u00e1rio no objeto``poll``.\r\nSe n\u00e3o encontrar, ele tenta procurar por atributo com esse nome - que funciona neste caso.\r\nSe a localiza\u00e7\u00e3o do atributo tamb\u00e9m falhar, ele ir\u00e1 tentar chamar o m\u00e9todo ``question()`` no objeto ``poll``.\r\n\r\nA chamada do m\u00e9todo acontece no la\u00e7o ``{% for %}``: ``poll.choice_set.all`` \u00e9 interpretado em\r\nPython como ``poll.choice_set.all()``, que retorna objetos ``Choice`` iteraveis que s\u00e3o suportado\r\npara ser usado na tag ``{% for %}``.\r\n\r\nVeja o `guia de templates` para maiores detalhes de como os templates fucionam.\r\n\r\n.. _guia de templates: http://www.djangoproject.com/documentation/templates/\r\n\r\nSimplificando as URLconfs\r\n=========================\r\n\r\nVamos tomar um tempo para brincar com as *views* e o sistema de templates. Se voc\u00ea editar a URLconf,\r\nvoc\u00ea poder\u00e1 notar uma leve redund\u00e2ncia nisto::\r\n\r\n    urlpatterns = patterns('',\r\n        (r'^polls/$', 'mysite.polls.views.index'),\r\n        (r'^polls/(?P<poll_id>\\d+)/$', 'mysite.polls.views.detail'),\r\n        (r'^polls/(?P<poll_id>\\d+)/results/$', 'mysite.polls.views.results'),\r\n        (r'^polls/(?P<poll_id>\\d+)/vote/$', 'mysite.polls.views.vote'),\r\n    )\r\n\r\nIsto \u00e9, ``mysite.polls.views`` est\u00e1 em todas as chamadas.\r\n\r\nComo este \u00e9 um caso comum, o framework de URLconf prov\u00ea um atalho para prefixos comuns. Voc\u00ea pode\r\nfator\u00e1r os prefixos comuns e adicion\u00e1-los no primeiro argumento de ``patterns()``, como abaixo::\r\n\r\n    urlpatterns = patterns('mysite.polls.views',\r\n        (r'^polls/$', 'index'),\r\n        (r'^polls/(?P<poll_id>\\d+)/$', 'detail'),\r\n        (r'^polls/(?P<poll_id>\\d+)/results/$', 'results'),\r\n        (r'^polls/(?P<poll_id>\\d+)/vote/$', 'vote'),\r\n    )\r\n\r\nAssim ir\u00e1 funcionar de forma ind\u00eantica \u00e0 formata\u00e7\u00e3o anterior. Com uma pequena melhoria.\r\n\r\nDesacoplando as URLconfs\r\n========================\r\n\r\nJ\u00e1 que n\u00f3s estamos aqui, n\u00f3s vamos tomar um tempo para desacoplar as URLs da aplica\u00e7\u00e3o ``poll`` da\r\nconfigura\u00e7\u00e3o de nosso projeto em Django. As aplica\u00e7\u00f5es no Django devem ser escritas para serem\r\nplug\u00e1veis - que \u00e9, cada aplica\u00e7\u00e3o em particular deveria ser transfer\u00edvel para qualquer outra\r\ninstala\u00e7\u00e3o em Django com o m\u00ednimo de esfor\u00e7o.\r\n\r\nNossa aplica\u00e7\u00e3o ``poll`` \u00e9 agradavelmente desacoplada neste ponto, gra\u00e7as \u00e0 estrita estrutura de\r\ndiret\u00f3rios que o comando ``python manage.py startapp`` criou, mas uma parte dela est\u00e1 acoplada \u00e0s\r\n*settings* em Django: a URLconf.\r\n\r\nN\u00f3s editamos as URLs em ``mysite/urls.py``, mas o modelo das URLs desta aplica\u00e7\u00e3o s\u00e3o espec\u00edficas\r\npara ela, n\u00e3o para a instala\u00e7\u00e3o do Django - vamos ent\u00e3o mover as URLs para dentro do diret\u00f3rio da\r\naplica\u00e7\u00e3o.\r\n\r\nCopie o arquivo ``mysite/urls.py`` to ``mysite/polls/urls.py``. Ent\u00e3o, altere o ``mysite/urls.py``\r\nremovendo as URLs espec\u00edficas da aplica\u00e7\u00e3o ``poll`` e insira um ``include()``::\r\n\r\n    (r'^polls/', include('mysite.polls.urls')),\r\n\r\nO ``include()`` simplismente referencia outra URLconf. Observe que a express\u00e3o regular n\u00e3o tem um\r\n``$`` (caracter que casa o fim da string) mas possui uma barra. Em algum momento o Django encontra\r\nO ``include()``, e pega qualquer URL que tiver uma parte casada e aponta e envia a string restante\r\npara a URLconf inclu\u00edda para o processamento posterior.\r\n\r\nVeja o que acontece se um usu\u00e1rio vai para ``\"/polls/34/\"`` neste sistema:\r\n\r\n    * O Django ir\u00e1 tentar casar ``'^polls/'``;\r\n\r\n    * Ele ir\u00e1 cortar o texto casado (``\"polls/\"``) e enviar o \r\n      restante - ``\"34/\"`` - para a URLconf 'mysite.polls.urls' para\r\n      processamento posterior.\r\n\r\nAgora que n\u00f3s desacoplamos isto, n\u00f3s precisamos desacoplar a URLconf 'mysite.polls.urls'\r\nremovendo o trecho ``\"polls/\"`` de cada linha::\r\n\r\n    urlpatterns = patterns('mysite.polls.views',\r\n        (r'^$', 'index'),\r\n        (r'^(?P<poll_id>\\d+)/$', 'detail'),\r\n        (r'^(?P<poll_id>\\d+)/results/$', 'results'),\r\n        (r'^(?P<poll_id>\\d+)/vote/$', 'vote'),\r\n    )\r\n\r\nA id\u00e9ia por tr\u00e1s de ``include()`` e o desacoplamento da URLconf \u00e9 criar facilmente URLs\r\n*plug-and-play*. Agora que as ``polls`` possuem sua pr\u00f3pria URLconf, elas podem ser mudadas abaixo\r\nde ``\"/polls/\"``, ou abaixo de ``\"/fun_polls/\"``, ou abaixo de ``\"/content_polls/\"``, ou qualquer\r\noutra raiz de URL, que a aplica\u00e7\u00e3o ir\u00e1 funcionar.\r\n\r\nToda a aplica\u00e7\u00e3o ``poll`` est\u00e1 sobre URLs relativas, e n\u00e3o sobre URLs absolutas.\r\n\r\nQuando voc\u00ea estiver confort\u00e1vel em escrever *views*, l\u00eaia a `parte 4 deste tutorial` para aprender\r\nsobre processamento de formul\u00e1rios simples e sobre as *generic vies* (views gen\u00e9ricas).\r\n\r\n.. _parte 4 deste tutorial: tutorial/\r\n", "enable_comments": 0}}, {"pk": 9, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Escrevendo sua primeira aplica\u00e7\u00e3o Django, parte 4", "url": "/documentacao/tutorial04/", "template_name": "flatpages/docs.html", "sites": [1], "content": "..\r\n.. META INFORMATION OF TRANSLATION\r\n..\r\n..   $TranslationStatus: Done $\r\n..   $OriginalRevision: 7521 $\r\n..   $TraductionAuthors: Wiliam Alves de Souza $\r\n..\r\n.. INFO OF THIS FILE (DO NOT EDIT! UPDATED BY SUBVERSION)\r\n..\r\n..   $HeadURL: https://django-l10n-portuguese.googlecode.com/svn/trunk/docs/tutorial04_pt-br.txt $\r\n..   $LastChangedRevision: 17 $\r\n..   $LastChangedBy: semente $\r\n..   $LastChangedDate: 2008-06-12 14:33:56 -0300 (Thu, 12 Jun 2008) $\r\n..\r\n\r\n=================================================\r\nEscrevendo sua primeira aplica\u00e7\u00e3o Django, parte 4\r\n=================================================\r\n\r\nEste tutorial inicia-se onde o `Tutorial 3`_ terminou. Estamos continuando a aplica\u00e7\u00e3o\r\nWeb-Enquete que vai focar em uma forma simples de transforma\u00e7\u00e3o e de redu\u00e7\u00e3o de nosso c\u00f3digo.\r\n\r\nEscrever um formul\u00e1rio simples\r\n==============================\r\n\r\nVamos atualizar o template de detalhe (\"polls/detail.html\") do \u00faltimo tutorial,\r\npara que ele contenha um elemento HTML <Form>::\r\n\r\n    <h1>{{ poll.question }}</h1>\r\n\r\n    {% if error_message %}<p><strong>{{ error_message }}</strong></p>{% endif %}\r\n\r\n    <form action=\"/polls/{{ poll.id }}/vote/\" method=\"post\">\r\n    {% for choice in poll.choice_set.all %}\r\n        <input type=\"radio\" name=\"choice\" id=\"choice{{ forloop.counter }}\" value=\"{{ choice.id }}\" />\r\n        <label for=\"choice{{ forloop.counter }}\">{{ choice.choice }}</label><br />\r\n    {% endfor %}\r\n    <input type=\"submit\" value=\"Vote\" />\r\n    </form>\r\n\r\nUma r\u00e1pida explica\u00e7\u00e3o:\r\n\r\n    * O template acima mostra um bot\u00e3o radio para cada op\u00e7\u00e3o da enquete.\r\n      O valor (``value``) de cada bot\u00e3o radio est\u00e1 associado ao ID da op\u00e7\u00e3o.\r\n      O nome (``name``) de cada bot\u00e3o radio \u00e9 a escolha (``choice``).\r\n      Isso significa que, quando algu\u00e9m escolhe um dos bot\u00f5es de radio\r\n      e submete a formul\u00e1rio, ele vai enviar choice=3 por POST. Este s\u00e3o os\r\n      formul\u00e1rios HTML 101.\r\n\r\n    * N\u00f3s definimos o parametro ``action`` do formul\u00e1rio para /polls/{{ poll.id }}/vote/,\r\n      e ``method`` para ``post``. Usar m\u00e9todo ``post`` (em vez do m\u00e9todo ``get``)\r\n      \u00e9 muito importante, porque o ato de enviar este formul\u00e1rio ir\u00e1 alterar dados\r\n      do lado servidor. Sempre que criar um formul\u00e1rio que modifiquem os dados do\r\n      lado do servidor, utilize ``method=\"post\"``. Esta dica n\u00e3o \u00e9 espec\u00edfica do\r\n      Django; mais sim uma boa pr\u00e1tica para desenvolvimento \u00e9 Web.\r\n\r\n    * ``forloop.counter`` indica quantas vezes a tag``for`` atravessou o seu ciclo.\r\n      Para mais informa\u00e7\u00f5es, consulte a documenta\u00e7\u00e3o da tag \"for\". \r\n\r\nAgora, vamos criar uma ``view`` que se manipula os dados enviados e faz algo com eles.\r\nLembre-se, no `Tutorial 3`_, cri\u00e1mos uma URLconf para a aplica\u00e7\u00e3o de enquete que inclui esta linha::\r\n\r\n    (r'^(?P<poll_id>\\d+)/vote/$', 'mysite.polls.views.vote'),\r\n\r\nPortanto, vamos criar uma fun\u00e7\u00e3o ``vote()``, em ``mysite/polls/views.py``::\r\n\r\n    from django.shortcuts import get_object_or_404, render_to_response\r\n    from django.http import HttpResponseRedirect\r\n    from django.core.urlresolvers import reverse\r\n    from mysite.polls.models import Choice, Poll\r\n    # ...\r\n    def vote(request, poll_id):\r\n        p = get_object_or_404(Poll, pk=poll_id)\r\n        try:\r\n            selected_choice = p.choice_set.get(pk=request.POST['choice'])\r\n        except (KeyError, Choice.DoesNotExist):\r\n            # Redisplay the poll voting form.\r\n            return render_to_response('polls/detail.html', {\r\n                'poll': p,\r\n                'error_message': \"You didn't select a choice.\",\r\n            })\r\n        else:\r\n            selected_choice.votes += 1\r\n            selected_choice.save()\r\n            # Always return an HttpResponseRedirect after successfully dealing\r\n            # with POST data. This prevents data from being posted twice if a\r\n            # user hits the Back button.\r\n            return HttpResponseRedirect(reverse('mysite.polls.views.results', args=(p.id,)))\r\n\r\nEste c\u00f3digo inclui algumas coisas que ainda n\u00e3o foram abrangidos, neste tutorial:\r\n\r\n    * ``request.POST`` \u00e9 um objeto como dicion\u00e1rios que lhe permite acessar os\r\n      dados submetidos pelas suas chaves. Neste caso, ``request.POST['choice']``\r\n      retorna o ID da op\u00e7\u00e3o selecionada, tal como uma string. Os valores de\r\n      ``request.POST`` s\u00e3o sempre strings.\r\n\r\n      Note que Django tamb\u00e9m prove ``request.GET`` para acesar dados GET da\r\n      mesma forma -- mas n\u00f3s estamos usando ``request.POST`` explicitamente no\r\n      nosso c\u00f3digo, a fim de garantir que os dados s\u00f3 podem ser alterados por\r\n      meio de uma chamada POST.\r\n\r\n    * ``request.POST['choice']`` ir\u00e1 levantar a exce\u00e7\u00e3o ``KeyError`` caso uma\r\n      op\u00e7\u00e3o (``choice``) n\u00e3o seja fornecida via POST. O c\u00f3digo acima checa por \r\n      ``KeyError`` e mostra o formul\u00e1rio da enquete com as mensagens de erro se\r\n      uma op\u00e7\u00e3o ``choice`` n\u00e3o \u00e9 dado fornecida.\r\n \r\n    * Ap\u00f3s incrementar uma op\u00e7\u00e3o, o c\u00f3digo retorna um ``HttpResponseRedirect``\r\n      em vez de um ``HttpResponse``. ``HttpResponseRedirect`` recebe um \u00fanico\r\n      argumento: a URL para o qual o usu\u00e1rio ser\u00e1 redirecionado (ver o ponto\r\n      seguinte para saber como construir a URL, neste caso).\r\n\r\n      Como o coment\u00e1rio acima salienta, voc\u00ea deve sempre retornar uma\r\n      ``HttpResponseRedirect`` depois de lidar com sucesso com dados POST.\r\n      Esta dica n\u00e3o \u00e9 espec\u00edfica do Django; mais sim uma boa pr\u00e1tica para\r\n      desenvolvimento \u00e9 Web.\r\n\r\n    * Estamos usando a fun\u00e7\u00e3o ``reverse()`` no contru\u00e7\u00e3o do ``HttpResponseRedirect``\r\n      neste exemplo. Essa fun\u00e7\u00e3o ajuda a evitar ter que escrever na m\u00e3o a URL na\r\n      fun\u00e7\u00e3o da view. \u00c9 dado o nome da view de que queremos passar o controle e\r\n      uma por\u00e7\u00e3o da vari\u00e1vel do padr\u00e3o de URL que aponta para essa view. Neste\r\n      caso, usando o URLConf criado no Tutorial 3, esta chamada a ``reverse()``\r\n      ir\u00e1 retornar uma string como::\r\n\r\n        '/polls/3/results/'\r\n\r\n      ... Onde o ``3`` \u00e9 o valor de ``p.id``. Esta URL redirecionada ent\u00e3o chama\r\n      ``'results'`` afim de exibir a p\u00e1gina final. Note que voc\u00ea precisar\u00e1 usar \r\n      o nome completo da ``view`` aqui (incluindo o prefixo).\r\n\r\n      Para obter mais informa\u00e7\u00f5es sobre ``reverse()``, veja a documenta\u00e7\u00e3o do\r\n      `URL dispatcher`_. \r\n\r\nTal como mencionado no Tutorial 3, ``request`` \u00e9 um objeto ``HTTPRequest``.\r\nPara mais informa\u00e7\u00f5es sobre o objeto ``HTTPRequest``,\r\nconsulte `request and response documentation`_.\r\n\r\nDepois que algu\u00e9m votar em uma enquete, a ``vote()`` ``view`` redireciona para a\r\np\u00e1gina de resultados da enquete. Vamos escrever essa ``view``::\r\n\r\n    def results(request, poll_id):\r\n        p = get_object_or_404(Poll, pk=poll_id)\r\n        return render_to_response('polls/results.html', {'poll': p})\r\n\r\nIsto \u00e9 quase exatamente o mesmo que a ``view`` ``detail()`` do `Tutorial 3`_..\r\nA \u00fanica diferen\u00e7a \u00e9 o nome do template. Iremos corrigir esta redund\u00e2ncia depois.\r\n\r\nAgora, crie um template ``results.html``::\r\n\r\n    <h1>{{ poll.question }}</h1>\r\n\r\n    <ul>\r\n    {% for choice in poll.choice_set.all %}\r\n        <li>{{ choice.choice }} -- {{ choice.votes }} vote{{ choice.votes|pluralize }}</li>\r\n    {% endfor %}\r\n    </ul>\r\n\r\nAgora, v\u00e1 para ``/polls/1/`` no seu navegador e vote em uma enquete. Voc\u00ea dever\u00e1\r\nver uma p\u00e1gina de resultados que ser\u00e1 atualizado cada vez que voc\u00ea votar. Se voc\u00ea\r\nenviar o formul\u00e1rio sem ter escolhido uma op\u00e7\u00e3o, voc\u00ea dever\u00e1 ver a mensagem de erro.\r\n\r\n.. _request and response documentation: ../request_response/\r\n.. _URL dispatcher: ../url_dispatch#reverse\r\n\r\nUse views gen\u00e9ricas: Menos c\u00f3digo \u00e9 melhor\r\n==========================================\r\n\r\nA ``view``, ``detail()`` (do `Tutorial 3`_) e ``results()``\r\ns\u00e3o estupidamente simples -- e, como j\u00e1 mencionado, s\u00e3o redundante.\r\nA ``view``, ``index()`` (tamb\u00e9m do Tutorial 3), que exibe uma lista\r\nde enquetes, \u00e9 semelhante.\r\n\r\nEstas ``views`` representam um caso basico comum de Desenvolvimento Web:\r\nobtendo dados do banco de dados de acordo com um par\u00e2metro passado na URL,\r\ncarregando um template e devolvenfo um template renderizado. Porque isto \u00e9\r\nt\u00e3o comum, Django fornece um atalho, chamado  sistema de ?views gen\u00e9ricas?.\r\n\r\n``Views`` genericas abstraem padr\u00f5es comuns para um ponto onde voc\u00ea nem precisa\r\nde escrever c\u00f3digo Python para escrever um aplica\u00e7\u00e3o.\r\n\r\nVamos converter a nossa aplica\u00e7\u00e3o de enquete para utilizar o sistema de ``views`` gen\u00e9ricas,\r\npor isso podemos excluir um monte de nosso pr\u00f3prio c\u00f3digo. Iremos apenas ter que executar\r\nalguns passos para fazer a convers\u00e3o.\r\n\r\n.. admonition:: Por que o c\u00f3digo se arrastou?\r\n\r\n   Geralmente, quando escrever uma aplica\u00e7\u00e3o Django, voc\u00ea vai avaliar\r\n   se views gen\u00e9ricas s\u00e3o uma escolha adequada para o seu problema e\r\n   voc\u00ea ir\u00e1 utiliz\u00e1-los desde o in\u00edcio em vez de refatorar seu c\u00f3digo\r\n   meio do caminho. Mas este tutorial intencionalmente tem focado em\r\n   escrever ``views`` gen\u00e9ricas \"do jeito mais dificil\" at\u00e9\r\n   agora, para se concentrar nos conceitos fundamentais.\r\n\r\n   Voc\u00ea deve saber matem\u00e1tica b\u00e1sica antes de voc\u00ea come\u00e7ar a usar uma\r\n   calculadora.\r\n\r\nEm primeiro lugar, abra polls/urls.py URLconf. Ele se parece assim, de acordo com\r\no tutorial at\u00e9 o momento::\r\n\r\n    from django.conf.urls.defaults import *\r\n\r\n    urlpatterns = patterns('mysite.polls.views',\r\n        (r'^$', 'index'),\r\n        (r'^(?P<poll_id>\\d+)/$', 'detail'),\r\n        (r'^(?P<poll_id>\\d+)/results/$', 'results'),\r\n        (r'^(?P<poll_id>\\d+)/vote/$', 'vote'),\r\n    )\r\n\r\nAltere para ficar assim::\r\n\r\n    from django.conf.urls.defaults import *\r\n    from mysite.polls.models import Poll\r\n\r\n    info_dict = {\r\n        'queryset': Poll.objects.all(),\r\n    }\r\n\r\n    urlpatterns = patterns('',\r\n        (r'^$', 'django.views.generic.list_detail.object_list', info_dict),\r\n        (r'^(?P<object_id>\\d+)/$', 'django.views.generic.list_detail.object_detail', info_dict),\r\n        url(r'^(?P<object_id>\\d+)/results/$', 'django.views.generic.list_detail.object_detail', dict(info_dict, template_name='polls/results.html'), 'poll_results'),\r\n        (r'^(?P<poll_id>\\d+)/vote/$', 'mysite.polls.views.vote'),\r\n    )\r\n\r\nN\u00f3s estamos usando duas ``views`` gen\u00e9ricas aqui: ``object_list`` e ``object_detail``.\r\n\r\nRespectivamente, essas duas ``views`` abstraem o conceito de ?exibir uma lista de objetos?\r\ne ?exibir uma p\u00e1gina de detalhe para um tipo particular de objeto.?\r\n\r\n    * Cada ``view`` gen\u00e9rica precisa saber que tipo de dado ela vai agir em cima.\r\n      Esses dados s\u00e3o fornecidos em um dicion\u00e1rio. A chave ``queryset`` neste\r\n      dicion\u00e1rio aponta para a lista de objetos a serem manipulados pela ``view`` gen\u00e9rica.\r\n\r\n    * A ``view`` gen\u00e9rica ``object_detail`` espera o valor ID capturado da URL chamado de \"object_id\",\r\n      de modo que alteramos ``poll_id`` para ``object_id`` para ``view`` gen\u00e9rica.\r\n\r\n    * N\u00f3s adicionamos o nome, ``poll_results``, para os resultados da ``view`` assim n\u00f3s temos uma\r\n      maneira de se referir \u00e0 sua URL depois (veja a documenta\u00e7\u00e3o sobre `naming URL patterns`_ para maiores informa\u00e7\u00e3o).\r\n      Tamb\u00e9m estamos usando a fun\u00e7\u00e3o `url()`_ de ``django.conf.urls.defaults`` aqui.\r\n      \u00c9 um bom h\u00e1bito de usar ``url()`` quando voc\u00ea estiver fornecendo um padr\u00e3o de nome como este. \r\n\r\n.. _naming URL patterns: ../url_dispatch/#naming-url-patterns\r\n.. _url(): ../url_dispatch/#url\r\n\r\nPor padr\u00e3o, a ``view`` gen\u00e9rica ``object_detail`` utiliza um template chamado ``<app name>/<model name>_detail.html``.\r\nNo nosso caso, ela vai utilizar o template ``\"polls/poll_detail.html\"``.\r\nAssim, renomeie o seu template ``polls/detail.html`` para ``polls/poll_detail.html`` e\r\ne altere ``render_to_response()`` na linha ``vote()``.\r\n\r\nDo mesmo modo, a ``view`` gen\u00e9rica utiliza um template chamado ``<app name>/<model name>_list.html``.\r\nAssim, renomeie ``polls/index.html`` para ``polls/poll_list.html``.\r\n\r\nPorque n\u00f3s temos mais de uma entrada no URLconf que usa ``object_detail`` para a aplica\u00e7\u00e3o de enquete,\r\nn\u00f3s especificamos manualmente um nome para o template de resultados: ``template_name='polls/results.html'``.\r\nCaso contr\u00e1rio, as duas ``views`` utilizariam o mesmo template.\r\nNote que n\u00f3s usamos ``dict()`` para retornar um dicion\u00e1rio alterado no lugar.\r\n\r\n.. Note:: ``all()`` \u00e9 ``lazy``\r\n\r\n    Poder\u00e1 parecer um pouco assustador ver ``Poll.objects.all()`` ser utilizado na ``view`` de detalhe\r\n    que necessita apenas de um objeto ``Poll`` mas n\u00e3o se preocupe; ``Poll.objects.all()`` \u00e9 na verdade um\r\n    objeto especial chamado de ``QuerySet``, que \u00e9 \"lazy\" e n\u00e3o toca no seu banco de dados a menos que seja\r\n    absolutamente nescesario.At\u00e9 o momento consulta ao banco de dados acontecer, a ``view`` gen\u00e9rica\r\n    ``object_detail`` ter\u00e1 limitado o seu escopo para um \u00fanico objeto, de modo que a eventual consulta\r\n    s\u00f3 ir\u00e1 selecionar uma linha de base de dados.\r\n\r\n    Se voc\u00ea quiser saber mais sobre seu funcionamento, A documenta\u00e7\u00e3o de banco de dados do\r\n    Django `explica a natureza lazy dos abjetos QuerySet`_.\r\n\r\n.. _explica a natureza lazy dos abjetos QuerySet: ../db-api/#querysets-are-lazy\r\n\r\nNas partes anteriores deste tutorial, os templates tem sido fornecidos com um\r\n``context`` que cont\u00e9m as vari\u00e1veis de contexto `poll`` e ``latest_poll_list``.\r\nNo entanto, as ``views`` fornecem as vari\u00e1veis ``object`` e ``object_list`` como contexto.\r\nPortanto, voc\u00ea precisa mudar seus templates para combinar com as novas vari\u00e1veis de contexto.\r\nV\u00e1 atrav\u00e9s de seus templates, e alterar qualquer refer\u00eancia a ``latest_poll_list`` para ``object_list``\r\ne alterar qualquer refer\u00eancia de ``poll`` para ``object``.\r\n\r\nAgora voc\u00ea pode apagar as ``views``, ``index()``, ``detail()`` and  ``results()``\r\ndo arquivo ``polls/views.py``.  N\u00e3o precisamos delas mais - eles foram \r\nsubstitu\u00eddos por ``views`` gen\u00e9ricas.\r\n\r\nA ``view`` ``vote()`` ainda \u00e9 necess\u00e1ria.\r\nNo entanto, ela deve ser modificado para corresponder ao novo contexto de vari\u00e1veis.\r\nNa chamada ``render_to_response()``, mude o nome vari\u00e1vel de contexto de ``poll`` para ``object``.\r\n\r\nA \u00faltima coisa a fazer \u00e9 corrigir o manioulador da URL para levar em conta\r\na utiliza\u00e7\u00e3o de ``views`` gen\u00e9ricas. Na ``view`` ``vote()`` anterior, usamos a\r\nfun\u00e7\u00e3o ``reverse()`` para evitar escrever na m\u00e3o nossa URLs. Agora que mudamos\r\npara ``view`` gen\u00e9rica, n\u00f3s vamos precisar alterar a chamada ``reverse()`` para\r\napontar de volta para a nossa nova ``view`` gen\u00e9rica. N\u00f3s n\u00e3o podemos simplesmente\r\nutilizar a fun\u00e7\u00e3o ``view`` mais - ``views`` gen\u00e9ricas podem ser (e s\u00e3o) utilizada\r\nv\u00e1rias vezes - mas podemos usar o nome que foi dado::\r\n\r\n    return HttpResponseRedirect(reverse('poll_results', args=(p.id,)))\r\n\r\nExecute o servidor e use o sua nova aplica\u00e7\u00e3o de enquete baseada ``views`` gen\u00e9ricas.\r\n\r\nPara maiores detalhes sobre ``views`` gen\u00e9ricass, consulte a `generic views documentation`_.\r\n\r\n.. _generic views documentation: ../generic_views/\r\n\r\n\r\nEm breve\r\n========\r\n\r\nO tutorial acaba aqui por enquanto. Mas v\u00e1 logo para as pr\u00f3ximas partes:\r\n\r\n    * Processamento avancado de formul\u00e1rio\r\n    * Usando o ``framework`` de RSS\r\n    * Usando o ``framework`` de cache\r\n    * Usando o ``framework`` de coment\u00e1rios\r\n    * Caracter\u00edsticas avan\u00e7\u00e3das da interface de administra\u00e7\u00e3o: Permiss\u00f5es\r\n    * Caracter\u00edsticas avan\u00e7\u00e3das da interface de administra\u00e7\u00e3o: Customiza\u00e7\u00e3o de JavaScript \r\n\r\nEntretanto, voc\u00ea pode ler o restante da documenta\u00e7\u00e3o Django e come\u00e7ar a escrever suas pr\u00f3prias aplica\u00e7\u00f5es.\r\n\r\n.. _Tutorial 3: ../tutorial03/\r\n.. _Django documentation: http://www.djangoproject.com/documentation/\r\n", "enable_comments": 0}}, {"pk": 4, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Uma Olhada no Django", "url": "/documentacao/visaogeral/", "template_name": "flatpages/docs.html", "sites": [1], "content": "..\r\n.. META INFORMATION OF TRADUCTION\r\n..\r\n..   $TranslationStatus: Done, waiting revision.$\r\n..   $OriginalRevision: 7521$\r\n..   $TraductionAuthors: Marcelo Minholi$\r\n..\r\n.. INFO OF THIS FILE (DO NOT EDIT! UPDATED BY SUBVERSION)\r\n..\r\n..   $HeadURL: https://django-l10n-portuguese.googlecode.com/svn/trunk/docs/overview_pt-br.txt $\r\n..   $LastChangedRevision: 14 $\r\n..   $LastChangedBy: semente $\r\n..   $LastChangedDate: 2008-06-12 12:04:39 -0300 (Thu, 12 Jun 2008) $\r\n..\r\n\r\n====================\r\nUma Olhada no Django\r\n====================\r\n\r\nComo o Django foi desenvolvido no ambiente movimentado de uma reda\u00e7\u00e3o, ele foi\r\ndesenhado para tornar as tarefas comuns do desenvolvimento Web r\u00e1pidas e f\u00e1ceis.\r\nAqui est\u00e1 uma vis\u00e3o informal sobre como escrever uma aplica\u00e7\u00e3o Web dirigida a \r\nbanco de dados com Django.\r\n\r\nO objetivo desse documento \u00e9 dar a voc\u00ea as especifica\u00e7\u00f5es t\u00e9cnicas necess\u00e1rias\r\npara entender como o Django funciona, mas esse texto n\u00e3o pretende ser um tutorial \r\nou uma refer\u00eancia. Por favor veja nossa documenta\u00e7\u00e3o_ mais detalhada do Django\r\nquando voc\u00ea estiver pronto para come\u00e7ar um projeto.\r\n\r\n.. _documenta\u00e7\u00e3o: ../\r\n\r\nDesenhe seu modelo\r\n==================\r\n\r\nEmbora voc\u00ea possa usar o Django sem um banco de dados, ele vem com um mapeador\r\nobjeto-relacional no qual voc\u00ea descreve o layout da sua base de dados em c\u00f3digo\r\nPython.\r\n\r\nA sintaxe do modelo de dados oferece maneiras muito ricas de representar seus\r\nmodelos -- portanto, ele estar\u00e1 resolvendo cerca de dois anos de problemas de\r\nesquemas de base de dados. Aqui est\u00e1 um exemplo r\u00e1pido::\r\n\r\n    class Reporter(models.Model):\r\n        full_name = models.CharField(max_length=70)\r\n\r\n        def __unicode__(self):\r\n            return self.full_name\r\n\r\n    class Article(models.Model):\r\n        pub_date = models.DateTimeField()\r\n        headline = models.CharField(max_length=200)\r\n        article = models.TextField()\r\n        reporter = models.ForeignKey(Reporter)\r\n\r\n        def __unicode__(self):\r\n            return self.headline\r\n\r\nInstale-o\r\n=========\r\n\r\nEm seguida, rode o utilit\u00e1rio de linha de comando do Django para criar as tabelas \r\nda base de dados autom\u00e1ticamente::\r\n\r\n    manage.py syncdb\r\n\r\nO comando ``syncdb`` olha para todos os seus modelos dispon\u00edveis e cria as tabelas \r\nna sua base de dados caso as tabelas ainda n\u00e3o existam.\r\n\r\nAproveite a API gr\u00e1tis\r\n======================\r\n\r\nCom ela voc\u00ea ir\u00e1 ter uma API Python gr\u00e1tis e rica para acessar seus dados. A API \u00e9 \r\ncriada em tempo de execu\u00e7\u00e3o, nenhuma gera\u00e7\u00e3o de c\u00f3digo \u00e9 necess\u00e1ria::\r\n\r\n    >>> from mysite.models import Reporter, Article\r\n\r\n    # Nenhum reporter no sistema ainda.\r\n    >>> Reporter.objects.all()\r\n    []\r\n\r\n    # Crie um novo Reporter.\r\n    >>> r = Reporter(full_name='John Smith')\r\n\r\n    # Salve o objeto na base de dados. Voc\u00ea ter\u00e1 que chamar o save()\r\n    # explicitamente.\r\n    >>> r.save()\r\n\r\n    # Agora ele tem uma ID.\r\n    >>> r.id\r\n    1\r\n\r\n    # Agora o novo reporter est\u00e1 na base de dados.\r\n    >>> Reporter.objects.all()\r\n    [John Smith]\r\n\r\n    # Campos s\u00e3o representados como atributos de objetos Python.\r\n    >>> r.full_name\r\n    'John Smith'\r\n\r\n    # O Django fornece uma rica API de pesquisa \u00e0 base de dados.\r\n    >>> Reporter.objects.get(id=1)\r\n    John Smith\r\n    >>> Reporter.objects.get(full_name__startswith='John')\r\n    John Smith\r\n    >>> Reporter.objects.get(full_name__contains='mith')\r\n    John Smith\r\n    >>> Reporter.objects.get(id=2)\r\n    Traceback (most recent call last):\r\n        ...\r\n    DoesNotExist: Reporter does not exist for {'id__exact': 2}\r\n\r\n    # Crie um artigo.\r\n    >>> from datetime import datetime\r\n    >>> a = Article(pub_date=datetime.now(), headline='Django is cool',\r\n    ...     article='Yeah.', reporter=r)\r\n    >>> a.save()\r\n\r\n    # Agora o artigo est\u00e1 na base de dados.\r\n    >>> Article.objects.all()\r\n    [Django is cool]\r\n\r\n    # Objetos Article tem acesso via API a objetos Reporter relacionados.\r\n    >>> r = a.reporter\r\n    >>> r.full_name\r\n    'John Smith'\r\n\r\n    # E vice-versa: Objetos Reporter tem acesso via API a objetos Article.\r\n    >>> r.article_set.all()\r\n    [Django is cool]\r\n\r\n    # A API segue relacionamentos da forma que voc\u00ea precisar, realizando JOINs\r\n    # eficientes para voc\u00ea por baixo dos panos.\r\n    # Isso encontra todos os artigos de um reporter cujo nome come\u00e7a com \"John\". \r\n    >>> Article.objects.filter(reporter__full_name__startswith=\"John\")\r\n    [Django is cool]\r\n\r\n    # Altere um objeto alterando seus atributos e chamando save().\r\n    >>> r.full_name = 'Billy Goat'\r\n    >>> r.save()\r\n\r\n    # Delete um objeto com delete().\r\n    >>> r.delete()\r\n\r\nUma interface de administra\u00e7\u00e3o din\u00e2mica: isso n\u00e3o \u00e9 apenas scaffolding -- \u00e9 a casa inteira\r\n==========================================================================================\r\n\r\nUma vez que seus modelos estejam definidos, o Django poder\u00e1 criar autom\u00e1ticamente \r\numa interface administrativa profissional e pronta para produ\u00e7\u00e3o -- um Web site \r\nque ir\u00e1 permitir aos usu\u00e1rios autenticados adicionar, alterar e deletar objetos. E \r\nisso t\u00e3o f\u00e1cil quanto adicionar uma linha de c\u00f3digo \u00e0s suas classes modelo::\r\n\r\n    class Article(models.Model):\r\n        pub_date = models.DateTimeField()\r\n        headline = models.CharField(max_length=200)\r\n        article = models.TextField()\r\n        reporter = models.ForeignKey(Reporter)\r\n        class Admin: pass\r\n\r\nA filosofia aqui \u00e9 que seu site \u00e9 editado por uma equipe, ou um cliente, ou talvez \r\napenas voc\u00ea -- e voc\u00ea n\u00e3o quer ter que lidar com cria\u00e7\u00e3o de interfaces de backend \r\napenas para gerenciar conte\u00fado.\r\n\r\nUm workflow t\u00edpico na cria\u00e7\u00e3o de aplica\u00e7\u00f5es Django \u00e9 criar os modelos e ter os \r\nsites administrativos rodando o mais r\u00e1pido poss\u00edvel, assim sua equipe (ou \r\nclientes) poder\u00e3o come\u00e7ar a a popular os dados. Ent\u00e3o, desenvolver a forma com que \r\nos dados ser\u00e3o apresentados para o p\u00fablico.\r\n\r\nDesenhe suas URLs\r\n=================\r\n\r\nUm esquema limpo e elegante de URLs \u00e9 um detalhe importante em uma aplica\u00e7\u00e3o Web \r\nde alta qualidade. O Django encoraja o design de bel\u00edssimas URLs e n\u00e3o coloca \r\nnenhuma sujeira nas URLs, como ``.php`` ou ``.asp``.\r\n\r\nPara desenhar URLs para uma aplica\u00e7\u00e3o, voc\u00ea cria um m\u00f3dulo Python chamado URLconf. \r\nUma tabela de conte\u00fados para sua aplica\u00e7\u00e3o, ele cont\u00e9m um mapeamento simples entre \r\npadr\u00f5es de URL e fun\u00e7\u00f5es Python de retorno. URLconfs tamb\u00e9m servem para abstrair \r\nas URLs do c\u00f3digo Python.\r\n\r\nAqui est\u00e1 como um URLconf deve se parecer para o exemplo ``Reporter``/``Article``\r\nacima::\r\n\r\n    from django.conf.urls.defaults import *\r\n\r\n    urlpatterns = patterns('',\r\n        (r'^articles/(\\d{4})/$', 'mysite.views.year_archive'),\r\n        (r'^articles/(\\d{4})/(\\d{2})/$', 'mysite.views.month_archive'),\r\n        (r'^articles/(\\d{4})/(\\d{2})/(\\d+)/$', 'mysite.views.article_detail'),\r\n    )\r\n\r\nO c\u00f3digo acima mapeia URLs, como simples express\u00f5es regulares, para a localiza\u00e7\u00e3o \r\ndas fun\u00e7\u00f5es Python de retorno (\"views\"). As express\u00f5es regulares usam parenteses \r\npara \"capturar\" valores das URLs. Quando um usu\u00e1rio requisita uma p\u00e1gina, o Django \r\npercorre cada padr\u00e3o, em ordem, e para no primeiro que combina com a URL \r\nrequisitada. (Se nenhum deles combinar o Django chama uma view de exce\u00e7\u00e3o 404.)\r\nIsso \u00e9 incr\u00edvelmente r\u00e1pido, porque as express\u00f5es regulares s\u00e3o compiladas em \r\ntempo de execu\u00e7\u00e3o.\r\n\r\nUma vez que uma das regexes combine, o Django importa e chama a view indicada, que \r\n\u00e9 uma simples fun\u00e7\u00e3o Python. Cada view tem um objeto requisi\u00e7\u00e3o passado -- que \r\ncont\u00e9m os metadados da requisi\u00e7\u00e3o -- e os valores capturados em uma regex.\r\n\r\nPor exemplo, se um usu\u00e1rio requisitou a URL \"/articles/2005/05/39323/\", o Django\r\ndever\u00e1 chamar a fun\u00e7\u00e3o ``mysite.views.article_detail(request,\r\n'2005', '05', '39323')``.\r\n\r\nEscreva suas views\r\n==================\r\n\r\nCada view \u00e9 respons\u00e1vel por fazer uma entre duas coisas: Retornar um objeto \r\n``HttpResponse`` contendo o conte\u00fado para a p\u00e1gina requisitada, ou levantar uma \r\nexce\u00e7\u00e3o como ``Http404``. O resto \u00e9 com voc\u00ea.\r\n\r\nGeralmente, uma view recupera dados de acordo com par\u00e2metros, carrega um template \r\ne renderiza o template com os dados recuperados. Aqui est\u00e1 uma view de exemplo \r\npara o ``year_archive`` acima::\r\n\r\n    def year_archive(request, year):\r\n        a_list = Article.objects.filter(pub_date__year=year)\r\n        return render_to_response('news/year_archive.html', {'year': year, 'article_list': a_list})\r\n\r\nEsse exemplo usa o sistema de templates do Django, o qual possui diversos recursos \r\npoderosos mas prima por permanecer simples o suficiente para que n\u00e3o-programadores \r\npossam us\u00e1-lo.\r\n\r\nDesenhe seus templates\r\n======================\r\n\r\nO c\u00f3digo acima carrega o template ``news/year_archive.html``.\r\n\r\nO Django tem um caminho de pesquisa de templates, o qual permite a voc\u00ea minimizar \r\na redund\u00e2ncia entre templates. Nas configura\u00e7\u00f5es do seu Django voc\u00ea especifica uma \r\nlista de diret\u00f3rios para verifica\u00e7\u00e3o por templates. Se um template n\u00e3o existir no \r\nprimeiro diret\u00f3rio, ele verifica o segundo e assim por diante.\r\n\r\nVamos dizer que o template ``news/article_detail.html`` foi encontrado. Aqui est\u00e1 \r\ncomo ele dever\u00e1 se parecer::\r\n\r\n    {% extends \"base.html\" %}\r\n\r\n    {% block title %}Artigos por {{ year }}{% endblock %}\r\n\r\n    {% block content %}\r\n    <h1>Artigos por {{ year }}</h1>\r\n\r\n    {% for article in article_list %}\r\n    <p>{{ article.headline }}</p>\r\n    <p>Por {{ article.reporter.full_name }}</p>\r\n    <p>Publicado em {{ article.pub_date|date:\"F j, Y\" }}</p>\r\n    {% endfor %}\r\n    {% endblock %}\r\n\r\nVari\u00e1veis s\u00e3o cercadas por chaves d\u00faplas. ``{{ article.headline }}``\r\nsignifica \"Retorne o valor do atributo headline do artigo.\" Mas pontos n\u00e3o s\u00e3o \r\nusados apenas para visualiza\u00e7\u00e3o de atributos: Eles tamb\u00e9m podem visualizar \r\ndicion\u00e1rios de chaves, visualizar \u00edndices e chamar fun\u00e7\u00f5es.\r\n\r\nNote que ``{{ article.pub_date|date:\"F j, Y\" }}`` usa um \"pipe\" no estilo Unix (o \r\ncaractere \"|\"). Isso \u00e9 chamado de filtro de template, e \u00e9 uma forma de filtrar o \r\nvalor de uma vari\u00e1vel. Nesse caso, o filtro de dados formata um objeto Python \r\ndatetime para um formato dado (como o encontrado na fun\u00e7\u00e3o date do PHP; sim, aqui \r\nest\u00e1 uma boa id\u00e9ia do PHP).\r\n\r\nVoc\u00ea pode atrelar tantos filtros quanto voc\u00ea quiser. Voc\u00ea pode escrever filtros \r\npersonalizados. Voc\u00ea pode escrever r\u00f3tulos de template personalizados, que ir\u00e3o \r\nrodar c\u00f3digo Python personalizado por baixo dos panos.\r\n\r\nFinalmente, o Django usa o conceito de \"heran\u00e7a de templates\": \u00c9 isso que o \r\n``{% extends \"base.html\" %}`` faz. Isso significa \"Primeiro carregue o template \r\nchamado 'base', o qual define uma s\u00e9rie de blocos, e preencha os blocos com os \r\nseguintes blocos.\" Resumindo, isso permite a voc\u00ea reduzir dr\u00e1sticamente a \r\nredund\u00e2ncia em seus templates: cada template tem que definir apenas aquilo que \u00e9 \r\n\u00fanico para aquele template.\r\n\r\nAqui est\u00e1 como o template \"base.html\" deve se parecer::\r\n\r\n    <html>\r\n    <head>\r\n        <title>{% block title %}{% endblock %}</title>\r\n    </head>\r\n    <body>\r\n        <img src=\"sitelogo.gif\" alt=\"Logo\" />\r\n        {% block content %}{% endblock %}\r\n    </body>\r\n    </html>\r\n\r\nSimplesmente, ele define o look-and-feel do site (com o logotipo do site),\r\ne fornece \"buracos\" para templates filhos preencherem. Isso torna o re-design do \r\nsite t\u00e3o f\u00e1cil quanto trocar um \u00fanico arquivo -- o template base.\r\n\r\nIsso tamb\u00e9m permite a voc\u00ea criar m\u00faltiplas vers\u00f5es de um site, com templates base \r\ndiferentes, enquanto reutiliza templates filhos. Os criadores do Django utilizaram \r\nessa t\u00e9cnica para criar edi\u00e7\u00f5es para celular totalmente diferentes de sites -- \r\nsimplesmente criando um novo template base.\r\n\r\nNote que voc\u00ea n\u00e3o tem que usar o sistema de templates do Django se voc\u00ea preferir \r\nutilizar outro sistema. Enquanto o sistema de templates do Django \u00e9 \r\nparticularmente bem integrado com a camada de modelos do Django, nada for\u00e7a voc\u00ea a \r\nus\u00e1-lo. Da mesma maneira que, voc\u00ea n\u00e3o tem que usar a API de banco de dados do \r\nDjango tamb\u00e9m. Voc\u00ea pode usar outras camadas de abstra\u00e7\u00e3o de banco de dados, voc\u00ea \r\npode ler arquivos XML, voc\u00ea pode escrever arquivos no disco, ou qualquer coisa que \r\ndesejar. Cada pe\u00e7a do Django -- modelos, vis\u00f5es e templates -- \u00e9 desacoplada da \r\npr\u00f3xima.\r\n\r\nIsso \u00e9 apenas a superf\u00edcie\r\n==========================\r\n\r\nEssa foi apenas uma vis\u00e3o r\u00e1pida das funcionalidades do Django. Alguns recursos \r\nmais \u00fateis:\r\n\r\n    * Um framework de caching que se integra com o memcached e outros backends.\r\n    * Um `framework de sindica\u00e7\u00e3o`_ que faz da cria\u00e7\u00e3o de RSS e Atom uma tarefa \r\n      t\u00e3o f\u00e1cil quanto escrever uma classe Python.\r\n    * Mais recursos sexies de administra\u00e7\u00e3o gerados autom\u00e1ticamente -- essa \r\n      introdu\u00e7\u00e3o mal arranhou a superf\u00edcie.\r\n\r\n.. _framework de sindica\u00e7\u00e3o: ../syndication_feeds/\r\n\r\nOs pr\u00f3ximos passos \u00f3bvios para voc\u00ea s\u00e3o fazer o `download do Django`_, ler `o \r\ntutorial`_ e juntar-se `\u00e0 comunidade`_. Obrigado pelo seu interesse!\r\n\r\n.. _download do Django: http://www.djangoproject.com/download/\r\n.. _o tutorial: ../tutorial01/\r\n.. _\u00e0 comunidade: http://www.djangoproject.com/community/\r\n", "enable_comments": 0}}, {"pk": 1, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Como baixar o Django", "url": "/download/", "template_name": "flatpages/download.html", "sites": [1], "content": "<p>Django \u00e9 um <a href=\"http://pt.wikipedia.org/wiki/Software Livre\" rel=\"external\">software livre</a> e est\u00e1 dispon\u00edvel sob a <a href=\"http://code.djangoproject.com/file/django/trunk/LICENSE\" rel=\"external\">licen\u00e7a BSD</a>. Ele necessita do Python em sua vers\u00e3o 2.3 ou superior, por\u00e9m n\u00e3o h\u00e1 depend\u00eancias de outras bibliotecas. Voc\u00ea pode baix\u00e1-lo de duas maneiras, veja:</p>\r\n\r\n<h3>Op\u00e7\u00e3o 1. Baixe a \u00faltima vers\u00e3o oficial</h3>\r\n\r\n<p>A \u00faltima vers\u00e3o oficial do Django \u00e9 a 1.0. Para obt\u00ea-la, fa\u00e7a isso:</p>\r\n\r\n<a name=\"tarball\"></a>\r\n<p>Primeiro baixe o arquivo <a href=\"http://www.djangoproject.com/download/1.0/tarball/\">Django-1.0.tar.gz</a>. Ent\u00e3o:</p>\r\n\r\n<pre>\r\ntar xzvf Django-1.0.tar.gz\r\ncd Django-1.0\r\nsudo python setup.py install\r\n</pre>\r\n\r\n<h3>Op\u00e7\u00e3o 2. Baixe a \u00faltima vers\u00e3o de desenvolvimento</h3>\r\n\r\n<p>A \u00faltima e maior vers\u00e3o do Django est\u00e1 em um reposit\u00f3rio do Subversion (controle de vers\u00e3o). Baixe ela usando a linha de comando, como requerido pelo <a href=\"http://subversion.tigris.org/\" hreflang=\"en\" rel=\"external\">Subversion</a>:</p>\r\n\r\n<pre>\r\nsvn co http://code.djangoproject.com/svn/django/trunk/\r\n</pre>\r\n\r\n<h3>Depois de baix\u00e1-lo</h3>\r\n\r\n<p>Consulte o <a href=\"http://www.djangobrasil.org/documentacao/instalar/\">guia de instala\u00e7\u00e3o</a> para mais instru\u00e7\u00f5es.</p>\r\n\r\n<p>E n\u00e3o se esque\u00e7a de se inscrever em nossa <a href=\"http://lista.djangobrasil.org/\">lista de discuss\u00e3o</a>, onde outros usu\u00e1rios e desenvolvedores de Django se ajudam mutuamente.</p>\r\n\r\n  <a name=\"outros-formatos\"></a>\r\n  <h2>Outros formatos para download</h2>\r\n\r\n  <p>\r\n  ATEN\u00c7\u00c3O! Os arquivos dispon\u00edveis para download a seguir n\u00e3o s\u00e3o mantidos\r\n  pela Django Software Foundation, mas pela equipe da Django Brasil, e\r\n  podem estar ligeiramente desatualizados em rela\u00e7\u00e3o ao <a href=\"#tarball\"><b>tarball</b></a>\r\n  original.\r\n  </p>\r\n  <p>\r\n  Da forma igualmente importante, os execut\u00e1veis de instala\u00e7\u00e3o <b>para Windows</b> tamb\u00e9m\r\n  n\u00e3o foram testados a rigor, apenas instalados em suas respectivas\r\n  vers\u00f5es como um teste superficial.\r\n  </p>\r\n  <p>Por favor, nos reporte em caso de encontrar problemas com os arquivos.</p>\r\n\r\n  <ul>\r\n    <li><a href=\"http://media.djangobrasil.org/djangobrasil/downloads/Django-1.0.zip\">Django-1.0.zip</a></li>\r\n  </ul>\r\n\r\n  <p>Execut\u00e1veis de instala\u00e7\u00e3o para o sistema operacional Microsoft Windows</p>\r\n  <ul>\r\n    <li><a href=\"http://media.djangobrasil.org/djangobrasil/downloads/Django-1.0_final.win32.py26.exe\">Django-1.0_final.win32.py26.exe</a> (Python 2.6.x)</li>\r\n    <li><a href=\"http://media.djangobrasil.org/djangobrasil/downloads/Django-1.0_final.win32.py25.exe\">Django-1.0_final.win32.py25.exe</a> (Python 2.5.x)</li>\r\n    <li><a href=\"http://media.djangobrasil.org/djangobrasil/downloads/Django-1.0_final.win32.py24.exe\">Django-1.0_final.win32.py24.exe</a> (Python 2.4.x)</li>\r\n    <li><a href=\"http://media.djangobrasil.org/djangobrasil/downloads/Django-1.0_final.win32.py23.exe\">Django-1.0_final.win32.py23.exe</a> (Python 2.3.x)</li>\r\n  </ul>\r\n\r\n  <a name=\"pacotes-produtividade\"></a>\r\n  <h3>Pacotes de produtividade</h3>\r\n  <p>H\u00e1 ainda outras formas de se baixar o Django, em pacotes que ajudam o\r\n  desenvolvedor a instalar facilmente um ambiente de desenvolvimento e/ou\r\n  produ\u00e7\u00e3o. Veja abaixo alguns deles:</p>\r\n\r\n  <h4>Pacote para Ubuntu/Debian</h4>\r\n  <p>Trata-se do pacote <b>python-django</b> para sistemas operacionais\r\n  Debian/Ubuntu.</p>\r\n  <p>Para instalar, digite na linha de comando:</p>\r\n  <pre>sudo apt-get install python-django</pre>\r\n\r\n  <h4>Bitnami DjangoStack</h4>\r\n  <p>Pacote de instala\u00e7\u00e3o simples e r\u00e1pida de um ambiente completo de\r\n  desenvolvimento e produ\u00e7\u00e3o para Django. Inclui Apache, MySQL, Python, Django\r\n  e outras bibliotecas)</p>\r\n  <p><a href=\"http://bitnami.org/stack/djangostack\">Clique aqui para mais detalhes ou para fazer o download</a></p>\r\n\r\n  <h4>InstantDjango</h4>\r\n  <p>Trata-se de um pacote para uso do Django sem a necessidade de instala\u00e7\u00e3o.\r\n  Basta descompactar o arquivo e copiar para onde quiser, inclusive CD-ROMs\r\n  e Pen-drives.</p>\r\n  <p><a href=\"http://www.instantdjango.com/\">Clique aqui para mais detalhes ou para fazer o download</a></p>\r\n\r\n  <h4>Portable Python</h4>\r\n  <p>Trata-se de um pacote para desenvolvimento em Python que pode ser carregado\r\n  em um <b>pen-drive</b>. Ele inclui o Django e outras bibliotecas importantes.</p>\r\n  <p><a href=\"http://www.portablepython.com/\">Clique aqui para mais detalhes ou para fazer o download</a></p>\r\n", "enable_comments": 0}}, {"pk": 10, "model": "flatpages.flatpage", "fields": {"registration_required": 0, "title": "Log da Reuni\u00e3o de 10/14/2008", "url": "/logs/reuniao_2008_10_14/", "template_name": "flatpages/plaintext.html", "sites": [1], "content": "(22:04:07) #django-br: O t\u00f3pico do #django-br \u00e9: Reuniao hoje (14/10) das 22h00 as 00h00...\r\n(22:04:09) semente: andrewsmedina: hahahahahah\r\n(22:04:10) kov: andrewsmedina: o lincoln \u00e9 o pai, eu sou um primo, tio no m\u00e1ximo, tem coisa que eu me orgulho de ter ensinado, tem umas coisas que eu acho paia n\u00e3o ter evitado lol\r\n(22:04:12) semente: o chefe chegou\r\n(22:04:13) andrewsmedina: aoa :)\r\n(22:04:20) andrewsmedina: kov, auhauauha\r\n(22:04:20) Marinho: iuhiuhi, opa, boa noite :)\r\n(22:04:23) semente: marinhobrandao: e ai chefe, ta atrasado\r\n(22:04:25) robsonmwoc: b\u00e1, q m\u00e1gica essa do medina\r\n(22:04:33) Cassio [n=Administ@189.82.193.19] entrou na sala.\r\n(22:04:40) Marinho: acontece, coisas de pai... rs\r\n(22:04:43) andrewsmedina: robsonmwoc, sempre funciona\r\n(22:04:48) robsonmwoc: faz agora 1000 programadores assinarem a lista do django!!!\r\n(22:04:55) petry: putz! invoco o marinho mesmo  hein andrews?\r\n(22:05:02) ***semente teve que mandar sms pro marinho...\r\n(22:05:02) Marinho: bom, a sala est\u00e1 cheia! :D\r\n(22:05:07) ***andrewsmedina invoca o chapolin colorado\r\n(22:05:12) Cassio: SLot: ol\u00e1\r\n(22:05:23) andrewsmedina: ja esteve mais cheia\r\n(22:05:28) semente: robsonmwoc: no plano ta 2500 (numero aleatorio invocado pelo andrewsmedina)\r\n(22:05:35) robsonmwoc: nanana, tem usar as palavras m\u00e1ginas, \"e agora quem ir\u00e1 os proteger\"\r\n(22:05:37) andrewsmedina: semente, aham\r\n(22:05:44) andrewsmedina: mas devia fazer mais a minha parte\r\n(22:05:47) Marinho: mesmo? ok, ent\u00e3o vamos l\u00e1 n\u00e9?\r\n(22:05:51) is_magnojr: aproveitando que  ta cheio. alguem aqui \u00e9 do maranh\u00e3o?\r\n(22:05:52) andrewsmedina: a mudanca para o rio ta tomando muito meu tempo\r\n(22:05:55) robsonmwoc: vamo l\u00e1\r\n(22:05:57) andrewsmedina: marinhobrandao, tu dirige a reuniao?\r\n(22:06:18) Marinho: bom, se voc\u00eas j\u00e1 estavam tocando, continuamos, se n\u00e3o, vamos come\u00e7ar pelas metas, pode ser?\r\n(22:06:27) Cassio: arthurfurlan: ol\u00e1\r\n(22:06:31) andrewsmedina: estavamos te esperando marinhobrandao\r\n(22:06:52) robsonmwoc: marinhobrandao: agente tava s\u00f3 esperando o andrewsmedina terminar a macumba dele, pra fazer tu aparecer no canal, hehehe\r\n(22:06:56) italomaia_: acho legal ir pelos t\u00f3picos do doc do google docs\r\n(22:07:01) semente: andrewsmedina: o cara chega atrasado e fica pondo ordem\r\n(22:07:09) andrewsmedina: hehehe\r\n(22:07:16) andrewsmedina: chega de chorumelas\r\n(22:07:21) andrewsmedina: marinhobrandao, quais sao as metas?\r\n(22:07:28) robsonmwoc: eu concordo com o italomaia_, vamos pelo que j\u00e1 est\u00e1 escrito\r\n(22:07:29) Marinho: aihuaihuai, puxa, eu n\u00e3o sei porque o despertador n\u00e3o me acordou... eu estava fazendo a minha filha dormir, mas tudo bem... obrigado semente :D\r\n(22:08:11) Marinho: certo... somos hoje cerca de 730, certo? e queremos chegar a 2500... escrevemos que conseguir\u00edamos isso at\u00e9 o fim do ano... \u00e9 um tanto ousado... ent\u00e3o a pergunta \u00e9: como ?\r\n(22:08:44) andrewsmedina: resolvendo a documentacao seria um ponto legal\r\n(22:09:09) robsonmwoc: \u00e9 uma baita meta, mais de 1000 usu\u00e1rios novos em 3 meses\r\n(22:09:13) semente: marinhobrandao: abaixa pra 1000. 2000 ate o final do ano\r\n(22:09:21) semente: marinhobrandao: ...do ano que vem\r\n(22:09:23) Marinho: certo...\r\n(22:09:24) petry: documenta\u00e7\u00e3o em portugues, um site + atrativo n\u00e3o seria uma ma id\u00e9ia tbem...\r\n(22:09:35) italomaia_: tb acho uma boa abaixar para 1000. Seria j\u00e1 um aumento de quase 50%\r\n(22:09:49) robsonmwoc: faz duas semanas q eu estou ajeitando o meu pc para fazer um podcast bacana\r\n(22:09:56) ruhanbidart saiu da sala (quit: Remote closed the connection).\r\n(22:09:58) Marinho: bom, n\u00f3s come\u00e7amos o ano com cerca de 250, se n\u00e3o me engano\r\n(22:10:05) Marinho: j\u00e1 triplicamos de tamanho\r\n(22:10:07) semente: marinhobrandao: mas tipo, a questao \u00e9, como chegar nesta meta? temos que ter um plano, objetivos e tal.\r\n(22:10:08) andrewsmedina: petry, para mim o site ta atrativo\r\n(22:10:18) italomaia_: o site tah meio triste\r\n(22:10:20) ruhanbidart [n=ruhan@189.26.196.244.adsl.gvt.net.br] entrou na sala.\r\n(22:10:22) robsonmwoc: acho interessante a divulga\u00e7\u00e3o por audio e video, isso atrai bastante\r\n(22:10:27) semente: petry: pra mim tb. precisa de uns ajustes..\r\n(22:10:31) italomaia_: uma cara met\u00e1lica\r\n(22:10:36) semente: mas tipo, vamos por parte.\r\n(22:11:08) robsonmwoc: eu gosto do visual do site, s\u00f3 acho ele pouco movimentado, poderi\u00e1mos nos organizar para cada um fazer uma parte pequena do portal\r\n(22:11:18) robsonmwoc: como descrito no google docs\r\n(22:11:28) petry: ax oq atrativo n\u00e3o \u00e9 a palavra certa... mas sei lah... com + noticias, material, divulga\u00e7\u00e3o de eventos\r\n(22:11:37) robsonmwoc: assim conseguir\u00edamos ter uma boa rotatividade de conteudo\r\n(22:11:39) petry: tipo, n\u00e3o deixar ele parad\u00e3o...\r\n(22:11:39) semente: robsonmwoc: sim sim, mas pera ai, acho que o marinho ta seguindo por partes o doc\r\n(22:11:41) Marinho: isso, concordo com o semente... eu acho inclusive que melhorar a documenta\u00e7\u00e3o e o visual do site n\u00e3o vai afetar muito no incremento de membros de forma significativa...\r\n(22:12:08) Marinho: eu vou tentar dizer o q eu tenho em mente sobre a meta dos 2500\r\n(22:12:31) #django-br: Modo (+o semente ) por ChanServ\r\n(22:12:35) robsonmwoc: ok semente, \u00e9 que para mim, muita coisa \u00e9 concomitante, e te-las trabalhando juntas \u00e9 uma grande vantagem\r\n(22:12:52) semente!n=semente@189.6.95.204: semente mudou o t\u00f3pico para: [REUNIAO] Planejamento: http://docs.google.com/Doc?id=ah97h8m3npt9_80gjdnnh9t&pli=1\r\n(22:12:55) robsonmwoc: mas podemos ir mais lentamente, para n\u00e3o gerar confus\u00e3o\r\n(22:13:02) #django-br: Modo (-o semente ) por ChanServ\r\n(22:13:03) Cassio saiu da sala.\r\n(22:13:06) robsonmwoc: :)\r\n(22:13:15) Marinho: eu n\u00e3o acho que chegar a um n\u00famero X seja exatamente uma grande coisa, mas acho que tem que ser um n\u00famero grande, ousado, pra chacoalhar a mente... se a gente n\u00e3o alcan\u00e7ar, j\u00e1 teremos alcan\u00e7ado um n\u00famero grande, mesmo que n\u00e3o seja o determinado\r\n(22:13:30) semente: robsonmwoc: :-)\r\n(22:13:31) andrewsmedina: marinhobrandao, concordo\r\n(22:13:41) semente: saquei\r\n(22:13:51) Marinho: ali\u00e1s, a id\u00e9ia desse 2500 foi do Andrews, e eu achei sensacional, lembra Andrews?\r\n(22:13:52) italomaia_: n\u00e3o seria mais motivador colocar metas alcan\u00e7aveis?\r\n(22:13:54) andrewsmedina: e uma outra coisa.. se temos 700 usuario na lista com certeza temos mais gente usando django\r\n(22:13:55) is_magnojr: existe algum tipo de representante por regiao? Alguem pra promover evento e etc.\r\n(22:13:57) robsonmwoc: certo\r\n(22:14:08) andrewsmedina: olha eu conheco 10 pessoas do meu trablaho que usam django e nao assinam a lista\r\n(22:14:24) italomaia_: tipo, at\u00e9 para o subconsciente da pessoa isso \u00e9 bom. Tipo, nossa meta era tanto, e conseguimos! Agora nossa meta vai ser tanto, e vamos conseguir tb\r\n(22:14:28) Groselho: Observacao de quem ta de fora: Eu uso, conheco um monte de gente que usar e ninguem assina essa lista\r\n(22:14:33) robsonmwoc: vamos fazer um censo, e achar essas pessoas!!!\r\n(22:14:36) robsonmwoc: hehehe\r\n(22:14:38) Marinho: italo, mas a gente consegue :D\r\n(22:14:49) italomaia_: marinhobrandao: rsrsrs, tah certo\r\n(22:14:56) andrewsmedina: robsonmwoc, ate dezembro, so aqui onde trabalho muita gente vai ta usando django\r\n(22:15:01) is_magnojr: eu uso e nao assino,\r\n(22:15:02) igors [n=igors@189.71.1.251] entrou na sala.\r\n(22:15:02) Groselho: (E eu tbm nao assino :D)\r\n(22:15:03) italomaia_: robsonmwoc: poderiamos come\u00e7ar pelo django people, n\u00e3o?\r\n(22:15:07) Marinho: pois \u00e9 Groselho, eu j\u00e1 imaginava isso, mas com vc e o Andrews falando, j\u00e1 fica mais vis\u00edvel\r\n(22:15:14) robsonmwoc: acho sim\r\n(22:15:35) semente: mas tipo gente, o que \u00e9 interessante, fazer o povo participar da lista ou agregar novos usu\u00e1rios (eu achava que era isso)?\r\n(22:16:01) semente: pois participar nem sempre \u00e9 opcao de alguem. penso que seria mais interessante fazer o povo se inscrever no djangopeople entao\r\n(22:16:19) Marinho: outra coisa... algu\u00e9m falou a\u00ed sobre representante por regi\u00e3o... eu acho que o que aumenta uma comunidade de forma forte \u00e9 atuar agressivamente: ir atr\u00e1s dos usuarios, nas faculdades, fazer o marketing do nosso jeito\r\n(22:16:27) andrewsmedina: semente, esses 10 amigos meus estao no django people\r\n(22:16:32) is_magnojr: sim\r\n(22:16:34) joaopinto [n=joaopint@201.76.153.12.wimax.digizap.com.br] entrou na sala.\r\n(22:16:38) andrewsmedina: mas tem muita gente da lista que nao esta no django people\r\n(22:16:47) Marinho: interessante isso\r\n(22:16:57) fox-guy: marinhobrandao, se for fazer esse negocio de regional seria bom articular com os grupos q ja existem de python\r\n(22:17:00) is_magnojr: marinhobrandao: dessa forma. Parecido com o GUJ.\r\n(22:17:01) semente: andrewsmedina: mta gente da lista nao necessariamente usa django tb. :-)\r\n(22:17:14) robsonmwoc: fazer essa contagem pela lista ou fora dela \u00e9 muito dif\u00edcil\r\n(22:17:29) robsonmwoc: talvez j\u00e1 tenhamos ultrapassado esse numero :P\r\n(22:17:39) andrewsmedina: robsonmwoc, talvez sim\r\n(22:17:48) semente: robsonmwoc: \u00e9 verdade. temos que ver o que \u00e9 importante.\r\n(22:17:50) joaopinto: eu sou novo no django O que eh esse django people\r\n(22:17:52) andrewsmedina: fox-guy, formar grupos regionais \u00e9 algo muito dificil cara\r\n(22:17:53) is_magnojr: [ apesar do GUJ daqui no maranhao nunca ter me ajudado em nada, j\u00e1 que quando comecei a usar o java, o grupo ele estava morto ]\r\n(22:17:54) amaral [n=qwerty@189.81.221.166] entrou na sala.\r\n(22:18:08) robsonmwoc: mas a quest\u00e3o chave, e que atrai muita aten\u00e7\u00e3o \u00e9 falar do django em eventos, o problema \u00e9 participar de tantos\r\n(22:18:11) amaral: boa noite, pessoal\r\n(22:18:12) italomaia_: joaopinto: \u00e9 um mapa de usu\u00e1rios do django. d\u00e1 uma googlada. \u00e9 um aplicativo bem legal\r\n(22:18:24) robsonmwoc: eu n\u00e3o tenho condi\u00e7\u00f5es de viajar para fora do estado\r\n(22:18:28) Marinho: bom, eu vou anotar aqui um resumo do que falamos, pra n\u00e3o delongarmos muito, ok? podem ir mandando a\u00ed, eu vou colocar la no doc\r\n(22:18:37) joaopinto: ? italomaia_: valeu\r\n(22:18:54) semente: entao marinho, nao seria mais importante divulgar o django e oferecer documentacao rapida para atingir novos usuarios?\r\n(22:19:14) andrewsmedina: semente, +1\r\n(22:19:18) italomaia_: e um visual mais atrativo =D\r\n(22:19:24) andrewsmedina: acho que a comunidade django esta blogando pouco tambem\r\n(22:19:32) andrewsmedina: se cada um dos 25 que tivessem aqui\r\n(22:19:40) andrewsmedina: tivessem blogs\r\n(22:19:41) semente: marinhobrandao: eu questiono a contagem da lista, acho que a contagem da lista e do djangopeople pode medir nossa divulgacao\r\n(22:19:45) andrewsmedina: e blogassem 1 vez por semana\r\n(22:19:51) andrewsmedina: teriamos 25 posts por semana\r\n(22:19:52) andrewsmedina: :)\r\n(22:20:12) petry: bah...meu blog tah abandonado mesmo eheheh\r\n(22:20:16) robsonmwoc: pois\u00e9, eu ia comentar isso andrewsmedina, eu tamb\u00e9m blogo pouco\r\n(22:20:21) andrewsmedina: eu tbm\r\n(22:20:24) fox-guy: andrewsmedina, eu tava falando pra articular com os grupos j\u00e1 existentes.. tipo.. fornecer material para eles, talvez apresenta\u00e7\u00f5es de slides para q eles possam apresentar mais facilmente nos eventos regionais\r\n(22:20:27) andrewsmedina: mas meu motivo era mudanca\r\n(22:20:28) italomaia_: eu blogava mais...trabalhar lasca\r\n(22:20:40) Groselho: Eu acho que o ponto chave na divulgacao do Django \u00e9 mostrar pros gerentes e respons\u00e1veis por decis\u00f5es estrat\u00e9gicas o quanto \u00e9 vantajoso utilizar ele.... l\u00e1 na empresa que eu trabalhava foi assim... enquanto tinha meia duzia de gato pingado estudando por conta nao virou nada.. s\u00f3 depois que comecei a catequizar os gerentes \u00e9 que o negocio andou\r\n(22:20:57) andrewsmedina: Groselho, isso \u00e9 importante\r\n(22:21:01) andrewsmedina: mas como chegar neles?\r\n(22:21:03) Marinho: semente: respondendo sobre divulgar o Django e buscar novos usu\u00e1rios: como far\u00edamos isso?\r\n(22:21:15) is_magnojr: Bom... eu comecei com o django faz pouco mais de uma semana. Eu nao tive a menor dificuldade at\u00e9 agora. [ talvez por causa do django book, mas que pode dificultar pra quem tem mais dificuldade no ingles ]\r\n(22:21:25) Marinho: concordo com o Andrews sobre a comunidade blogar mais\r\n(22:21:40) italomaia_: marinhobrandao: que tal divulgar nas listas das universidades?\r\n(22:21:41) andrewsmedina: acho que com poucos posts e quase nenhuma documentacao em portugues\r\n(22:21:47) andrewsmedina: dificil alguem querer usar django\r\n(22:21:57) andrewsmedina: uma das principais coisas boas do django \u00e9 a documentacao...\r\n(22:22:12) Marinho: Groselho: talvez uma divulga\u00e7\u00e3o de cases de sucesso tenha uma influencia boa nesse sentido com rela\u00e7\u00e3o a gerentes e tal\r\n(22:22:15) andrewsmedina: e nao estamos trazendo essa coisa boa para a gente\r\n(22:22:17) semente: marinhobrandao: \u00e9 a mesma questao de como atingir 2500 usuarios. o fato \u00e9 que o numero nao \u00e9 tao importante. vamos mudar o assunto para como divulgar o django??\r\n(22:22:30) andrewsmedina: marinhobrandao, hj temos varios cases grandes usando django\r\n(22:22:39) Groselho: O lance \u00e9 conseguir publicar isso em alguma revista do tipo Exame Informatica e as da IDG, de preferencia citando que o Google est\u00e1 incentivando o uso\r\n(22:22:43) Marinho: porque gerentes, diretores, etc... eles geralmetne possuem uma vis\u00e3o de resultado, e de ver outros caras do mesmo cunho deles falando bem... a\u00ed d\u00e1 aquela invejinha por dentro... rs\r\n(22:22:46) robsonmwoc: confesso, que o lance da mudan\u00e7a do padr\u00e3o da documenta\u00e7\u00e3o eu desanimei um pouco\r\n(22:22:47) semente: marinhobrandao: acho que a discussao ja foi pra isso. hehe\r\n(22:22:53) Groselho: Exatamente\r\n(22:22:54) andrewsmedina: Groselho, django ja saiu 2 vezes na info\r\n(22:22:59) Groselho: Cases de sucesso \u00e9 uma boa\r\n(22:23:02) robsonmwoc: at\u00e9 tentei voltar a traduzir novamente, mas acabei me afundando em outras coisas\r\n(22:23:05) Marinho: Magno Jr: para quem sabe ingles \u00e9 sempre mais facil\r\n(22:23:32) Groselho: Eu vi uma vez, mas era tratado apenas como bico para webdesigner... o lance \u00e9 mostrar que pode se utilizar em sistemas de producao pesados...\r\n(22:23:50) Groselho: Divulgar que o YouTube \u00e9 feito em Python\r\n(22:23:55) Marinho: andrewsmedina: concordo, ent\u00e3o se fizermos um esquema no site do tipo: \"Cases de Sucesso\", e fazermos entrevistas periodicas com esses caras?\r\n(22:24:05) Marinho: semente: concordo... rs...\r\n(22:24:17) italomaia_: em que outras revistas o django podia sair?\r\n(22:24:18) andrewsmedina: marinhobrandao, acho legal\r\n(22:24:27) andrewsmedina: mas podiamos listar os cases sem entrevistas tambem\r\n(22:24:44) andrewsmedina: italomaia_, linux magazine\r\n(22:24:45) Groselho: O dificil das ComputerWorld e outras da IDG \u00e9 que tem um patrocinio forte da Microsoft\r\n(22:25:04) Groselho: A Linux Magazine \u00e9 uma boa... excelente revista\r\n(22:25:11) andrewsmedina: podiamos divulgar mais no brlinux as noticias de django tambem\r\n(22:25:12) robsonmwoc: eu ia perguntar isso, \u00e9 f\u00e1cil aparecer numa revistas dessas?\r\n(22:25:39) Groselho: Tem os cadernos dos jornais tamb\u00e9m...\r\n(22:25:40) fox-guy: pode sair no web (out)insider tb... eu nao curto mto mas eh bastante lido\r\n(22:25:50) robsonmwoc: isso eu acho uma boa, \u00e9 um fonte que pode atrair os grandes\r\n(22:25:51) amaral: robsonmwoc, tendo os contatos certo, creio que \u00e9 poss\u00edvel\r\n(22:25:53) Marinho: ?andrewsmedina: concordo sobre o br-linux... alias, acho que isso deveria ser feito mais em rela\u00e7\u00e3o a tudo: grupos de networking, grupos profissionais etc\r\n(22:26:11) amaral: marinhobrandao, +1\r\n(22:26:30) italomaia_: grupos profissionais...tipo o via6, h\u00e3?\r\n(22:26:34) robsonmwoc: poiseh amaral,  eu n\u00e3o tenho contato nenhum, dar pra mim parece impossivel, hehehe\r\n(22:26:44) Marinho: eu estava falando hoje com o Semente: a turma do Rails \u00e9 assim: se eles soltam uma coisinha como um Formset, putz, fazem um tremendo barulho em volta, como se fosse a coisa mais revolucion\u00e1ria da hist\u00f3ria... e o fato \u00e9 que isso conquista as pessoas\r\n(22:26:49) andrewsmedina: uma coisa que isnto falta \u00e9 a comunidade brasileira ajudando no codigo do django (mais isso ;e outra historia)\r\n(22:26:55) Groselho: Para a Linux Magazine eu creio que escrevendo um bom artigo e enviando eles publicam\r\n(22:27:06) andrewsmedina: marinhobrandao, mas tem gente deles que arrotam mais do que fazem\r\n(22:27:07) Marinho: italomaia: creio que sim :)\r\n(22:27:13) Marinho: concordo\r\n(22:27:14) andrewsmedina: marinhobrandao, isso tambem queima a comunidade\r\n(22:27:30) andrewsmedina: marinhobrandao, e como queima :p\r\n(22:27:35) amaral: italomaia_, tem o pr\u00f3prio linkedin tb\r\n(22:27:36) Marinho: concordo... acho que a gente n\u00e3o pode caminhar pro exagero n\u00e3o... s\u00f3 acho que estamos num extremo e eles em outro\r\n(22:27:37) semente: marinhobrandao: anota ai, escrever um artigo compacto pra ensinar django pra publicar na linux magazine ou outra. tem que ser conteudo exclusivo acho.\r\n(22:27:40) robsonmwoc: tem muita gente do rails q s\u00f3 sabe usar o scaffold, usa pq t\u00e1 na moda\r\n(22:27:56) amaral: j\u00e1 existe um grupo djangobrasil no linkedin?\r\n(22:27:58) andrewsmedina: marinhobrandao, concordo\r\n(22:27:59) italomaia_: amaral: acho que j\u00e1 coloquei no meu linkedin sobre django. Depois vou confirmar\r\n(22:28:11) Marinho: bom, eu fiz a seguinte lista:\r\n(22:28:29) Marinho: # Incentivar grupos regionais\r\n(22:28:29) Marinho: # Buscar pessoas que n\u00e3o est\u00e3o na lista mas usam Django\r\n(22:28:29) Marinho: # Fazer um censo\r\n(22:28:29) Marinho: # Fazer os membros atuais participar mais\r\n(22:28:29) Marinho: # Incetivar pessoas a se inscreverem na Django People\r\n(22:28:29) Marinho: # Divulgar o Django em busca de novos usu\u00e1rios\r\n(22:28:29) Marinho: # Blogar mais\r\n(22:28:29) Marinho: # Criar \u00e1rea de \"Cases de Sucesso\" de Django, com entrevistas peri\u00f3dicas de gente que implementou Django, especialmente gerentes, etc.\r\n(22:28:29) Marinho: # Escrever um artigo compacto pra ensinar django pra publicar na linux magazine ou outra\r\n(22:28:31) biggahed [n=biggahed@201.29.108.110] entrou na sala.\r\n(22:28:32) #django-br: Voc\u00ea foi expulso por liquidificador: (flood)\r\n(22:28:49) #django-br: O t\u00f3pico do #django-br \u00e9: [REUNIAO] Planejamento: http://docs.google.com/Doc?id=ah97h8m3npt9_80gjdnnh9t&pli=1\r\n(22:28:52) Marinho: teste\r\n(22:28:56) Marinho: eita... fui expulso... rs\r\n(22:29:07) amaral: flood, heheh\r\n(22:29:09) petry: ahh uns bons itens no cookbook seria uma boa tbem!\r\n(22:29:10) Marinho: minhas mensagens com a lista chegaram?\r\n(22:29:16) fox-guy: sim\r\n(22:29:17) Marinho: petry: vamos chegar l\u00e1 :)\r\n(22:29:20) #django-br: Modo (+o andrewsmedina ) por ChanServ\r\n(22:29:22) robsonmwoc: nao marinhobrandao\r\n(22:29:23) Marinho: bom, acham que podemos passar adiante?\r\n(22:29:24) fox-guy: at\u00e9 essa: Divulgar o Django em busca de novos usu\u00e1rios\r\n(22:29:25) fox-guy: * biggahed (n=biggahed@201.29.108.110) entrou em #django-br\r\n(22:29:26) #django-br: Modo (+v andrewsmedina ) por ChanServ\r\n(22:29:29) #django-br: Modo (+o andrewsmedina ) por ChanServ\r\n(22:29:36) #django-br: Modo (-o liquidificador ) por ChanServ\r\n(22:29:38) #django-br: Modo (+o liquidificador ) por ChanServ\r\n(22:29:39) biggahed saiu da sala (quit: Remote closed the connection).\r\n(22:29:42) Marinho: bom, ent\u00e3o v\u00e3o ter que olhar direto no Docs mesmo\r\n(22:29:44) andrewsmedina: ChanServ, aff :p\r\n(22:29:45) Marinho: http://docs.google.com/Doc?id=ah97h8m3npt9_80gjdnnh9t&hl=pt_BR\r\n(22:29:53) is_magnojr: acho que se  os 7 primeiros capitulos do django book  fossem traduzidos, seria uma grande coisa\r\n(22:29:58) robsonmwoc: heheheh, servidor cherife\r\n(22:30:02) biggahed [n=biggahed@201.29.108.110] entrou na sala.\r\n(22:30:15) Marinho: foi o liquidificador :P\r\n(22:30:19) robsonmwoc: algu\u00e9m tem id\u00e9ia do tamanho do livro do django?\r\n(22:30:24) liquidificador: Nem o liquidificador ate expulsou eu p?!\r\n(22:30:32) robsonmwoc: em rela\u00e7\u00e3o a documenta\u00e7\u00e3o principal\r\n(22:30:37) andrewsmedina: marinhobrandao, \u00e9 bot\r\n(22:30:40) biggahed: fox-guy?\r\n(22:30:42) semente: robsonmwoc: nao, mas ja pedi os fontes, acesso ao site, ou alguma forma pra traduzir e nem responderam.\r\n(22:30:56) Marinho: robsonmwoc: falando em livro, tenho uma noticia boa, pra daqui cerca de um m\u00eas\r\n(22:31:00) Marinho: e ainda nesse assunto de divulga\u00e7\u00e3o\r\n(22:31:22) Groselho: Nao sei se vcs conhecem o Ohloh, mas \u00e9 um excelente site sobre projetos open source: https://www.ohloh.net/projects/django\r\n(22:31:42) Groselho: E l\u00e1 s\u00f3 tem 2 pessoas no Brasil que usam o Django (E eu sou uma delas :D)\r\n(22:31:53) robsonmwoc: t\u00e1 escrevendo um livro marinhobrandao? hehehe\r\n(22:32:04) Marinho: h\u00e1 cerca de um ano, eu estava escrevendo um livro sobre Django, cheguei a concluir, consegui editora e tudo, mas o resultado n\u00e3o ficou bom... ficou muito burocr\u00e1tico, o Django evoluia rapido demais, enfim, ficou parado esperando dar uma espairada pra decidir o que fazer\r\n(22:32:47) italomaia_: O.O!\r\n(22:33:03) robsonmwoc: eu acho q a bola t\u00e1 quicando, eu pensei em escrever um livro para distribuir em pdf, mas \u00e9 muito trabalho, dae optei por tradu\u00e7\u00e3o mesmo\r\n(22:33:14) Marinho: ent\u00e3o, h\u00e1 cerca de um mes eu comecei a reescreve-lo, praticamente do zero, com uma roupagem totalmente diferente, vai ser um livro eletronico, lan\u00e7ado em s\u00e9rie... realmente diferente do que voc\u00eas conhecem em assunto de TI... e provavelmente pol\u00eamico... j\u00e1 contratei ilustra\u00e7\u00f5es, o site est\u00e1 pronto e diversos capitulos j\u00e1 est\u00e3o\r\n(22:33:23) Marinho: espero que at\u00e9 o fim de novembro esteja no ar, \u00e9 a meta :)\r\n(22:33:24) andrewsmedina: eu tenho boa parte de um livro com escopo diferente do marinho escrito tbm :)\r\n(22:33:34) Marinho: cara, seria muito bom\r\n(22:33:50) petry: poxa! massa isso!\r\n(22:34:12) robsonmwoc: isso \u00e9 um negocio foda!! J\u00e1 estou curioso, hehehe\r\n(22:34:13) Marinho: olha, quanto mais pessoas estiverem escrevendo algo ousado assim, \u00e9 realmente muito bom\r\n(22:34:16) semente: marinhobrandao: que tal adicionar como meta um artigo pra LM?\r\n(22:34:23) Marinho: o que \u00e9 LM ?\r\n(22:34:27) Marinho: Linux Mag?\r\n(22:34:30) andrewsmedina: Linux Magazine\r\n(22:34:33) robsonmwoc: pra muita gente, principalmente empres\u00e1rios, um livro faz toda a diferen\u00e7a\r\n(22:34:34) Marinho: j\u00e1 coloquei l\u00e1\r\n(22:34:37) andrewsmedina: acho que deviamos ver o espaco primeiro\r\n(22:34:42) amaral: robsonmwoc, tem raz\u00e3o\r\n(22:35:09) semente: marinhobrandao: ok\r\n(22:35:13) amaral: a gente tem que ter sempre em mente que, pra quem toma decis\u00e3o, \u00e9 dif\u00edcil atirar no escuro\r\n(22:35:35) robsonmwoc: empres\u00e1rio gosta de homologa\u00e7\u00e3o, por isso a phusion criou o ruby enterprise edition, com um hash sortido, hehehe\r\n(22:35:43) Marinho: ?robsonmwoc: sim, concordo com vc... tudo que n\u00e3o \u00e9 nerd, gosta de livros, coisas coloridas, gr\u00e1ficos, benchmarks, etc... a gente n\u00e3o precisa virar o diabo do marketing, mas \u00e9 preciso reconhecer a import\u00e2ncia que o marketing tem\r\n(22:36:05) Marinho: bom, podemos ent\u00e3o partir pra parte das palestras?\r\n(22:36:18) robsonmwoc: marinhobrandao: tens toda raz\u00e3o\r\n(22:36:19) andrewsmedina: ok\r\n(22:36:23) semente: marinhobrandao: por mim pode\r\n(22:36:25) robsonmwoc: podemos sim\r\n(22:36:33) Marinho: Palestras e cursos no FISL, PyConBrasil e LatinoWare\r\n(22:36:49) Marinho: quais s\u00e3o as datas para os proximos FISL e Latinoware?\r\n(22:37:05) andrewsmedina: marinhobrandao, fisl \u00e9 ano que vem\r\n(22:37:12) andrewsmedina: mas a submissao deve sair em novembro\r\n(22:37:16) Marinho: certo... em torno de maio?\r\n(22:37:16) igors saiu da sala (quit: Connection timed out).\r\n(22:37:18) Marinho: ou mar\u00e7o?\r\n(22:37:22) amaral: abril\r\n(22:37:24) petry: o fils eh em abril axo\r\n(22:37:27) andrewsmedina: marinhobrandao, Latinoware \u00e9 esse ano mas acabou as inscricoes\r\n(22:37:28) robsonmwoc: perai q eu vou checar\r\n(22:37:33) petry: *fisl\r\n(22:37:40) andrewsmedina: petry, o FISL sera em julho ou junho em 2009 :)\r\n(22:37:47) Marinho: sobre a Latinoware: se n\u00e3o me engano, temos 2 palestras l\u00e1, n\u00e3o \u00e9 isso?\r\n(22:37:53) semente: a gente pode colocar esses eventos nacionais na agenda nossa la no Google, mesmo nao tendo nenhuma participacao com palestras e tal, vai ter gente presente.\r\n(22:37:56) andrewsmedina: marinhobrandao, nao sei\r\n(22:38:03) andrewsmedina: temo o EMSL :p\r\n(22:38:20) andrewsmedina: tem o consili em sp esse ano\r\n(22:38:25) semente: marinhobrandao: tem o EMSL esse ano ainda\r\n(22:38:26) andrewsmedina: mas nao sei como andam as inscricoes\r\n(22:38:29) robsonmwoc: O fisl 10 ser\u00e1 de 24 a 27 de Junho de 2009, em Porto Alegre-RS, na PUC-RS.\r\n(22:38:39) andrewsmedina: falei :)\r\n(22:38:49) andrewsmedina: vai ta frio para caramba\r\n(22:38:54) semente: que tal colocarmos esses eventos no calendario da Django Brasil?\r\n(22:38:58) semente: andrewsmedina: vai mesmo\r\n(22:39:02) robsonmwoc: eu acho q ainda n\u00e3o abriram inscri\u00e7\u00f5es para nada\r\n(22:39:04) Marinho: na Latinoware teremos dois: uma com o Ramalho, outra com o Minholi\r\n(22:39:17) andrewsmedina: semente, coloca\r\n(22:39:20) Marinho: at\u00e9 imagino o frio\r\n(22:39:23) andrewsmedina: mas acho que nao deveriam sair ja no fisl\r\n(22:39:28) andrewsmedina: marinhobrandao, o ramalho vai falar de que?\r\n(22:39:34) Marinho: Django B\u00e1sico\r\n(22:39:38) semente: andrewsmedina: ok\r\n(22:39:46) Marinho: e o Minholi: Desenvolvendo Portal Corporativo\r\n(22:39:52) andrewsmedina: marinhobrandao, eu pergunto, pq ramalho fala de pytho, django, grok :p\r\n(22:40:02) Marinho: entendi\r\n(22:40:04) Marinho: mas \u00e9 Django mesmo :)\r\n(22:40:08) andrewsmedina: marinhobrandao, muito bom, termos duas palestras de Django\r\n(22:40:09) andrewsmedina: :)\r\n(22:40:21) Marinho: quantas n\u00f3s tivemos no FISL 2008? vcs lembram?\r\n(22:41:00) Marinho: sumiu todo mundo?\r\n(22:41:01) robsonmwoc: eu n\u00e3o lembro, tinha muita coisa de python, acho 40% do evento envolvia python\r\n(22:41:02) petry: bah, eu vi uma s\u00f3, mas axo q teve umas 3...\r\n(22:41:22) andrewsmedina: marinhobrandao, a minha palestra\r\n(22:41:23) andrewsmedina: e meu treinamento\r\n(22:41:25) andrewsmedina: :)\r\n(22:41:44) is_magnojr: eu t\u00f4 vendo, mas nao vou em nenhum desses eveonts mesmo =P\r\n(22:41:46) andrewsmedina: redpill, tinha muita palestra de python no fisl cara... \u00e9 que fisl engloba muiiita coisa\r\n(22:41:47) Marinho: ja volto\r\n(22:41:47) robsonmwoc: andrewsmedina: tu participou do gamejam n\u00e9?\r\n(22:41:48) andrewsmedina: :)\r\n(22:41:49) petry: andrewsmedina, foi a q eu vi!\r\n(22:41:56) andrewsmedina: robsonmwoc, tem sim\r\n(22:42:06) andrewsmedina: petry, pois \u00e9, devia ter palestrado tbm\r\n(22:42:07) andrewsmedina: :p\r\n(22:42:08) redpill: :D\r\n(22:42:12) Marinho: bacana, ent\u00e3o foram 2\r\n(22:42:41) andrewsmedina: marinhobrandao,\r\n(22:42:42) andrewsmedina: sim\r\n(22:42:47) mm [i=c9113dbc@gateway/web/ajax/mibbit.com/x-1accfbcb3ccbc5df] entrou na sala.\r\n(22:42:49) petry: andrewsmedina, ehhe eu sei... mas foi \u00e9poca corrida... nem na pycon pude ir\r\n(22:42:55) andrewsmedina: gostei de ter mais gente fora eu falando de django esse ano na pycon\r\n(22:43:02) andrewsmedina: mm, =)\r\n(22:43:07) Marinho: bom, eu acho que a matematica b\u00e1sica \u00e9 essa: se tivemos 2, na proxima precisamos ter 4, creio que 1 b\u00e1sica, 1 intermedi\u00e1rio/avan\u00e7ada, e as outras duas livres... e mais um mini-curso, j\u00e1 seria uma vit\u00f3ria, eu acho\r\n(22:43:21) andrewsmedina: marinhobrandao, impossivel\r\n(22:43:22) semente: robsonmwoc: onde vc viu essas datas?\r\n(22:43:25) robsonmwoc: eu tinha em mente apresentar um projeto em que trabalho no fisl, ele \u00e9 feito em django\r\n(22:43:28) Groselho: Alguem aqui apresentou palestra no PythonDay na impacta ?\r\n(22:43:29) andrewsmedina: marinhobrandao, os slots sao limitados por temas\r\n(22:43:29) Marinho: mesmo?\r\n(22:43:30) robsonmwoc: peari\r\n(22:43:47) andrewsmedina: Groselho, eu ia apresentar no PythonDay, mas o Christiano Anderson me substituiu\r\n(22:43:50) andrewsmedina: marinhobrandao, sim\r\n(22:43:51) robsonmwoc: http://www.softwarelivre.org/news/12160\r\n(22:43:57) andrewsmedina: marinhobrandao, aco que tem 12 slots para python\r\n(22:44:00) andrewsmedina: ou menos\r\n(22:44:07) Marinho: e se atacarmos ent\u00e3o de mini-cursos e com a id\u00e9ia do semente de fazer uma coisa sobre o Django em paralelo?\r\n(22:44:13) semente: robsonmwoc: valeu\r\n(22:44:15) andrewsmedina: isso porque esse ano teve trilha exclusiva de python\r\n(22:44:26) petry: mas ano q vem, acredito q vou estar com um horario + flexivel, pretendo submeter 2 anos q vem, na trilha universitaria ser\u00e1 meu tcc, e outra relacionada a django\r\n(22:44:43) robsonmwoc: mas posso segmentar umas partes dele para poder apresentar como workshop ou mini curso\r\n(22:44:46) Marinho: bom, mas poderia ser temas diferentes que colocassem o Django em evidencia, nao?\r\n(22:45:14) amaral: andrewsmedina, ent\u00e3o acho que igualar a marca de 2 palestras j\u00e1 seria uma boa, n\u00e3o?\r\n(22:45:20) andrewsmedina: marinhobrandao, os avaliadores sao rigidos..\r\n(22:45:28) andrewsmedina: amaral, tivemos 1 palestra e 1 treinamento esse ano\r\n(22:45:30) robsonmwoc: eu acho uma boa um workshop de django com sphinx-search\r\n(22:45:32) andrewsmedina: e nao 2 palestras\r\n(22:45:35) Marinho: entendi... faz sentido... o FISL \u00e9 muito mais abrangente n\u00e9\r\n(22:45:38) andrewsmedina: treinamentos \u00e9 facil serem aceitos\r\n(22:45:41) andrewsmedina: palestras nao\r\n(22:45:53) andrewsmedina: marinhobrandao, fisl = 'forum INTERNACIONAL de Software livre'\r\n(22:46:00) andrewsmedina: esse ano foram 7mil pessoal\r\n(22:46:01) Marinho: pois \u00e9\r\n(22:46:04) robsonmwoc: palestras tem uma avalia\u00e7\u00e3o mais rigorosa\r\n(22:46:05) andrewsmedina: pessola == pessoas\r\n(22:46:30) Marinho: ?bom, vamos ent\u00e3o deixar em aberto e colocar um asterisco, e tentar focar nos treinamentos\r\n(22:46:30) robsonmwoc: esse ano foi foda, tinha muita gente\r\n(22:46:34) joaopinto saiu da sala.\r\n(22:46:55) OgMaciel [n=omaciel@foresight/developer/OgMaciel] entrou na sala.\r\n(22:46:57) Marinho: agora, sobre os foruns de soft livre de Minas e Espirito Santo, alguem est\u00e1 por dentor?\r\n(22:46:59) Marinho: dentro*\r\n(22:47:06) andrewsmedina: nao ter ninguem da comunidade no django con foi algo ruim ein\r\n(22:47:15) andrewsmedina: marinhobrandao, o kov\r\n(22:47:16) amaral: em todo caso, acho que importa \u00e9 a submiss\u00e3o de trabalhos, j\u00e1 que a aprova\u00e7\u00e3o n\u00e3o depende de n\u00f3s\r\n(22:47:35) Marinho: concordo\r\n(22:47:47) robsonmwoc: eu n\u00e3o estou por dentro, e moro longe de l\u00e1, hehehe\r\n(22:48:14) kov: opa; a chamada de trabalhos do E(ncontro)M(ineiro)SL foi aberta na semana passada, e o foco \u00e9 em desenvolvimento de software livre, ent\u00e3o prato cheio pra django eu acho\r\n(22:48:29) Marinho: mas eu acho que \u00e9 possivel por exemplo: conseguir falar sobre metodologia \u00e1gil, por exemplo... e falar sobre projetos que foram implementados usando metodologia agil, com Django... no trabalho do Andrews mesmo com certeza temos gente que pode falar sobre isso\r\n(22:48:37) Marinho: o Falc\u00e3o, por exemplo\r\n(22:48:58) andrewsmedina: marinhobrandao, nao vejo a ligacao direta entre uma coisa e outra\r\n(22:49:16) Marinho: *mensagem subliminar* ;)\r\n(22:49:18) is_magnojr: acho que o foco ta meio centralizado.\r\n(22:49:34) Marinho: palestra sobre Scrum na pr\u00e1tica\r\n(22:49:37) Marinho: exemplos feitos com Django\r\n(22:49:55) Marinho: ?is_magnojr: n\u00e3o entendi\r\n(22:50:04) andrewsmedina: marinhobrandao, nao vejo a ligacao direta entre uma coisa e outra (2 a missao)\r\n(22:50:16) robsonmwoc: boiei\r\n(22:50:37) Marinho: n\u00e3o? humm... vou tentar denovo, se n\u00e3o der a gente parte pra proxima... rs...\r\n(22:50:46) andrewsmedina: hehehe\r\n(22:50:50) igors [n=igors@189.71.1.251] entrou na sala.\r\n(22:50:51) Marinho: vamos imaginar o Jorge Falc\u00e3o falando sobre o sucesso de implementar metodologias ageis\r\n(22:50:53) andrewsmedina: vamos partir para a proxima?\r\n(22:50:59) semente: peidei\r\n(22:51:09) robsonmwoc: puta merda\r\n(22:51:10) Marinho: ent\u00e3o ele fala sobre isso\r\n(22:51:14) Marinho: certo?\r\n(22:51:19) robsonmwoc: certo\r\n(22:51:31) Marinho: e cita projetos feitos em Django usando metodologias ageis\r\n(22:51:41) semente: marinhobrandao: \u00e9 uma boa\r\n(22:51:44) robsonmwoc: si si\r\n(22:51:51) andrewsmedina: marinhobrandao, nao devemos contar mensagens subliminares como acoes da comunidade\r\n(22:51:53) Marinho: o foco \u00e9 metodologia agil... mas a implementa\u00e7\u00e3o \u00e9 feita em alguma linguagem... Python/Django, por exemplo\r\n(22:51:54) Dinei [n=abc@201.23.212.223] entrou na sala.\r\n(22:51:55) andrewsmedina: \u00e9 o que eu acho :)\r\n(22:51:58) Marinho: aihuaihuaia\r\n(22:52:02) robsonmwoc: isso \u00e9 muito bom\r\n(22:52:06) semente: andrewsmedina: tb concordo\r\n(22:52:11) Marinho: foi s\u00f3 maneira de dizer\r\n(22:52:28) Marinho: ok, vamos adiante\r\n(22:52:49) semente: FISL, EMSL, Latinoware, que mais temos??\r\n(22:52:51) Marinho: sobre palestras locais... eu consegui uma palestra e um mini-curso para um evento aqui em Goiania, em novembro\r\n(22:53:05) Marinho: como poder\u00edamos instigar nesse sentido?\r\n(22:53:19) robsonmwoc: eu tenho q ver, que por essa \u00e9poca eu tenho semana acad\u00eamica na faculdade\r\n(22:53:26) andrewsmedina: marinhobrandao, palestras regionais?\r\n(22:53:33) robsonmwoc: pode ser uma boa propor uma palestra\r\n(22:53:52) Marinho: sim: palestras na sua cidade, na sua regi\u00e3o, em faculdades, cursos, empresas, etc\r\n(22:53:52) is_magnojr: nao seis e estou falando besteira, mas tipo .. esses eventos grandes vai uma boa quantidade de gente, certo, mas eventos locais ou organizado por um pequeno grupo, em faculdades, por exemplo , pode ter um alcance maior. Principalmente se existisse uma forma de integrar eventos em locais separados, seja com video conferencia, ou sei l\u00e1.\r\n(22:54:13) Marinho: is_magnojr: concordo\r\n(22:54:13) robsonmwoc: s\u00f3 que eu n\u00e3o conhe\u00e7o ninguem do rio grande do sul para pode armar um esquema maior\r\n(22:54:17) fox-guy: marinhobrandao, podemos fornecer insumos pras palestras\r\n(22:54:23) OgMaciel: pergunta: quando que vai ser o EMSL?\r\n(22:54:29) Marinho: fox-guy: tirou as palavras da minha boca... rs\r\n(22:54:34) fox-guy: tipo, preparar slides... panfletos com instrucoes pra coding dojo etc\r\n(22:54:38) andrewsmedina: OgMaciel, vira palestrar? :p\r\n(22:54:49) petry: dei uma palestra semana retrazada numa faculdade, um cara do DA de outra viu, e t\u00e1 querendo q eu de outra na dele (q \u00e9 onde trabalho hehehe)\r\n(22:54:52) OgMaciel: andrewsmedina: hehehe quem sabe nao vou assistir?\r\n(22:55:15) Marinho: EMSL: 26 a 29 de Novembro de 2008.\r\n(22:55:16) andrewsmedina: OgMaciel, opa!\r\n(22:55:19) robsonmwoc: uhmmm, \u00e9 uma boa mesmo\r\n(22:55:24) Marinho: petry: eu acho que \u00e9 por a\u00ed\r\n(22:55:30) ***OgMaciel e' fa de django de carteirinha\r\n(22:55:53) is_magnojr: seria mesmo interessante: existir alguem responsavel por dar um curso pra um determinado grupo de pessoas e essas pessoas ficarem de repassar esse curso pra mais uma quantidade de pessoa. algo do tipo\r\n(22:55:59) Marinho: n\u00e3o \u00e9 organizar eventos n\u00e3o, \u00e9 levar o Django aos eventos que j\u00e1 acontecem localmente... ou a empresas, ou semin\u00e1rios... os empresarios gostam de colocar nego de .Net e Java pra brigar... vamos entrar na briga :P\r\n(22:56:54) Marinho: is_magnojr: podemos fazer isso atrav\u00e9s de lan\u00e7ar material b\u00e1sico pra essas palestras, por exemplo: ter uns sets de slides, com exemplos e ilustra\u00e7\u00f5es prontos, e o cara pega e s\u00f3 ajusta pro caso dele\r\n(22:57:03) Marinho: apostilas, panfletos, camisetas, etc...\r\n(22:57:19) Groselho: Um detalhe: Eu programo em Java (to tentando parar com isso) e no Python Day encheu o saco a mania de ficar falando mal de Java, de Rails e cia....\r\n(22:57:24) andrewsmedina: so eu\r\n(22:57:32) andrewsmedina: esse ano apresentei umas 7 palestras sobre djang\r\n(22:57:37) andrewsmedina: varias delas no MT :)\r\n(22:58:08) Groselho: Acho que isso so consegue \u00e9 criar antipatia em programadores de outras linguagens, acho que deviam tomar mais cuidado com isso\r\n(22:58:10) is_magnojr: isso.. podemos\r\n(22:58:16) Marinho: Groselho: concordo, eu acho que o foco n\u00e3o pode ser falar mal do outro, at\u00e9 porque isso \u00e9 meio non-sense... eu acho que o foco \u00e9 falar que o Django \u00e9 a melhor coisa do mundo, sem dizer que as outras s\u00e3o as piores\r\n(22:58:27) Groselho: Exatamente\r\n(22:58:40) Marinho: porque de fato: eu acho o Django a melhor coisa do mundo... n\u00e3o estou desconsiderando o resto, mas poxa, cada um defende seu peixe, eu vou defender o meu\r\n(22:58:52) petry: marinhobrandao, falo bonito ehehe\r\n(22:59:04) robsonmwoc: jamais se deve falar mal de outra tecnologia, pois ela sempre serve muito bem a alguem\r\n(22:59:06) Groselho: Eu nem liguei pro que falavam pq eu conheco as vantagens do Python e Django... mas o pessoal at\u00e9 la da empresa ficou meio mordido\r\n(22:59:16) Marinho: pois \u00e9\r\n(22:59:30) amaral: ninguem gosta de se sentir afrontado\r\n(22:59:40) robsonmwoc: pois\u00e9\r\n(22:59:41) Marinho: andrewsmedina: saber das suas palestras l\u00e1 me inspirou a correr atr\u00e1s aqui... e est\u00e1 dando resultado, espero que continue dando :D\r\n(22:59:50) andrewsmedina: marinhobrandao, o mm me falou algo legal\r\n(23:00:01) robsonmwoc: mas o foco n\u00e3o deve ser comparar tecnologias, e sim solu\u00e7\u00e3o de problemas\r\n(23:00:08) italomaia_: boa noite a todos. O sono me acomete!\r\n(23:00:08) Marinho: amaral: concordo... e at\u00e9 porque n\u00e3o faz muito sentido ficar falando mal do seu colega de trabalho\r\n(23:00:11) andrewsmedina: como vamos expandir se nao sabemos o perfil de quem vamos 'conquistar':p\r\n(23:00:12) italomaia_ saiu da sala (quit: \"Ex-Chat\").\r\n(23:00:17) amaral: robsonmwoc, exatamente\r\n(23:00:22) Marinho: ?robsonmwoc: concordo totalmente\r\n(23:00:24) robsonmwoc: como voc\u00ea pode fazer tal coisa com o django, sem perder 30% de seu cabelo?, hehehe\r\n(23:00:26) semente: marinhobrandao: anota ai, criar apresenta\u00e7\u00f5es para palestras, em conjunto e/ou disponibiliz\u00e1-las em um local publico\r\n(23:00:34) Groselho: Isso... e la na palestra deu para perceber que acabou gerando um desconforto: Teve uma hora que um cara fez uma pergunta assim: \"N\u00f3s no Rails fazemos assim, e vcs tao falando que no Django \u00e9 melhor....\"\r\n(23:00:40) amaral: isso \u00e9 *muito* importante, andrewsmedina\r\n(23:00:50) Marinho: andrewsmedina: cara, realmente, faz sentido\r\n(23:01:02) Marinho: vou colocar isso l\u00e1 de vermelho... rs... pra pensarmos bem nisso\r\n(23:01:04) andrewsmedina: marinhobrandao, acho que estudantes com palestras em faculdades \u00e9 o ideal\r\n(23:01:09) Groselho: Nao podemos criar essa divisao de \"Nos e voces\" com outros programadores\r\n(23:01:10) andrewsmedina: com iniciantes na lista, blogs e documentacao\r\n(23:01:31) andrewsmedina: e outros programadores e 'gerentes' a questao \u00e9 mostrar por que django e melhor com cases e etc\r\n(23:01:51) amaral: queremos quem ainda n\u00e3o tem opini\u00e3o formada, quem est\u00e1 come\u00e7ando a programar, quem j\u00e1 programa em outras linguagens/frameworks etc...\r\n(23:01:55) andrewsmedina: depois que saiu o django na info, a comundade cresceu bastanten ( em numeros)\r\n(23:02:11) amaral: tem que focar um publico-alvo prim\u00e1rio\r\n(23:02:13) Marinho: Groselho: falando em Rails, acho que \u00e9 um caso ainda mais especial, porque comemos do mesmo prato.. Rails e Django s\u00e3o unha e carne... se eu falo mal do Rails, eu praticamente estou falando mal de mim mesmo\r\n(23:02:26) Marinho: andrewsmedina: concordo, totalmente\r\n(23:02:56) Marinho: bom, vou anotar essas coisas l\u00e1 no Doc, pra seguirmos adiante\r\n(23:02:58) Groselho: tambem acho, nao faz sentido falar que o Azul \u00e9 mais bonito que o Amarelo... gosto \u00e9 gosto\r\n(23:02:59) robsonmwoc: sim, mas n\u00e3o ha necessidade de se falar mal do rails, do java ainda vai, mas do rails n\u00e3o, hehehe to zoando\r\n(23:03:07) Groselho: huahuahauauha\r\n(23:03:11) andrewsmedina: acho que definir qual evento vamos participar \u00e9 meio perca de tempo\r\n(23:03:20) andrewsmedina: acho que devemos submeter palestra sempre quando pudermos\r\n(23:03:27) robsonmwoc: se alguem levantar algum questionamento nesse sentido, \u00e9 s\u00f3 ter classe, e responder\r\n(23:03:41) amaral: andrewsmedina, +1\r\n(23:03:43) robsonmwoc: desculpa amigo, n\u00e3o sei programar em rails, pode nos mostrar como \u00e9?\r\n(23:03:44) robsonmwoc: hehehe\r\n(23:03:59) Groselho: bom, eu programava em Java e sempre achei que perdia muito tempo pra fazer coisas bobas... ai quando o Bruno Gola me mostrou o Django eu vi q era a solucao pros meus problemas\r\n(23:04:04) andrewsmedina: robsonmwoc, rail \u00e9 o django, mas no django tu sabe como as    coisas funcionam\r\n(23:04:16) andrewsmedina: :p\r\n(23:04:27) petry: pessoal, vou indo!\r\n(23:04:30) petry: abra\u00e7o!\r\n(23:04:35) is_magnojr: eu entrei aqui nao sei nem pq.  Eu s\u00f3 gostei de python e queria um framework pra desenvolver web, at\u00e9 que encontrei o zope, mas o zope nao servia muito para o que queria, entao encontrei o django ( apesar de estar usando o pylons agora nesse projeto, xD )\r\n(23:04:46) Groselho: Rails \u00e9 um framework Web da linguagem Ruby\r\n(23:04:48) is_magnojr: eu tambem era do java, e um pouco de .net\r\n(23:04:50) robsonmwoc: cara, tenta fazer uma aplica\u00e7\u00e3o modular no rail, dae tu vai saber pq eu sou f\u00e3 do Python/Django, hehehe\r\n(23:04:53) Groselho: \u00e9 o Django do Ruby\r\n(23:05:02) petry saiu da sala (quit: \"Saindo\").\r\n(23:05:42) andrewsmedina: Groselho, o Rails \u00e9 o zope do Ruby :p\r\n(23:06:22) robsonmwoc: marinhobrandao: sobre esse t\u00f3pico\r\n(23:06:23) robsonmwoc: \u00c9 complicado aumentar disso, mas treinamentos possuem maior abertura, e podemos fazer algo paralelo (um subevento?) de Django\r\n(23:06:47) robsonmwoc: n\u00e3o \u00e9 poss\u00edvel usar o espa\u00e7o do quiosque do django no fisl para fazer mini-cursos na hora\r\n(23:06:51) Marinho: foi a forma que eu encontrei pra resumir o que conversamos sobre ter mais coisas sobre Django no FISL\r\n(23:06:54) robsonmwoc: com poucas pessoas e tals?\r\n(23:06:56) fox-guy: andrews qdo vc vai dar um curso l\u00e1 no treinatom? :)\r\n(23:07:01) Groselho: bao.. eu nao conheco muito do zope tambem :D\r\n(23:07:03) Marinho: eu n\u00e3o sei... nunca fui ao FISL\r\n(23:07:15) robsonmwoc: mas tipo uns 3 por dia\r\n(23:07:18) robsonmwoc: :(\r\n(23:07:42) Marinho: ?robsonmwoc: vamos ver isso com mais carinho ent\u00e3o :)\r\n(23:07:53) fox-guy: tipo.. se a gente conquistasse a simpatia de uns caras com voz bem aud\u00edvel, tipo a do carlos brandao... ele eh um grande catequizador de ruby..\r\n(23:07:55) robsonmwoc: o foda \u00e9 que o LEC sempre ganha estande no FISL, e eu teria que rebolar bastante para ficar nos dois\r\n(23:08:24) andrewsmedina: fox-guy, falta combinar com o carlos e tempo\r\n(23:08:54) Marinho: bom, ent\u00e3o estamos meio que entrando em outro assunto que \u00e9 importante falar hoje: essa coisa de cursos\r\n(23:08:54) fox-guy: ninguem t\u00e1 com tempo nao? acho q um curso \"pra j\u00e1\" seria \u00f3timo pras nossas metas de divulgacao 2008\r\n(23:08:57) Marinho: \u00e0 distancia ou n\u00e3o\r\n(23:09:03) robsonmwoc: vou dar uma fu\u00e7ada nos contatos do fisl aqui\r\n(23:09:20) robsonmwoc: eu tenho um colega que faz parte da associa\u00e7\u00e3o\r\n(23:09:24) fox-guy: pois \u00e9, eu faria um curso l\u00e1 no treinatom.. acabei de afzer um de flex+v\u00eddeo... se tivesse django, faria\r\n(23:09:52) Marinho: andrewsmedina: vc tem contato com o cara do Treinatom? para iniciar essa conversa?\r\n(23:09:55) Caceres saiu da sala (quit: \"Ex-Chat\").\r\n(23:09:58) fox-guy: ou na simples...\r\n(23:10:04) andrewsmedina: marinhobrandao, sim\r\n(23:10:10) andrewsmedina: ja ate comecei material para esse curso\r\n(23:10:16) andrewsmedina: =)\r\n(23:10:25) fox-guy: c ja foi num cafe de sabado neh?\r\n(23:10:30) Marinho: acho que seria interessante... \u00e9 de interesse comercial para todos, sem d\u00favida, e da comunidade tamb\u00e9m :D\r\n(23:10:35) andrewsmedina: fox-guy, a simples da curso de django se tu diver dinheiro para pagar eles\r\n(23:10:36) Dinei: Aos sabados rolam alguns cursos gratuitos no treina tom\r\n(23:10:42) Dinei: chamado cafe do tom\r\n(23:10:48) andrewsmedina: Dinei, fox-guy sim eu falei sobre django num cafe com tom\r\n(23:10:55) fox-guy: andrewsmedina, cara.. se eles abrirem o curso VAI ter gente dando o $$\r\n(23:10:57) Dinei: Acho que vi\r\n(23:10:57) andrewsmedina: e embreve falarei sobre app engine\r\n(23:10:57) Marinho: bacana, muito bacana\r\n(23:11:10) andrewsmedina: fox-guy, meu tempo ta meio puxado\r\n(23:11:19) andrewsmedina: mas sendo liberado... eu vou ver essa parada do curso\r\n(23:11:20) andrewsmedina: :p\r\n(23:11:32) fox-guy: \u00e9 mei caro mermo... o de zope+plone eu fiz por r$ 1000, mas ganhava certificado da zope corporation... django tem algo assim?\r\n(23:11:40) fox-guy: (ou eh zope foundation, nao lembro)\r\n(23:11:42) Marinho: o lado bom e ruim ao mesmo tempo da nossa comunidade \u00e9 esse do tempo... rs... eu tou aqui, a esposa j\u00e1 est\u00e1 fazendo press\u00e3o... rs...\r\n(23:11:54) fox-guy: andrewsmedina, :P a\u00ed quem diz \u00e9 o semente (piiiiiiing)\r\n(23:12:00) Marinho: fox-guy: n\u00e3o, Django n\u00e3o tem, e n\u00e3o tem previs\u00e3o de ter\r\n(23:12:16) semente: fox-guy: ahn?\r\n(23:12:19) fox-guy: pena\r\n(23:12:35) Marinho: \u00e9 uma coisa meio fora da vis\u00e3o dos pythonistas\r\n(23:12:55) fox-guy: marinhobrandao, na nossa comunidade sempre rola essa historia da esposa hehehehe\r\n(23:13:03) Marinho: eu sou neutro nesse sentido, mas realmente, teria seu lado bom, ter uma certifica\u00e7\u00e3o, ou certificado, ou algo assim\r\n(23:13:14) andrewsmedina: eu nao gosto de certificacao\r\n(23:13:15) andrewsmedina saiu da sala (\"Leaving\").\r\n(23:13:19) andrewsmedina [n=andrews@189.60.8.128] entrou na sala.\r\n(23:13:21) semente: andrewsmedina: 2\r\n(23:13:24) fox-guy: kkkk\r\n(23:13:28) Marinho: eu sou neutro\r\n(23:13:35) semente: marinhobrandao: tipo, da um certificado j\u00e1 basta. nao?\r\n(23:13:58) andrewsmedina: para mim um papel assinado nao vale muito\r\n(23:14:03) andrewsmedina: e sim o que o cara aprendeu no curso\r\n(23:14:04) andrewsmedina: :p\r\n(23:14:05) is_magnojr: o python precisava ser mais divulgado nas faculdades.\r\n(23:14:08) Marinho: semente: talvez... eu sou o pior exemplo acad\u00eamico que existe.. meu \u00fanico certificado \u00e9 de PMI, aiuhiahuaih\r\n(23:14:10) semente: andrewsmedina: a gente poe a relacao dos alunos no site e coloca o link no certificado\r\n(23:14:11) is_magnojr: =/\r\n(23:14:15) fox-guy: marinhobrandao, eu sou neutro tb... certificacao mtas vezes \u00e9 \"golpe\", mas.... se o curso for caro e tiver um reconhecimento internacional... da\u00ed talvez valha\r\n(23:14:34) andrewsmedina: is_magnojr, o django tem sido divulgado nas faculdades cara\r\n(23:14:36) semente: eu tb nao gosto de certificados\r\n(23:14:40) Marinho: is_magnojr: esse \u00e9 um ponto que vamos conquistar muito, acho que todos est\u00e3o conscientes disso, vamos atacar essas faculdades por a\u00ed :D\r\n(23:14:41) semente: e certificacoes\r\n(23:14:42) robsonmwoc: eu n\u00e3o tenho nenhuma certifica\u00e7\u00e3o, mas sou foda mesmo assim, hehehehe\r\n(23:14:49) robsonmwoc: agente n\u00e3o pode inventar uma?\r\n(23:14:56) fox-guy: :P\r\n(23:15:00) semente: robsonmwoc:  a questao nao \u00e9 essa\r\n(23:15:02) andrewsmedina: robsonmwoc, nao acho isso legal\r\n(23:15:15) semente: a questao nao \u00e9 ter certificacao e certificado.. o problema \u00e9 que algumas pessoas pedem.\r\n(23:15:20) andrewsmedina: acho mais relevante o cara ter um commite no projeto do django que um certificado\r\n(23:15:22) fox-guy: semente, td bem nao gostar de certificados.. mas c sabe q pra trampar no governo essas coisas contam n\u00e9.. as burocracias pedem, os \u00f3rg\u00e3os de incentivo etc\r\n(23:15:27) Marinho: robsonmwoc: podemos ver isso com o Jacob, mas sinceramente? acho que podemos focar em certificados, n\u00e3o em certifica\u00e7\u00f5es... e deixar que o resto flua naturalmente\r\n(23:15:37) amaral: \u00e9 isso a\u00ed, semente\r\n(23:15:39) robsonmwoc: poiseh, mas se vamos fazer algum curso, temos q ter certificado\r\n(23:15:42) amaral: o problema \u00e9 esse\r\n(23:15:54) mm mudou seu apelido para muanis\r\n(23:15:55) Marinho: \u00e9, concordo com o Andrews\r\n(23:15:57) andrewsmedina: mas nao precisa ser algo oficial do Django\r\n(23:15:59) robsonmwoc: acho at\u00e9 q tem que registrar a parada para n\u00e3o dar problema e o certificado ser v\u00e1lido\r\n(23:16:00) semente: marinhobrandao: entao, certificacao nem o python tem pq nem precisa\r\n(23:16:04) muanis: um pitaco\r\n(23:16:13) andrewsmedina: no fisl todo mundo ganha certificado que foi na palestra e que foi no treinamento\r\n(23:16:17) andrewsmedina: na pyconbrasil tambem\r\n(23:16:21) andrewsmedina: acho que isso ja ta bom\r\n(23:16:27) semente: podemos fazer um certificado, generico e deixar um espa\u00e7o no site pra aqueles que queiram conferir quem participou do curso\r\n(23:16:35) Marinho: pois \u00e9... um certificado \u00e9 uma coisa de uma escola... ele pode at\u00e9 ter o nosso aval (da Django Brasil), mas sem envolver a Django Foundation em si\r\n(23:16:40) andrewsmedina: fala muanis (no irc nao precisa pedir permissao para falar e sim falar)\r\n(23:16:41) muanis: um certificado de um treinamento de django que seja recorrente (isto \u00e9, seja dado da mesma forma por todas as pessoas todas as vezes) pode ser interessante para o pessoal das faculdades\r\n(23:16:47) robsonmwoc: isso n\u00e3o \u00e9 inventar um?\r\n(23:17:06) Marinho: muanis: faz sentido, vou anotar l\u00e1\r\n(23:17:09) muanis: nao como uma \"certifica\u00e7\u00e3o de mercado\" ... mas como um treinamento como qualquer outro, voce certifica que o cara participou, nao que ele \u00e9 phoda\r\n(23:17:10) Groselho: Eu acho certificacao um negocio legal... te obriga a estudar algo em profundidade e \u00e9 uma prova de que vc tem proficiencia naquilo\r\n(23:17:18) semente: o lance \u00e9 que as pessoas pedem, querem colocar no curriculo e etc.\r\n(23:17:31) robsonmwoc: uhmm, pois\u00e9\r\n(23:17:33) Marinho: pois \u00e9... \u00e9 uma realidade do mercado\r\n(23:17:36) Groselho: (Eu gosto mas nao tenho nenhuma :D)\r\n(23:17:47) amaral: ser\u00e1 que n\u00e3o estamos fazendo um pouco de confus\u00e3o entre certificado = comprovante de presen\u00e7a e certificacao = comprovante de proficiencia?\r\n(23:18:00) muanis: para o meio academico isso conta pontinhos no lattes do cara, \u00e9 uma forma de atrair a aten\u00e7ao do perfil \"iniciante sem preferencia de linguagem\"\r\n(23:18:27) semente: amaral: tao sim, vamo separar as coisas pessoal.. nao tem como a gente nem cogitar certificacao, isso levara uma discussao de meses.\r\n(23:18:32) muanis: s\u00f3 que voce nao vai expandir a comunidade s\u00f3 com esses caras ....\r\n(23:18:34) Dinei: Certificado de Participa\u00e7\u00e3o \u00e9 valido pois n\u00e3o diz que o cara \u00e9 foda apenas que ele participou\r\n(23:18:35) Groselho: bom, eu voltei e peguei o papo no meio... desculpa se confundi :D\r\n(23:18:39) Marinho: eu fico pensando no governo, ou em grandes empresas... se eles n\u00e3o puderem se apoiar em alguma coisa como certifica\u00e7\u00e3o, ou certificado, vai virar uma zona, sabe? corrup\u00e7\u00e3o adoidado, essas coisas, mas como eles exigem, a corrup\u00e7\u00e3o \u00e9 uma coisa do passado... aihuiahuaiuhiauhi\r\n(23:18:39) amaral: semente, concordo\r\n(23:18:57) Marinho: \u00e9... vamos seguir adiante ent\u00e3o\r\n(23:19:16) robsonmwoc: \u00e9, nesse assunto eu viajo total\r\n(23:19:26) muanis: para expandir pra cima do pessoal que usa java? .net? ruby? brigando nao vai ser ...\r\n(23:20:22) muanis: python e mais especificamente django, tem pontos muito fortes, esse pontos tem que ser explorados, mostrar como o python pode \"fazer parte\" de uma solu\u00e7\u00e3o pode atrair a aten\u00e7ao de quem \u00e9 de mercado\r\n(23:20:46) Marinho: muanis: acho que o foco n\u00e3o pode ser brigar, mas apresentar o argumento da agilidade... eu acho que toda tecnologia tem seu espa\u00e7o... mas as vezes elas s\u00e3o usadas no espa\u00e7o errado... Flash para layout de paginas, por exemplo... \u00e9 surreal, mas acontece muito\r\n(23:21:20) andrewsmedina: marinhobrandao, a questao da agilidade para mim nao \u00e9 algo muito forte\r\n(23:21:22) is_magnojr: e como acontece\r\n(23:21:25) Groselho: da pra ganhar muito do terreno  de Java (Digo por experiencia propria)... Soh de mostrar o quanto \u00e9 mais facil e infinitamente mais rapido (e portanto mais barato) ja da pra convencer muita gente\r\n(23:21:30) andrewsmedina: alguem com rails, .net e .java pode ser agil\r\n(23:21:32) Marinho: muanis: gostei desse argumento de \"fazer parte\"... n\u00e3o \u00e9 preciso derrubar uma linguagem inteira pra adotar o Django, vc pode adota-lo numa parte onde for vantajoso\r\n(23:21:43) robsonmwoc: a agilidade \u00e9 o que guia a web2.0\r\n(23:21:53) muanis: \u00e9 muito mais f\u00e1cil comer o mercado pelas beiradas do que querer brigar para substituir algo, principalmente coisas bem estabelecidas como java, .net ... na minha visao ruby s[o nao ganha espaco por ter um discursso ou tudo ou nada\r\n(23:21:57) is_magnojr: Groselho: at\u00e9 pq foi assim que o rails apareceu tao forte na comunidade java\r\n(23:21:58) Dinei: N\u00e3o sei se tem pessoas fodas aqui em Interfaces ... mas poderia misturar nos cursos um pouco de flex ... que d\u00e1 efeitos muito atrativos\r\n(23:22:06) robsonmwoc: hoje n\u00e3o temos mais mega-software, e sim uma por\u00e7\u00e3o de aplica\u00e7\u00f5es pequenas\r\n(23:22:09) Dinei: e \u00e9 uma coisa que n\u00e3o vi muito\r\n(23:22:10) Marinho: andrewsmedina: isso \u00e9 subjetivo... na pratica, para alguem ser agil em Java, \u00e9 preciso uma curva de aprendizado imensa\r\n(23:22:31) andrewsmedina: marinhobrandao, isso que queria mostrar :)\r\n(23:22:51) andrewsmedina: marinhobrandao, rails \u00e9 agil, mas porque usar django e nao rails?\r\n(23:23:20) Marinho: eu acho que uma coisa \u00e9 agil quando ela \u00e9 agil at\u00e9 mesmo para ser descartada... e isso, s\u00f3 com um custo de ado\u00e7\u00e3o baixo, e tamb\u00e9m que seja acopl\u00e1vel... nesses sentidos, o Django est\u00e1 entre os melhores\r\n(23:23:25) Dinei: andrewsmedina: Documenta\u00e7\u00e3o de qualidade pode ser um ponto crucial\r\n(23:23:31) Groselho: Um ponto importante \u00e9 mostrar que da pra fazer coisas fod\u00e1sticas.... Soh pra citar um caso: Tem um cara ai que \u00e9 Diretor de TI de uma empresa e ele tem um sistema feito em PHP que atende muito bem a demanda... mas o danado quer migrar pra Java pq acha que sistema em PHP nao aguenta muito usuario\r\n(23:23:41) Dinei: entre os dois frameworks\r\n(23:23:52) Groselho: AppEngine \u00e9 um ponto forte a favor\r\n(23:23:55) Marinho: eu creio que entre Django e Rails, o argumento \u00e9 o Python, os cases, os grandes portais que o usam... eu acho que \u00e9 mais facil vc consertar um framework do que uma linguagem\r\n(23:24:17) Groselho: O Ruby on Rails tem (ou pelo menos tinha) serios problemas de performance\r\n(23:24:28) Groselho: Nao sei se agora com o suporte da JVM da Sun melhorou\r\n(23:24:42) robsonmwoc: toda linguagem tem problemas de performance, se a arquitetura do software for mal feita\r\n(23:24:46) Marinho: Groselho: muito disso \u00e9 mito... e outra parte est\u00e1 sendo solucionada com o Ruby 1.9 e 2.0...\r\n(23:24:52) nosklo: \"n\u00e3o escala\"\r\n(23:25:03) Dinei: Porque os exemplos s\u00e3o grandes empresas ... ou mesmo cases de muito sucesso\r\n(23:25:03) Marinho: eu creio que quanto ao Rails n\u00e3o h\u00e1 muitos argumentos, porque estamos no mesmo grupo\r\n(23:25:15) Dinei: N\u00e3o poderia ser fa\u00e7a facil....\r\n(23:25:19) andrewsmedina: marinhobrandao, na verdade h\u00e1\r\n(23:25:22) Dinei: E r\u00e1pido\r\n(23:25:29) andrewsmedina: as m\u00e1gicas que o rails faz \u00e9 o ponto fraco dele :p\r\n(23:25:34) Marinho: andrewsmedina: ent\u00e3o joga a\u00ed pra gente :D\r\n(23:25:40) robsonmwoc: hehehe\r\n(23:25:45) Marinho: mas eu acho o Django mais m\u00e1gico do que ele\r\n(23:26:01) andrewsmedina: marinhobrandao, acha?\r\n(23:26:15) #django-br: O t\u00f3pico do #django-br \u00e9: [REUNIAO] Planejamento: http://docs.google.com/Doc?id=ah97h8m3npt9_80gjdnnh9t&pli=1\r\n(23:26:22) Marinho: control+w do cacete\r\n(23:26:25) Marinho: eu acho\r\n(23:26:33) Groselho: Bom, pra um cara que toma a decis\u00e3o nao importa se \u00e9 magica ou nao... atendendo a demanda e sendo rapido de desenvolver \u00e9 o importa\r\n(23:26:56) andrewsmedina: Groselho, ja deu manutencao em um codigo onde tu nao sabe como as coisas funcionam\r\n(23:27:04) Groselho: Se isso importasse ninguem usava .NET  (oia eu fazendo o q critiquei :D)\r\n(23:27:05) Marinho: era o que eu ia dizer... rs\r\n(23:27:11) robsonmwoc: para quem manja mesmo, ele vai testar os dois, e sentir na pele para saber qual \u00e9 o melhor para ele, foi assim q eu fiz\r\n(23:27:22) Groselho: Vixiiii .... muita manutencao em codigo porco\r\n(23:27:23) semente: andrewsmedina: uma vantagem \u00e9 o ponei rosa\r\n(23:27:30) ***andrewsmedina acha que estamos abstraindo demais\r\n(23:27:36) Groselho: mas quem se ferrava era eu... o dono da empresa ta nem ai\r\n(23:27:39) Marinho: acho que falou tudo... alias, eu defendo o rosa como cor oficial!\r\n(23:27:40) Marinho: aihuaihuai\r\n(23:27:40) andrewsmedina: vamos voltar ao foco?\r\n(23:27:47) semente: vamos\r\n(23:27:53) robsonmwoc: quando eu olhei o django a primeira vez, torci a cara, mas eu n\u00e3o gostava de ruby, e mesmo assim testei o rails para ver se n\u00e3o era melhor, e por isso estou aqui, hehehe\r\n(23:27:54) andrewsmedina: marinhobrandao, sai fora\r\n(23:27:58) Marinho: \u00e9 verdade, vamos l\u00e1 :)\r\n(23:28:06) robsonmwoc: qual \u00e9 o proximo assunto? evento django summit latin america?\r\n(23:28:07) andrewsmedina: mais um ataque de baitolice e \u00e9u que vo te kickar ein :p\r\n(23:28:13) andrewsmedina: =)\r\n(23:28:25) Groselho: hehehe\r\n(23:28:29) Marinho: bom, sobre o evento do ano que vem, acho que \u00e9 uma coisa melhor de ver com a presen\u00e7a do Luciano Ramalho, pq \u00e9 uma ideia dele, e com certeza ele \u00e9 a pessoa melhor pra falar a respeito\r\n(23:28:34) Groselho: Bom... tenho que ir... at\u00e9 mais pessoal\r\n(23:28:42) semente: Groselho: flw, vlw!\r\n(23:28:43) Marinho: Groselho: valeu demais, abra\u00e7os :D\r\n(23:28:49) robsonmwoc: flow Groselho\r\n(23:28:53) semente: marinhobrandao: tb acho. passa esse topico pra proxima reuniao\r\n(23:28:55) robsonmwoc: vamos para o proximo ent\u00e3o\r\n(23:29:02) Groselho saiu da sala (quit: \"Leaving\").\r\n(23:29:06) Marinho: 50 Items no CookBook\r\n(23:29:34) Marinho: eu acho uma meta totalmente alcan\u00e7\u00e1vel, s\u00f3 acho que a tradu\u00e7\u00e3o da documenta\u00e7\u00e3o \u00e9 mais importante, ent\u00e3o talvez por isso fica meio travado\r\n(23:29:36) semente: marinhobrandao: falta qtos?\r\n(23:29:41) Marinho: temos uns 13\r\n(23:29:51) semente: marinhobrandao: tb acho, vamos focar na documentacao\r\n(23:30:13) robsonmwoc: semente: onde paramos com a documenta\u00e7\u00e3o?\r\n(23:30:14) semente: marinhobrandao: penso que \u00e9 meta ate o fim do ano acabarmos a tradu da 1.0\r\n(23:30:22) Marinho: eu estava pensando em lan\u00e7armos uma lista de cookbooks, s\u00f3 pelos titulos, e a\u00ed as pessoas iam l\u00e1 e iam fazendo... mas como eu falei: eu acho que \u00e9 pioridade concluir a documenta\u00e7\u00e3o antes disso\r\n(23:30:23) muanis: a documentacao traduzida foi impecilho para alguem aqui comecar a usar django?\r\n(23:30:23) semente: robsonmwoc: temos que refatorar ela\r\n(23:30:32) robsonmwoc: :(\r\n(23:30:36) semente: marinhobrandao: boa!\r\n(23:30:48) andrewsmedina: se pegarmos os itens que o marin tem no snippets passamos hj mesmo os 50 itens do cookbook :p\r\n(23:30:50) semente: robsonmwoc: eu posso refatorar ela, mas precisa ser em novembro. esse mes ta foda\r\n(23:30:51) Marinho: muanis: eu diariamente recebo pessoas com dificuldades b\u00e1sicas em Django por falta de documenta\u00e7\u00e3o em portugues... \u00e9 um problema gritante\r\n(23:30:59) Marinho: aihuaihuiauhaihia\r\n(23:31:14) semente: andrewsmedina: mas o marinho tem ate snippet pra deixar o admin rosa la.\r\n(23:31:39) redpill: hduSDHUSADHUHA\r\n(23:31:40) andrewsmedina: por falar em traducao\r\n(23:31:40) Marinho: bom, ent\u00e3o... mas refatorar \u00e9 somente uma parte do trabalho, n\u00e3o?\r\n(23:31:45) andrewsmedina: se alguem quiser ajudar o babelwiki\r\n(23:31:47) andrewsmedina: esteja a vontade :p\r\n(23:31:51) Marinho: porque a impress\u00e3o que d\u00e1 \u00e9 que a documenta\u00e7\u00e3o foi amplamente ajustada\r\n(23:31:51) robsonmwoc: bom, temos q fazer ent\u00e3o\r\n(23:31:57) robsonmwoc: eu tamb\u00e9m estou atolado este m\u00eas\r\n(23:31:58) semente: mas \u00e9 uma boa ideia pegar coisas no django snippets que sao recorrentes na lista\r\n(23:32:03) andrewsmedina: marinhobrandao, agora usam sphinx\r\n(23:32:08) amaral: muanis, talvez pra ningu\u00e9m aqui, mas vc ficaria surpreso com a quantidade de gente boa que me cobra documenta\u00e7\u00e3o em portugu\u00eas qdo mostro python/django\r\n(23:32:09) andrewsmedina: a estrutura foi mudada\r\n(23:32:12) semente: marinhobrandao: sim, sem refatorar nao da pra fazer mais nada\r\n(23:32:24) Marinho: e como isso funciona? digo, o Sphinx? (nao conheco, s\u00f3 sei o nome)\r\n(23:32:36) robsonmwoc: andrewsmedina: tu chegou a olhar as modifica\u00e7\u00f5es que eu fiz no babelwiki?\r\n(23:32:51) semente: marinhobrandao: ele gera documentacao em pdf, html e etc usando distutils.\r\n(23:32:59) andrewsmedina: robsonmwoc, sim\r\n(23:33:00) robsonmwoc: eu s\u00f3 conhe\u00e7o o sphinxsearch\r\n(23:33:01) andrewsmedina: :)\r\n(23:33:03) Marinho: humm\r\n(23:33:09) andrewsmedina: robsonmwoc, estou pensando como fazer o merge :p\r\n(23:33:18) robsonmwoc: bahhh\r\n(23:33:33) robsonmwoc: \u00e9 q eu n\u00e3o tinha autoriza\u00e7\u00e3o para comitar no svn\r\n(23:33:37) andrewsmedina: para quem nao conhece o sphinx = http://sphinx.pocoo.org/\r\n(23:33:45) andrewsmedina: temos que criar um css para usar no sphinx e etc\r\n(23:33:56) andrewsmedina: eu acho que podiamos fazer um deploy automatico para a documentacao\r\n(23:33:59) Marinho: semente: bom, tem algo que podemos fazer para facilitar o seu trabalho da refatora\u00e7\u00e3o? pergunto, porque acho que a refatora\u00e7\u00e3o em si deveria ser feito por uma pessoa o mais adiantada no assunto o poss\u00edvel.. eu mesmo seria uma perda de tempo quebrar a cabe\u00e7a... estou fora desse assunto\r\n(23:34:08) semente: marinhobrandao: mas a ajuda na traducao parou depois da refatora\u00e7\u00e3o. nao sei se da pra terminar toda a traducao, mas 80% da.\r\n(23:34:11) andrewsmedina: um cron que faz o build do sphinx se algo for comitado na doc\r\n(23:34:33) semente: andrewsmedina: sim, isso sera possivel\r\n(23:34:43) semente: andrewsmedina: talvez a doc v\u00e1 ate pro docs.djangoproject.com tb\r\n(23:34:48) robsonmwoc: isso seria o ideal\r\n(23:34:49) andrewsmedina: semente, se quiserem.. quando tiver tempo posso fazer isso :p\r\n(23:35:06) semente: marinhobrandao: eu to mto ocupado esse mes, mas assim que pintar um tempo eu vejo isso. talvez final de semana\r\n(23:35:14) robsonmwoc: andrewsmedina: o que precisaria ser feito para continuarmos o babelwiki, a partir de novembro \u00e9 claro, hehehe\r\n(23:35:28) semente: andrewsmedina: do que ta falando?\r\n(23:35:51) andrewsmedina: semente, do build da doc\r\n(23:36:00) andrewsmedina: e posso ajudar na restruturacao dos arquivos para sphinx\r\n(23:36:05) ***andrewsmedina ta craque em sphinx\r\n(23:36:18) andrewsmedina: robsonmwoc, vamos fazer uma lista para o babel\r\n(23:36:22) andrewsmedina: e comecar a discutir mais? :p\r\n(23:36:29) semente: andrewsmedina: ah sim, o maior problema \u00e9 revisar toda a doc traduzida, e adaptar a nova doc sacou?\r\n(23:36:29) andrewsmedina: e abrir para quem quiser ajudar\r\n(23:36:48) andrewsmedina: semente, acho que devemos ser mais 'release erly, relese often' quanto a traducao\r\n(23:37:08) Marinho: bom, vamos ent\u00e3o marcar um dia para fazer um brainstorm desse sobre documenta\u00e7\u00e3o, com a turma de l\u00e1... e a\u00ed a gente estabelece metas\r\n(23:37:11) semente: andrewsmedina: mta coisa \u00e9 s\u00f3 jogar o arquivo no lugar novo e tal, mas ha mta coisa que se dividiu em dois. isso leva um pouco de tempo\r\n(23:37:11) andrewsmedina: temos muito traduzido e nao publicado por falta e revisao\r\n(23:37:24) andrewsmedina: semente, sim\r\n(23:37:32) andrewsmedina: eu acho que essa restruturacao sera facil\r\n(23:37:34) andrewsmedina: e rapia :p\r\n(23:37:35) andrewsmedina: :)\r\n(23:37:41) robsonmwoc: acho que \u00e9 uma boa andrewsmedina\r\n(23:37:45) semente: andrewsmedina: sim \u00e9 verdade. acho que podemos marcar um dia pra pelo menos criar a estrategia pra isso e verificar qual a demanda necessaria\r\n(23:37:56) robsonmwoc: at\u00e9 pq eu nem lembro mais o que fiz naquela \u00e9poca, hehehe\r\n(23:38:06) andrewsmedina: semente, lembrando que mudando para o sphinx a sintaxe mudou um pouco tambem\r\n(23:38:10) andrewsmedina: robsonmwoc, ahuauha\r\n(23:38:13) semente: andrewsmedina: hmm\r\n(23:38:26) Marinho: bom, s\u00f3 pra a gente caminhar pra fechar\r\n(23:38:43) Marinho: vamos ent\u00e3o tentar marcar at\u00e9 sexta, um dia para essa reuni\u00e3o sobre a documenta\u00e7\u00e3o?\r\n(23:38:48) robsonmwoc: andrewsmedina: nem sei se tenho aquele c\u00f3digo, pois o meu notebook queimou, e tava dentro dele, hehehe\r\n(23:38:55) semente: marinhobrandao: escreve ai que precisamos marcar um dia\r\n(23:38:55) andrewsmedina: marinhobrandao, acho que nao precisa de reuniao\r\n(23:38:59) andrewsmedina: podemos trabar isso pela lista\r\n(23:39:03) semente: andrewsmedina: 2\r\n(23:39:04) andrewsmedina: lista de traducao\r\n(23:39:12) robsonmwoc: marinhobrandao: acho bom, pq est\u00e1 ficando tarde, e eu estou come\u00e7ando a ficar lento\r\n(23:39:13) ***andrewsmedina evita reunioes :p\r\n(23:39:20) Marinho: andrewsmedina: sakei... faz sentido... se a reuni\u00e3o se fizer necess\u00e1rio, a gente marca :)\r\n(23:39:31) andrewsmedina: marinhobrandao, ok\r\n(23:39:39) semente: andrewsmedina: anota ai na sua cabe\u00e7a de mandar uma msg la na lista l10n qto a isso\r\n(23:40:10) robsonmwoc: agente pode discutir algumas coisas pela lista, antes de fazer uma reuni\u00e3o mesmo, ela tem funcionado bem para isso\r\n(23:40:16) Marinho: semente: anotei aqui pra algu\u00e9m fazer isso :)\r\n(23:40:19) semente: marinhobrandao: acho que pode passar pra outro topico\r\n(23:40:26) Marinho: robson: concordo\r\n(23:40:27) semente: robsonmwoc: sim.\r\n(23:40:39) Marinho: bom, eu acho que s\u00f3 falta um topico em se tratando de metas, e a\u00ed a gente pode fechar...\r\n(23:40:43) Marinho: \u00e9 sobre o Premio Info\r\n(23:40:50) semente: marinhobrandao: falta sprints.\r\n(23:41:08) Marinho: semente: os sprints do FISL e PyCon ?\r\n(23:41:21) semente: marinhobrandao: sim, mas isso pode ficar pra depois\r\n(23:41:29) robsonmwoc: sprint precisa ser ao vivo?\r\n(23:41:34) semente: marinhobrandao: premio info pode ser um artigo no blog, repassado para noticias linux e br-linux.\r\n(23:41:45) semente: robsonmwoc: ao vivo tb. \u00e9 legal\r\n(23:41:53) Marinho: eu acho que o sprint na verdade \u00e9 parte do assunto dos eventos... mas esquecemos de falar sobre eles mesmo\r\n(23:42:06) semente: marinhobrandao: coloca ele la como sub item dos eventos\r\n(23:42:13) Marinho: vamos deixar la pra ver com detalhes depois ent\u00e3o, porque acho que \u00e9 mais extenso, e seria legal concluir em uns 10 minutos :)\r\n(23:42:18) andrewsmedina: semente, quanto a que?\r\n(23:42:43) semente: andrewsmedina: os sprints?\r\n(23:42:50) andrewsmedina: semente, do email na lista\r\n(23:42:51) andrewsmedina: :p\r\n(23:43:05) robsonmwoc: hein?\r\n(23:43:06) semente: andrewsmedina: nuh, nao sei quem ta mais morto...\r\n(23:43:12) Marinho: pois \u00e9, sobre o Premio Info, acho que n\u00e3o h\u00e1 muito a falar: temos que fazer as pessoas saberem dele, e se temos alguma chance de ganhar, seria uma boa divulga\u00e7\u00e3o... a chance \u00e9 pequena, mas n\u00e3o custa gastar 10 reais e mandar, na minha opiniao\r\n(23:43:16) andrewsmedina: to gribado\r\n(23:43:17) semente: andrewsmedina: o marinho ja anotou no doc\r\n(23:43:19) andrewsmedina: to cansado :p\r\n(23:43:22) andrewsmedina: :p\r\n(23:43:33) andrewsmedina: =)\r\n(23:43:41) is_magnojr: ficando tarde. vou nessa. t+ gente. At\u00e9 a proxima.\r\n(23:43:45) andrewsmedina: dai acabo ficando meio relapso\r\n(23:43:45) Marinho: bom, eu tamb\u00e9m esgotei: algo mais ou podemos ir embora? rs\r\n(23:43:46) robsonmwoc: n\u00e3o sabia do premio info\r\n(23:43:48) semente: andrewsmedina: tb. mas era s\u00f3 pra falar da refatoracao da doc na lista\r\n(23:43:51) andrewsmedina: is_magnojr, t+\r\n(23:43:53) robsonmwoc: falow\r\n(23:43:53) semente: andrewsmedina: pra lembrar na lista\r\n(23:43:55) andrewsmedina: podemos ir embora :p\r\n(23:43:57) andrewsmedina: semente, lembro sim\r\n(23:44:14) semente: marinhobrandao: fechado\r\n(23:44:23) is_magnojr saiu da sala (quit: \"ChatZilla 0.9.83 [Firefox 3.0.1/2008070206]\").\r\n(23:44:25) Marinho: robsonmwoc: prometo jogar algo no blog amanh\u00e3 cedo\r\n(23:44:30) semente: amanha a gente reorganiza o documento, passa algumas ocisas pra ser discutidas depois e etc.\r\n(23:44:36) Marinho: gente, abra\u00e7os ent\u00e3o.... quem val salvar a conversa pra por em log ?\r\n(23:44:43) semente: marinhobrandao: eu\r\n(23:44:49) robsonmwoc: sobre oq marinhobrandao?\r\n(23:44:55) robsonmwoc: sobre a reuni\u00e3o?\r\n(23:44:55) Marinho: sobre o Premio Info\r\n(23:45:00) robsonmwoc: ahhhh\r\n(23:45:01) robsonmwoc: legal\r\n(23:45:03) semente: marinhobrandao: salvei\r\n(23:45:12) Marinho: sobre a reuniao, vamos colocar tamb\u00e9m, mas acho que l\u00e1 pro fim do dia\r\n(23:45:23) Marinho: abra\u00e7os ent\u00e3o, estou indo... :)\r\n(23:45:29) robsonmwoc: boa parte das coisas das metas, n\u00f3s j\u00e1 discutimos no meio disso tudo\r\n(23:45:37) andrewsmedina: marinhobrandao, algo no blog sobre?\r\n(23:45:39) semente: marinhobrandao: ixi\r\n(23:45:40) robsonmwoc: falow gurizada, vou ver desenhos\r\n(23:45:44) semente: alguem pode salvar o log?\r\n(23:45:52) amaral: at\u00e9 mais, pessoal\r\n(23:46:03) semente: aqui nao pegou de 22h ate as 22h30\r\n(23:46:27) robsonmwoc: aqui tamb\u00e9m n\u00e3o\r\n(23:46:30) robsonmwoc: carai\r\n(23:46:33) Marinho: eu perdi quase tudo quando dei ctrl+w\r\n(23:46:37) robsonmwoc: o chanserv n\u00e3o loga?\r\n(23:46:47) Marinho: s\u00f3 tenho  depois das 23:36\r\n(23:46:59) ***andrewsmedina tambem nao deixou gravando os logs\r\n(23:47:29) Marinho: ali\u00e1s, EU TENHO\r\n(23:47:31) robsonmwoc: ahh, n\u00e3o d\u00e1 nada, eu lembro de tudo, hehehe\r\n(23:47:32) semente: eu achei que ia manter tudo aqui... so que as mensagens antigas foi sumindo\r\n(23:47:36) semente: marinhobrandao: otimo!\r\n(23:47:46) Marinho: vou mandar pra vc em e-mail, da\u00ed vc faz o q tiver q fazer\r\n(23:47:47) semente: foi mta msg. :-P\r\n(23:47:55) semente: marinhobrandao: ta, eu mesclo tudo\r\n(23:47:58) Marinho: :)\r\n(23:48:01) amaral saiu da sala (quit: \"Ex-Chat\").\r\n(23:48:20) robsonmwoc: bom vou ver death note!!!, falow pessoal metal pra todo mundo \\m/\r\n(23:48:36) semente: robsonmwoc: que \u00e9?", "enable_comments": 0}}]
